/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/trainer/ppo_trainer.py:239: UserWarning: No dataset is provided. Make sure to set config.batch_size to the correct value before training.
  warnings.warn(
Index(['type', 'name', 'expression'], dtype='object')
Working with expression:  2 * x[0] + 3
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x**4 + 2*x 0.0000
None 0.0000
x**2/sin(1) 0.0207
4*x*asinh(x) 0.0906
None 0.0000
2*tan(x) 0.4731
None 0.0000
x**2 - 3*x 0.0245
x*(x - 8) 0.0244
None 0.0000
None 0.0000
2*x + cosh(x) 0.0000
None 0.0000
6*x + 2 0.3333
2*x**2 + 5*x 0.0124
x**(3/2)/4 0.0000
None 0.0000
exp(3*x + 2) 0.0000
x**2 - sin(x) 0.0245
3*x**2*asin(2*x)**2 0.0000
3*x**3 + x*log(x) + x 0.0000
1 0.0000
None 0.0000
None 0.0000
x*(x**3 + x + 5) 0.0000
-x**2/4 + x 0.0908
-2*x**3 + x 0.0001
None 0.0000
5*x**3 + 2*x 0.0001
<lambdifygenerated-10>:2: RuntimeWarning: invalid value encountered in power
  return (1/4)*x**(3/2)
<lambdifygenerated-13>:2: RuntimeWarning: invalid value encountered in arcsin
  return 3*x**2*arcsin(2*x)**2
<lambdifygenerated-14>:2: RuntimeWarning: invalid value encountered in log
  return 3*x**3 + x*log(x) + x
<lambdifygenerated-21>:2: RuntimeWarning: overflow encountered in exp
  return (1/4)*exp(2*x**2 + 5)
<lambdifygenerated-24>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + 3
<lambdifygenerated-25>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x**3*arctanh(x)
<lambdifygenerated-25>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**3*arctanh(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-29>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x*log(6*x) - 4*x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-35>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)
<lambdifygenerated-39>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2*log(x)
<lambdifygenerated-40>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*arctanh(2)/x
<lambdifygenerated-41>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - tan(x)
<lambdifygenerated-42>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 5)
<lambdifygenerated-43>:2: RuntimeWarning: invalid value encountered in power
  return (1/3)*sqrt(3)*x**(3/2)
x**2 + x - 1 0.0245
exp(2*x**2 + 5)/4 0.0000
x/log(3)**2 0.6305
x**9 + 2*x 0.0000
None 0.0000
sqrt(x) + x + 3 0.0000
x**3*atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
1174*x**5 0.0000
None 0.0000
None 0.0000
x**2 + sin(x) 0.0245
None 0.0000
(x + 8)/x 0.5003
x**2/2 + x*log(6*x) - 4*x 0.0000
-5*x**5 0.0000
x - 1/x**2 0.6665
5 - 6*x 0.2000
x**20 + 5*x 0.0000
None 0.0000
sin(4*x)/4 0.5000
5*log(x) 0.0000
2*x*(2*x + 3) 0.0062
x**5/5 - x**3/3 0.0000
x**2 - x + cos(x) 0.0245
None 0.0000
2*x**2*log(x) 0.0000
atanh(2)/(2*x) 0.0000
log(x) - tan(x) 0.0000
asin(x + 5) 0.0000
sqrt(3)*x**(3/2)/3 0.0000
None 0.0000
(x + 5)**2 0.0242
1/(x**2 - x) 0.5000
x*cos(2*x) 0.4635
None 0.0000
x*(x**2 + x) 0.0003
None 0.0000
x*(4 - x) 0.0245
x**2 + x*log(x**2) 0.0243
None 0.0000
5*x**2 + x 0.0050
sqrt(2*x**2 + 2*x + 15) + exp(x) 0.0000
None 0.0000
x**2 + 2*x 0.0245
x**3/8 0.0023
x*acos(3*x) - sqrt(1 - x**2)/3 0.0000
x**4/4 - x - log(cos(x)) 0.0000
x**3*log(4)/3 0.0006
x**3/3 + x**2 0.0009
None 0.0000
x/28 0.5045
2*x**3/3 + 3*x 0.0004
x**2/2 - sinh(x) 0.0000
x**4/12 + x**3/3 0.0000
None 0.0000
None 0.0000
None 0.0000
6*x**3 0.0000
None 0.0000
3*x**2 - 16*x 0.0083
x*exp(-2*x) 0.0000
None 0.0000
(x**2 + x)**3 0.0000
None 0.0000
x**3*log(2) 0.0004
x**3/3 + 9*x**2/2 0.0009
x**2 + x + exp(x) 0.0000
x*atan(2*x) - x - 2*atan(2*x) 0.3710
x*(x**6 + 4*x) 0.0000
x**2 + 2*x + log(x) 0.0000
x**2/sinh(4) 0.3659
2*x**(7/2)/7 - x**2 0.0000
None 0.0000
x**2/2 + 2*log(x) 0.0000
4 - x**2 0.0244
-x**4/4 + 2*x 0.0000
None 0.0000
None 0.0000
x**2*cos(3)/2 + x**2/2 0.4973
None 0.0000
None 0.0000
None 0.0000
1/(23*x) 0.5000
12*(x + 3)**2 0.0021
x**2/2 - x - exp(x) 0.0000
sqrt(x) - log(x) 0.0000
x*atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x + tan(1) 0.9881
-x**3 - 4*x 0.0003
2*x**2 + 8*x 0.0124
None 0.0000
x + 3 0.6666
None 0.0000
sin(3*x) 0.5001
sqrt(3)*sqrt(x)*acos(x) 0.0000
x**3/36 0.0105
None 0.0000
None 0.0000
2*x**3/3 + 5*x**2/2 0.0004
None 0.0000
2*x**(5/2)/5 + 4*x 0.0000
-x*cos(x) + x 0.6270
None 0.0000
2*x**2*tan(x) + x 0.0012
sqrt(3)*sqrt(x) + x 0.0000
None 0.0000
None 0.0000
x**2 + log(x) 0.0000
None 0.0000
x*log(x**5) 0.0000
sin(x)/cos(x) 0.4906
None 0.0000
None 0.0000
None 0.0000
2*x**3/3 + x**2 0.0004
-x**3 + 10*x 0.0003
x**2*exp(2*x)/2 + exp(2*x)/2 0.0000
None 0.0000
3*x**2/2 + 2*x 0.0164
-1/(4*log(x)**2) 0.0000
6*log(x) 0.0000
x + sin(5) 0.6664
-x**2/2 + x*log(x) + x 0.0000
2*x**3/3 + 9*x**2/2 0.0004
None 0.0000
None 0.0000
x**2/2 + x/4 0.0478
4*x**2*exp(2*x) 0.0000
2*x**3/3 0.0004
-x*exp(x) + sin(x) 0.0000
-3*x + 3*cos(x) 0.2859
(x + 1)*(3*x + 5) 0.0083
0 0.0000
None 0.0000
x**5 + x + exp(x) 0.0000
x**4/64 0.0002
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x + acosh(sqrt(x)) 0.0000
x*tanh(2*x) + x - log(tanh(2*x) + 1)/2 0.0000
None 0.0000
(x**2 - x)**2 0.0000
9*log(x) 0.0000
x**3*(x + 2) 0.0000
x + tan(x + 2) 0.6263
None 0.0000
x**3/(3*sin(1)) 0.0007
x*(exp(x) + 4) 0.0000
x**3*(x**2 + x) 0.0000
None 0.0000
None 0.0000
x**2 + 2*x 0.0245
x**6/6 + x**2/2 0.0000
(x + 2)*log(x) 0.0000
3*x**2*cosh(x) + 3*x*sinh(x) - 3*cosh(x) 0.0000
(x**2 + x)/x 0.6666
x**2/2 + x*sin(x) - cos(x) 0.0481
12*x**2 - x + 5*log(x + 5) 0.0000
x*(x + atan(2*x))**3 0.0000
None 0.0000
2*x - 4 0.9448
None 0.0000
2*x**(5/2)/5 + 2*x**3/3 + exp(x) 0.0000
None 0.0000
None 0.0000
(x + sin(x))/x 0.5000
x*tan(1) 0.8181
x**2 - log(cos(x)) 0.0000
x**2*log(x) + x 0.0000
4*x**(5/2) 0.0000
None 0.0000
exp(2*x**2)/4 0.0000
2*x + 10/x 0.9735
x**2 0.0245
x**2 + sin(x) 0.0245
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
9*x/5 0.9068
x**2 + x*log(x) + 2*x 0.0000
x**3/(x + 3) 0.0244
x**2*cosh(1) 0.0160
x**2/5 0.1112
x**3/3 - x**2*log(x)/2 + x 0.0000
x**6/6 + 3*x**5/5 0.0000
x/(x**2 + 2) 0.5000
x*tan(4) 0.7035
cosh(x + 1) 0.0000
x**2/2 + log(2*x + 1) 0.0000
x**4/4 - x**2/2 0.0000
log(2*x)/x 0.0000
x**2/2 + x*tan(1) 0.0478
x**2/2 + x*sin(1) 0.0478
x**2*sinh(1)/2 0.0410
cosh(x + 5) 0.0000
None 0.0000
2*x - 2 0.9600
None 0.0000
(x**2 + 2*x)**3 0.0000
2*x**2*atanh(x) 0.0000
x**5/5 + 5*x**2/2 0.0000
None 0.0000
-x*atanh(x) + log(x + 1) - atanh(x) 0.0000
x*(exp(x) + 2) 0.0000
x/(x**2 + 1) 0.5000
None 0.0000
x**5/5 + 7*x**4/4 0.0000
2*x*log(x**2) - 2*x 0.1307
pi*x**2/2 0.0157
2*x**(5/2)/5 0.0000
x**2/sin(x) + x 0.0035
2*x*(x - 2) 0.0124
(x**2 - x)**2 0.0000
x*atan(x) + log(x**2 + 1)/2 - atan(x) 0.4395
x**3/3 + 5*x**2/2 0.0009
None 0.0000
<lambdifygenerated-54>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(3*x) - 1/3*sqrt(1 - x**2)
<lambdifygenerated-54>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccos(3*x) - 1/3*sqrt(1 - x**2)
<lambdifygenerated-55>:2: RuntimeWarning: invalid value encountered in log
  return (1/4)*x**4 - x - log(cos(x))
<lambdifygenerated-71>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + 2*x + log(x)
<lambdifygenerated-73>:2: RuntimeWarning: invalid value encountered in power
  return (2/7)*x**(7/2) - x**2
<lambdifygenerated-74>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + 2*log(x)
<lambdifygenerated-81>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - log(x)
<lambdifygenerated-81>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) - log(x)
<lambdifygenerated-82>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-82>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-88>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(3)*sqrt(x)*arccos(x)
<lambdifygenerated-88>:2: RuntimeWarning: invalid value encountered in arccos
  return sqrt(3)*sqrt(x)*arccos(x)
<lambdifygenerated-91>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + 4*x
<lambdifygenerated-94>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(3)*sqrt(x) + x
<lambdifygenerated-95>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + log(x)
<lambdifygenerated-96>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**5)
<lambdifygenerated-102>:2: RuntimeWarning: invalid value encountered in log
  return -(1/4)/log(x)**2
<lambdifygenerated-103>:2: RuntimeWarning: invalid value encountered in log
  return 6*log(x)
<lambdifygenerated-105>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 + x*log(x) + x
<lambdifygenerated-116>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + arccosh(sqrt(x))
<lambdifygenerated-117>:2: RuntimeWarning: divide by zero encountered in log
  return x*tanh(2*x) + x - 1/2*log(tanh(2*x) + 1)
<lambdifygenerated-119>:2: RuntimeWarning: invalid value encountered in log
  return 9*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-127>:2: RuntimeWarning: invalid value encountered in log
  return (x + 2)*log(x)
<lambdifygenerated-131>:2: RuntimeWarning: invalid value encountered in log
  return 12*x**2 - x + 5*log(x + 5)
<lambdifygenerated-134>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + (2/3)*x**3 + exp(x)
<lambdifygenerated-137>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - log(cos(x))
<lambdifygenerated-138>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x) + x
<lambdifygenerated-139>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(5/2)
<lambdifygenerated-140>:2: RuntimeWarning: overflow encountered in exp
  return (1/4)*exp(2*x**2)
<lambdifygenerated-145>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + x*log(x) + 2*x
<lambdifygenerated-149>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 - 1/2*x**2*log(x) + x
<lambdifygenerated-154>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + log(2*x + 1)
<lambdifygenerated-156>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)/x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-163>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x**2*arctanh(x)
<lambdifygenerated-163>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x**2*arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: divide by zero encountered in arctanh
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in arctanh
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: divide by zero encountered in log
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in log
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in subtract
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-171>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2)
You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
mean: 0.07989633828401566
top: 0.9881134033203125
Saving results...
Working with expression:  x[0]**2 - 5 * x[0] + 6
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
-log(cos(x/2) + 1)/2 0.3968
None 0.0000
x/2 + 3*atanh(x)/x 0.0000
None 0.0000
None 0.0000
x*(sqrt(x) + x + sinh(x)) 0.0000
None 0.0000
-cos(x - 1) 0.3968
9*x**2 + x 0.0761
None 0.0000
None 0.0000
x*cos(3*x) + sin(x/3) 0.3963
None 0.0000
log(log(sin(x) + 1) - cos(x)) 0.0000
1/(10*x**2) 0.3968
x*(3 + x**(-4)) + x 0.3961
None 0.0000
None 0.0000
-x**4/10 0.0009
x*(x**2 + 10) 0.0076
None 0.0000
4*sqrt(2)/(3*x) 0.3968
cos(sqrt(2)*x/3) - 1/(3*x**2) 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x/2 + sin(15*x) 0.3968
atanh(x) + 4 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2/2 + x + sinh(x) 0.0000
None 0.0000
cos(x)**10/116 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x/cos(4) 0.3970
x**2 + 5*exp(x) 0.0000
None 0.0000
cos(5*x)/12 0.3968
sinh(x + 4) 0.0000
x*asinh(1/x) 0.3969
None 0.0000
None 0.0000
None 0.0000
atanh(x)/2 0.0000
None 0.0000
log(x**(-5/2)) 0.0000
None 0.0000
None 0.0000
3*x + exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
-exp(x + 1) 0.0000
None 0.0000
tan(4*sqrt(3)*x**(3/2)/3) 0.0000
None 0.0000
sqrt(5*x**2 + 1) + 12*sin(x) 0.4035
x**3/3 + (x - 3)*exp(x) 0.0000
None 0.0000
None 0.0000
4/cos(x)**2 + 5/x**(3/2) 0.0000
sin(2*x) + 1/x 0.3968
1/(2*x**10) 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-1/(2*(x - 3)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*cosh(log(x)) - x 0.0000
None 0.0000
None 0.0000
sin(2/x**2)/14 0.3968
None 0.0000
None 0.0000
None 0.0000
x**4 + 4 0.0001
-cos(x - 3) 0.3968
None 0.0000
-x**2*tan(1)/2 0.2702
None 0.0000
None 0.0000
x**4*cosh(5)/5 0.0000
None 0.0000
-2*(3 - 16*x)*exp(2 - 3*x)/5 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x + 1) 0.3968
sqrt(x) - sinh(x - 2) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
exp(x - 1)/x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x**(3/2) + sinh(x) 0.0000
x**2 - sqrt(3)*exp(3*x/2) 0.0000
None 0.0000
None 0.0000
None 0.0000
-x - log(tanh(x) + 1) 0.0000
None 0.0000
x**5/5 + cosh(x) 0.0000
66*x**4/5 0.0000
2*x**(1/3)/11 0.0000
None 0.0000
26*x 0.3824
x*(2*x + exp(x)) 0.0000
None 0.0000
x - 5/14 + exp(2) 0.3970
-x + cos(x)/sin(x) 0.3969
x**4/2 + 2*log(x) 0.0000
x*(x + 1) 0.8975
None 0.0000
None 0.0000
(x + cos(x))/x 0.3969
None 0.0000
None 0.0000
3*x + asin(x) 0.0000
x**2/5 0.4510
x**(3/2) + sin(x) 0.0000
x*(x + 1/x) 0.9131
None 0.0000
2*x*atanh(x) 0.0000
x*(x**2 + x) 0.0076
-1/(9*(3*x + 3)**2) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*acos(x) - sqrt(x**2 + 1) - 1/(4*x) 0.0000
x + sinh(x) + 1 0.0000
sqrt(x) + x + 1/(3*x**2) 0.0000
2*exp(4*x) 0.0000
None 0.0000
12*x**2 + 3*x 0.0565
None 0.0000
3*sin(x)**2/4 - 1/(2*x**12) 0.3969
x + 10 0.3971
None 0.0000
None 0.0000
4*x**(7/2) + x + log(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*(x + 1/(2*x)) 0.9131
log(x) + exp(-1) 0.0000
None 0.0000
4*x*(x + 4) 0.1792
5*cos(x) + 5/(16*cos(x)) 0.3968
None 0.0000
x/(x/2 + 1/3) 0.3969
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*cos(x) - x + sinh(x) 0.0000
x*(2*x + asinh(x)) 0.3823
None 0.0000
10*x 0.3939
1/(16*x**10) 0.3968
None 0.0000
sin(x + 1) 0.3968
None 0.0000
32285/(2*x**(11/5)) 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2*tan(1) 0.5398
None 0.0000
None 0.0000
None 0.0000
x + exp(x) - log(tanh(x + 1) + 1) 0.0000
2*sin(5*sqrt(x)) 0.0000
None 0.0000
None 0.0000
sqrt(x) - x - 10*log(cos(x)) 0.0000
None 0.0000
None 0.0000
5*x*exp(sqrt(x)) 0.0000
2*exp(x) - log(cos(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
10*x 0.3939
-4/(3*x**(3/2)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
1/(-x**(3/2) + x) 0.0000
x**2/2 + 3*pi*log(x) 0.0000
None 0.0000
-x/5 0.3969
None 0.0000
None 0.0000
None 0.0000
log(cosh(5*x)) 0.4119
None 0.0000
None 0.0000
None 0.0000
(x + exp(x) + 2)/x 0.0000
7/x**6 0.3968
None 0.0000
-x**2 + cos(1)/2 0.2477
None 0.0000
x + cos(2*x) 0.3967
10*x**2 0.0682
(1 - x)**(-1/3) 0.0000
None 0.0000
sqrt(2)*Abs(x) 0.4010
None 0.0000
None 0.0000
x + asinh(x + 3) 0.3967
-3*x**2 + 3*x 0.1414
None 0.0000
None 0.0000
x*sin(x)/5 + 2*sin(x)/5 - sin(x)/(3*cos(x)) 0.3967
None 0.0000
None 0.0000
None 0.0000
x + asinh(3*x) 0.3967
None 0.0000
None 0.0000
0 0.0000
None 0.0000
-2*x - log(cos(x)) - 1/(2*sin(x)**2) 0.0000
<lambdifygenerated-178>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (1/2)*x + 3*arctanh(x)/x
<lambdifygenerated-178>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*x + 3*arctanh(x)/x
<lambdifygenerated-179>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x + sinh(x))
<lambdifygenerated-183>:2: RuntimeWarning: invalid value encountered in log
  return log(log(sin(x) + 1) - cos(x))
<lambdifygenerated-191>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x) + 4
<lambdifygenerated-191>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x) + 4
<lambdifygenerated-199>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (1/2)*arctanh(x)
<lambdifygenerated-199>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*arctanh(x)
<lambdifygenerated-200>:2: RuntimeWarning: invalid value encountered in power
  return log(x**(-5/2))
<lambdifygenerated-203>:2: RuntimeWarning: invalid value encountered in power
  return tan((4/3)*sqrt(3)*x**(3/2))
<lambdifygenerated-206>:2: RuntimeWarning: invalid value encountered in power
  return 4/cos(x)**2 + 5/x**(3/2)
<lambdifygenerated-209>:2: RuntimeWarning: divide by zero encountered in divide
  return -(1/2)/(x - 3)
<lambdifygenerated-210>:2: RuntimeWarning: invalid value encountered in log
  return x*cosh(log(x)) - x
<lambdifygenerated-218>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - sinh(x - 2)
<lambdifygenerated-220>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**(3/2) + sinh(x)
<lambdifygenerated-222>:2: RuntimeWarning: divide by zero encountered in log
  return -x - log(tanh(x) + 1)
<lambdifygenerated-225>:2: RuntimeWarning: invalid value encountered in power
  return (2/11)*x**(1/3)
<lambdifygenerated-230>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**4 + 2*log(x)
<lambdifygenerated-233>:2: RuntimeWarning: invalid value encountered in arcsin
  return 3*x + arcsin(x)
<lambdifygenerated-235>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2) + sin(x)
<lambdifygenerated-237>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x*arctanh(x)
<lambdifygenerated-237>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x*arctanh(x)
<lambdifygenerated-239>:2: RuntimeWarning: divide by zero encountered in divide
  return -(1/9)/(3*x + 3)**2
<lambdifygenerated-240>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x) - sqrt(x**2 + 1) - (1/4)/x
<lambdifygenerated-242>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + (1/3)/x**2
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-247>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(7/2) + x + log(x)
<lambdifygenerated-247>:2: RuntimeWarning: invalid value encountered in log
  return 4*x**(7/2) + x + log(x)
<lambdifygenerated-249>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + exp(-1)
<lambdifygenerated-258>:2: RuntimeWarning: invalid value encountered in power
  return (32285/2)/x**(11/5)
<lambdifygenerated-260>:2: RuntimeWarning: divide by zero encountered in log
  return x + exp(x) - log(tanh(x + 1) + 1)
<lambdifygenerated-261>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sin(5*sqrt(x))
<lambdifygenerated-262>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - x - 10*log(cos(x))
<lambdifygenerated-262>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) - x - 10*log(cos(x))
<lambdifygenerated-263>:2: RuntimeWarning: invalid value encountered in sqrt
  return 5*x*exp(sqrt(x))
<lambdifygenerated-264>:2: RuntimeWarning: invalid value encountered in log
  return 2*exp(x) - log(cos(x))
<lambdifygenerated-266>:2: RuntimeWarning: invalid value encountered in power
  return -(4/3)/x**(3/2)
<lambdifygenerated-267>:2: RuntimeWarning: invalid value encountered in power
  return (-x**(3/2) + x)**(-1.0)
<lambdifygenerated-268>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + 3*pi*log(x)
<lambdifygenerated-276>:2: RuntimeWarning: invalid value encountered in power
  return (1 - x)**(-1/3)
<lambdifygenerated-283>:2: RuntimeWarning: invalid value encountered in log
  return -2*x - log(cos(x)) - (1/2)/sin(x)**2
mean: 0.07904870063066483
top: 0.9130699634552002
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
(2*x + 1)/(2*x) 0.3969
x**2*tan(1) 0.5398
None 0.0000
None 0.0000
824*x*log(5)/5 0.1581
x + 3 0.3968
None 0.0000
None 0.0000
None 0.0000
sqrt(x) + log(tan(x)) 0.0000
log(x) - 1/x 0.0000
-x + log(-tan(sqrt(x))) - 1/(12*sin(sqrt(x))) 0.0000
None 0.0000
104*x**6 0.0000
x + 6*log(x) 0.0000
x + asinh(x + 1) 0.3967
x*cos(2*x) + exp(-2*x) 0.0000
x**4/10 0.0009
-x**2*sinh(x) - 2*x*cosh(x) + 2*sinh(x) 0.0000
None 0.0000
x*log(x) + exp(x) - asin(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
log(1 + 1/tan(x**4))/2 0.0000
None 0.0000
9*x**4 + x 0.0000
None 0.0000
4*sinh(x + 5) 0.0000
None 0.0000
None 0.0000
None 0.0000
exp(-3*x/2) 0.0000
None 0.0000
-tan(2*x - 5)/2 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
(x + 1 + 1/x)/x 0.3969
x*(x - cosh(x)) 0.0000
x**(5/4)*sin(x) 0.0000
log(2)/x 0.3968
-log(cos(x/2))/2 0.0000
None 0.0000
None 0.0000
3*x**3*(x + cos(x)) 0.0000
None 0.0000
5*exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
-3*x + log(x**14 + 1)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
atanh(2*x) 0.0000
None 0.0000
3*x**(3/2) + x*sin(2) 0.0000
E*(5*x + 5)/5 0.3965
None 0.0000
-tan(x - 4) 0.3968
-2*cos(x)/3 0.3968
x**2/4 + 8*x/5 0.4665
-8*x**3/3 + 24*x**2 0.0029
None 0.0000
exp(x/10) 0.4426
None 0.0000
None 0.0000
None 0.0000
x**2/2 + x*sin(x) + cos(x) 0.5651
None 0.0000
168*x**5/5 0.0000
None 0.0000
None 0.0000
-cosh(5*x)/5 0.0000
x*(tan(3) + 3) 0.3964
None 0.0000
cosh(4*x + 1) 0.0000
3*x/(x + 2) 0.3970
tan(x) 0.3969
x**8/3 0.0000
x*log(2) - (x - 3)**2 0.2474
None 0.0000
None 0.0000
4*(x + 2)**3/3 0.0057
x*cos(x + 3) 0.3965
44*tan(x)**2/3 0.0401
None 0.0000
x - cos(x + 1) 0.3967
None 0.0000
None 0.0000
sqrt(x) + log(3*x/2) 0.0000
x - cos(x)**2 0.3967
None 0.0000
None 0.0000
4*x*sqrt(1 - x**2) 0.0000
4*x + log(x) 0.0000
None 0.0000
None 0.0000
-x**4/2 + x*exp(x/113) 0.0002
None 0.0000
8/(3*x) 0.3968
x*(x**3 + 2*x) 0.0001
1/(2*log(x)) + 1/(2*x) 0.0000
None 0.0000
None 0.0000
x*exp(-3) + x/2 0.3968
2*x*(x - 4) 0.3974
None 0.0000
4*x**4 0.0000
5*x**4 0.0000
x**4/2 + log(x) 0.0000
x*(x + 4*asinh(x))**2 0.0050
2*(acosh(x) + 1)/x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*(2 - x**2) 0.0076
None 0.0000
None 0.0000
None 0.0000
log(x + sin(x)) 0.0000
x*(x - 1)/2 + x*log(x) + log(x) 0.0000
27*x**12 0.0000
exp(-cos(2*x)) 0.3969
None 0.0000
2*x + asinh(x) 0.3965
4*x*cosh(x) + x/2 - 5*sinh(x)/2 0.0000
3*x**2 - 10*x/3 0.2478
2*x + tanh(2*x) 0.3965
None 0.0000
None 0.0000
-x**2 + 5*x + 1/(3*x**3) 0.2476
log(x) - log(cos(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-acosh(x)/2 0.0000
None 0.0000
None 0.0000
x/(x + 1) 0.0000
x*(3 + exp(-x)) 0.0000
5*x**2/2 0.3049
None 0.0000
None 0.0000
None 0.0000
x*tanh(5) 0.3967
None 0.0000
None 0.0000
x + tan(3*x) 0.3967
None 0.0000
x*(x + exp(x) + 5) 0.0000
None 0.0000
None 0.0000
None 0.0000
4*x + 3/2 0.3962
x**5/5 0.0000
log(x**2)**2 0.3997
2*x**6 + 1 0.0000
-atan(x) 0.3968
x**2/2 + x*log(x)/3 + log(x)/6 0.0000
-x*log(tan(x)) - 3*log(tan(x)**2 + 1)/4 0.0000
None 0.0000
sin(x) - 1/cos(x**2) 0.3969
tan(x)/sqrt(x) 0.0000
x*(x + 4*tan(x)**2) 0.0128
None 0.0000
x*acosh(x) - sqrt(x**2 - 1) + acosh(x) 0.0000
None 0.0000
None 0.0000
10*x**2 0.0682
(log(x) + 1/x)**2 0.0000
tanh(x) + acos(x) 0.0000
None 0.0000
None 0.0000
x**6/3 + x 0.0000
None 0.0000
None 0.0000
log(cos(x)) - 1/x 0.0000
2*exp(2*x) - acos(2*x)/2 0.0000
None 0.0000
None 0.0000
sin(2*x)*cos(10*x) 0.3968
None 0.0000
55*x**(4/3) 0.0000
x**10 + x*(x + 1) 0.0000
cos(x) 0.3968
-3*x/8 0.3969
None 0.0000
3*x**2 + 8*x + 2*(x + 2)**(3/2)/3 0.0000
None 0.0000
x*(-x + cos(2)) 0.2477
exp(asinh(x + 5)) 0.3998
None 0.0000
None 0.0000
10*x/3 0.3963
-x*(x + 1) 0.2477
exp(x/4)/2 0.0000
x*log(x + 4) - x - 25*log(4*x + 1)/2 0.0000
None 0.0000
-x - 3*tan(x)**2 0.1626
1/(x*log(x)) 0.0000
-2/x**(1/4) 0.0000
6*x**4 + 164*x + 3*log(x)**2/2 0.0000
2*x**2 + exp(x) 0.0000
1/(x + 2) 0.3968
None 0.0000
x**4/4 + 1/(4*x**3) 0.0003
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x - acos(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x + acosh(x) 0.0000
x*exp(-1) + 3*x 0.3963
25*x**2 0.0267
None 0.0000
x**2/2 + 2*x 0.5654
None 0.0000
x*(x + 4*log(x)) 0.0000
None 0.0000
4*x**2 + 1 0.1800
None 0.0000
x**3/(x - 2) 0.0000
2/log(x) 0.0000
None 0.0000
3*log(x) 0.0000
-x/(2*acosh(4*x)) + acosh(2*x) + acosh(4*x)/4 0.0000
None 0.0000
x/2 - exp(-x/2)/2 0.0000
None 0.0000
-2*cos(5*x + 1)/5 0.3968
3*x + cos(x/4) 0.3963
None 0.0000
x + 5*cos(x) 0.3967
x**2 + 2*x + cos(x) 0.8824
x*(x**2 + 1) 0.0076
None 0.0000
asin(5*x) 0.0000
None 0.0000
x*(x + cos(3)) + x 0.9129
None 0.0000
None 0.0000
None 0.0000
4*sqrt(x) 0.0000
<lambdifygenerated-288>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + log(tan(x))
<lambdifygenerated-288>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + log(tan(x))
<lambdifygenerated-289>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - 1/x
<lambdifygenerated-290>:2: RuntimeWarning: invalid value encountered in sqrt
  return -x + log(-tan(sqrt(x))) - (1/12)/sin(sqrt(x))
<lambdifygenerated-290>:2: RuntimeWarning: invalid value encountered in log
  return -x + log(-tan(sqrt(x))) - (1/12)/sin(sqrt(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-292>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-297>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) + exp(x) - arcsin(x)
<lambdifygenerated-297>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*log(x) + exp(x) - arcsin(x)
<lambdifygenerated-298>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(1 + tan(x**4)**(-1.0))
<lambdifygenerated-305>:2: RuntimeWarning: invalid value encountered in power
  return x**(5/4)*sin(x)
<lambdifygenerated-307>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*log(cos((1/2)*x))
<lambdifygenerated-310>:2: RuntimeWarning: invalid value encountered in log
  return -3*x + (1/2)*log(x**14 + 1)
<lambdifygenerated-311>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(2*x)
<lambdifygenerated-312>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**(3/2) + x*sin(2)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-332>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + log((3/2)*x)
<lambdifygenerated-332>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + log((3/2)*x)
<lambdifygenerated-334>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4*x*sqrt(1 - x**2)
<lambdifygenerated-335>:2: RuntimeWarning: invalid value encountered in log
  return 4*x + log(x)
<lambdifygenerated-339>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)/log(x) + (1/2)/x
<lambdifygenerated-344>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**4 + log(x)
<lambdifygenerated-346>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*(arccosh(x) + 1)/x
<lambdifygenerated-348>:2: RuntimeWarning: invalid value encountered in log
  return log(x + sin(x))
<lambdifygenerated-349>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x*(x - 1) + x*log(x) + log(x)
<lambdifygenerated-357>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - log(cos(x))
<lambdifygenerated-358>:2: RuntimeWarning: invalid value encountered in arccosh
  return -1/2*arccosh(x)
<lambdifygenerated-359>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 1)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-370>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + (1/3)*x*log(x) + (1/6)*log(x)
<lambdifygenerated-371>:2: RuntimeWarning: invalid value encountered in log
  return -x*log(tan(x)) - 3/4*log(tan(x)**2 + 1)
<lambdifygenerated-373>:2: RuntimeWarning: invalid value encountered in sqrt
  return tan(x)/sqrt(x)
<lambdifygenerated-375>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x) - sqrt(x**2 - 1) + arccosh(x)
<lambdifygenerated-377>:2: RuntimeWarning: invalid value encountered in log
  return (log(x) + x**(-1.0))**2
<lambdifygenerated-378>:2: RuntimeWarning: invalid value encountered in arccos
  return tanh(x) + arccos(x)
<lambdifygenerated-380>:2: RuntimeWarning: invalid value encountered in log
  return log(cos(x)) - 1/x
<lambdifygenerated-381>:2: RuntimeWarning: invalid value encountered in arccos
  return 2*exp(2*x) - 1/2*arccos(2*x)
<lambdifygenerated-383>:2: RuntimeWarning: invalid value encountered in power
  return 55*x**(4/3)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-387>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**2 + 8*x + (2/3)*(x + 2)**(3/2)
<lambdifygenerated-393>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x + 4) - x - 25/2*log(4*x + 1)
<lambdifygenerated-395>:2: RuntimeWarning: invalid value encountered in log
  return 1/(x*log(x))
<lambdifygenerated-396>:2: RuntimeWarning: invalid value encountered in power
  return -2/x**(1/4)
<lambdifygenerated-397>:2: RuntimeWarning: invalid value encountered in log
  return 6*x**4 + 164*x + (3/2)*log(x)**2
<lambdifygenerated-401>:2: RuntimeWarning: invalid value encountered in arccos
  return x - arccos(x)
<lambdifygenerated-402>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + arccosh(x)
<lambdifygenerated-406>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + 4*log(x))
<lambdifygenerated-408>:2: RuntimeWarning: divide by zero encountered in divide
  return x**3/(x - 2)
<lambdifygenerated-409>:2: RuntimeWarning: invalid value encountered in log
  return 2/log(x)
<lambdifygenerated-410>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(x)
<lambdifygenerated-411>:2: RuntimeWarning: invalid value encountered in arccosh
  return -1/2*x/arccosh(4*x) + arccosh(2*x) + (1/4)*arccosh(4*x)
<lambdifygenerated-418>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(5*x)
<lambdifygenerated-420>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4*sqrt(x)
mean: 0.08313101530075073
top: 0.9129027128219604
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
<lambdifygenerated-425>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + 1/sqrt(x)
<lambdifygenerated-426>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arcsinh(x)
<lambdifygenerated-428>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/22)*log(sqrt(x))
<lambdifygenerated-430>:2: RuntimeWarning: invalid value encountered in log
  return -1/4*log(cos(4*x))
<lambdifygenerated-436>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x**3)
<lambdifygenerated-441>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(x - 5/sqrt(x))
<lambdifygenerated-443>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + 2*arctanh(3*x)
<lambdifygenerated-451>:2: RuntimeWarning: invalid value encountered in sqrt
  return (sqrt(x) - 1)*(sqrt(x) + sin(x))
<lambdifygenerated-452>:2: RuntimeWarning: invalid value encountered in log
  return -x**2 + x*log(2*x) - 2*x
<lambdifygenerated-455>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-456>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - 6*log(x + 4)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-460>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x)*sin(sqrt(x)) + x**2 - log(cos(sqrt(x)))
<lambdifygenerated-460>:2: RuntimeWarning: invalid value encountered in log
  return -sqrt(x)*sin(sqrt(x)) + x**2 - log(cos(sqrt(x)))
<lambdifygenerated-461>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arcsinh(x) - sqrt(x + 1)
<lambdifygenerated-462>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) - log(cos(x) - 1) - arctanh(x)
<lambdifygenerated-462>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) - log(cos(x) - 1) - arctanh(x)
<lambdifygenerated-462>:2: RuntimeWarning: invalid value encountered in log
  return x*arctanh(x) - log(cos(x) - 1) - arctanh(x)
<lambdifygenerated-466>:2: RuntimeWarning: invalid value encountered in log
  return -6*log(4*x + 1)
<lambdifygenerated-468>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*log(x)/x**2
<lambdifygenerated-474>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-477>:2: RuntimeWarning: invalid value encountered in power
  return log(x**(3/2))
<lambdifygenerated-478>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x - 1/x)
<lambdifygenerated-480>:2: RuntimeWarning: overflow encountered in exp
  return x*arctan(x) + (3/4)*exp(4*x**2 + 1)
<lambdifygenerated-483>:2: RuntimeWarning: invalid value encountered in sqrt
  return log(2*sqrt(x))
<lambdifygenerated-484>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 2
<lambdifygenerated-490>:2: RuntimeWarning: invalid value encountered in log
  return x*(log(x) + arccos(x))
<lambdifygenerated-490>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(log(x) + arccos(x))
<lambdifygenerated-491>:2: RuntimeWarning: invalid value encountered in arccos
  return x - arccos(x)
<lambdifygenerated-492>:2: RuntimeWarning: invalid value encountered in power
  return 8*x**(4/5)
2*x + 8*sin(x) 0.3966
None 0.0000
(1 - x**2)/x 0.3969
x**4/8 0.0007
x*sin(x + 2) 0.3976
x + 1/sqrt(x) 0.0000
sqrt(x) + asinh(x) 0.0000
None 0.0000
2*exp(x/4)/3 - exp(2*x/3) 0.0000
log(sqrt(x))/22 0.0000
-sin(2*x + 5) 0.3968
-log(cos(4*x))/4 0.0000
None 0.0000
None 0.0000
2*exp(x)/x 0.0000
-8*cos(5*x/2) 0.3969
None 0.0000
5*sinh(x) 0.0000
x - sinh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
6*x**2 0.1164
log(2*x**3) 0.0000
4*exp(x) 0.0000
4*x 0.3961
2*x*atan(x) 0.4061
cosh(2*x)/2 0.0000
x*(x - 5/sqrt(x)) 0.0000
exp(x)*sin(x)/5 0.0000
None 0.0000
x + 2*atanh(3*x) 0.0000
None 0.0000
1/tanh(x + 2) 0.3968
10*x**2/7 0.6029
None 0.0000
8*x + 1 0.3948
None 0.0000
cosh(x + 4) 0.0000
x/4 0.3968
x 0.3967
None 0.0000
x*sinh(3*x) 0.0000
None 0.0000
(sqrt(x) - 1)*(sqrt(x) + sin(x)) 0.0000
-x**2 + x*log(2*x) - 2*x 0.0000
None 0.0000
None 0.0000
x**6*cos(1)/3 0.0000
None 0.0000
x**2*(x + 6) 0.0076
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sqrt(x + 1) 0.0000
2*x - 6*log(x + 4) 0.0000
x*exp(x + 5) 0.0000
None 0.0000
None 0.0000
1/5 0.0000
None 0.0000
None 0.0000
sinh(x)**4 0.0000
-sqrt(x)*sin(sqrt(x)) + x**2 - log(cos(sqrt(x))) 0.0000
x*asinh(x) - sqrt(x + 1) 0.0000
None 0.0000
None 0.0000
x*atanh(x) - log(cos(x) - 1) - atanh(x) 0.0000
61*x*sin(x) 0.3305
None 0.0000
None 0.0000
None 0.0000
tanh(x + 4) 0.3968
(x**2 + x)/x 0.3967
-6*log(4*x + 1) 0.0000
None 0.0000
x*(x + log(x**2)**2) 0.3954
log(x)/(3*x**2) 0.0000
None 0.0000
None 0.0000
x*(x + cos(x) + 2) 0.8819
5*x*sin(x)/4 + 5*sin(x)*cos(x)/4 0.3958
x**8/95 0.0000
None 0.0000
None 0.0000
tan(x)/3 0.3968
None 0.0000
None 0.0000
None 0.0000
4*cos(x)**3/3 - cos(x) 0.3968
4*log(x) 0.0000
4*x**2 + sin(x) 0.1800
x**2*sin(x) + 4*sin(x) + 4*cos(x)**2 0.3808
log(x**(3/2)) 0.0000
x/(x - 1/x) 0.0000
x**3 + sinh(x) 0.0000
None 0.0000
None 0.0000
x*atan(x) + 3*exp(4*x**2 + 1)/4 0.0000
None 0.0000
4*x**2/(x + 3) 0.3957
x**6/2 + x 0.0000
log(2*sqrt(x)) 0.0000
log(x) + 2 0.0000
2*x*tan(5) 0.3967
None 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x**2 + exp(x) 0.0000
None 0.0000
None 0.0000
sin(2*x - 1)*cos(x - 2) 0.3968
None 0.0000
-x**3/9 0.0644
None 0.0000
x/(x + cos(1)) 0.3969
x*(log(x) + acos(x)) 0.0000
None 0.0000
x - acos(x) 0.0000
8*x**(4/5) 0.0000
-2*exp(sqrt(x)) 0.0000
None 0.0000
2*sin(2*x + 1) 0.3968
x**5/110 + x**3/3 0.0001
exp(x/2) 0.0000
atan(x) 0.3968
x*(sqrt(x) + 2*x) 0.0000
3*cosh(x) 0.0000
3*x + acosh(x) 0.0000
None 0.0000
None 0.0000
cos(x) + acos(x) 0.0000
x/(x + sinh(x)) 0.3968
None 0.0000
None 0.0000
cos(x) 0.3968
(log(x**2) + 1)/x 0.3968
None 0.0000
x + cos(2*x) 0.3967
-tan(sqrt(x)) 0.0000
None 0.0000
None 0.0000
x**4*tan(5) 0.0000
x*(x + sin(x)) 0.9092
None 0.0000
4*x - 4*log(x + 4) 0.0000
None 0.0000
x**2*(log(x) + 4) 0.0000
None 0.0000
3*log(tan(2*x + 3)**2 + 1)/2 0.3969
sqrt(x)/2 + 2*exp(1/sqrt(x))/3 0.0000
x**2*log(3) 0.8487
2*x - asin(x) 0.0000
log(x) - 4*cos(acosh(x))**3/3 0.0000
x*(x + sin(x)) 0.9092
x + 5*log(x) 0.0000
-3*cos(x + 1) 0.3969
3*sqrt(x) + tanh(x) 0.0000
2*x**(3/2)/3 + 8*x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
25*exp(x) 0.0000
None 0.0000
1/(4*x) 0.3968
(cos(x - 1) - 1)*exp(x - 1) 0.0000
x*(x + 9*log(x)) 0.0000
None 0.0000
-x + log(1 + 1/tan(x)) 0.0000
x**2*exp(x) 0.0000
x**4*tan(3) 0.0006
2*x + 2 0.3966
sinh(x + 1) 0.0000
x/2 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2 + tanh(2*x) 0.9128
x*(x + cos(1)) + x 0.8893
None 0.0000
-2*x - 2*log(x) 0.0000
x**6/16 0.0000
None 0.0000
sin(2*x) 0.3968
None 0.0000
x + 10 0.3971
None 0.0000
None 0.0000
None 0.0000
None 0.0000
4*x + 6 0.3963
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x) + cos(x) 0.3968
x**5*(sqrt(x) + x) 0.0000
2*x + exp(x) 0.0000
x*(x + 4/x) 0.9131
3*x**2 + sinh(x - 5) 0.0000
x*(2*x + cos(x)) 0.3961
x + tan(tanh(3)) 0.3968
None 0.0000
2*x + 6/x 0.3965
None 0.0000
14*x**2 0.0482
4*x**5 0.0000
1122*x**4 0.0000
x + (x - 1)**2/6 0.4409
None 0.0000
-exp(x)/2 0.0000
None 0.0000
x*cos(sqrt(x)) + 4*sin(sqrt(x)) 0.0000
2*x/5 - log(x)**2/2 0.0000
2*x**2/cos(1) 0.1959
None 0.0000
5*x*atanh(x) 0.0000
sqrt(3)*x**4/3 0.0001
None 0.0000
-sin(4*x/3) 0.3968
sqrt(x**3) 0.0000
None 0.0000
None 0.0000
None 0.0000
4*exp(x) 0.0000
None 0.0000
None 0.0000
x*(-x**3 + x) 0.0001
None 0.0000
x*asin(x) + 3*x - sqrt(x**4 - 1) 0.0000
4*sin(x) + 4/(3*x**(3/2)) 0.0000
None 0.0000
x**2/2 0.5669
None 0.0000
-19*x - sin(x)*cos(x)/3 + sin(x) 0.3922
None 0.0000
None 0.0000
2*x + 3/sqrt(x) 0.0000
4*x + 6*log(tanh(x + 4) + 1) 0.0000
-x/4 0.3969
None 0.0000
3*log(x)**2/5 0.0000
(x*tan(3) + x)/x 0.3969
sqrt(2)*sqrt(tanh(x)) 0.0000
x*(x + log(x)) 0.0000
x*cos(x**2) - x 0.3967
None 0.0000
2*x + 2/x 0.3965
<lambdifygenerated-493>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*exp(sqrt(x))
<lambdifygenerated-498>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + 2*x)
<lambdifygenerated-500>:2: RuntimeWarning: invalid value encountered in arccosh
  return 3*x + arccosh(x)
<lambdifygenerated-501>:2: RuntimeWarning: invalid value encountered in arccos
  return cos(x) + arccos(x)
<lambdifygenerated-506>:2: RuntimeWarning: invalid value encountered in sqrt
  return -tan(sqrt(x))
<lambdifygenerated-509>:2: RuntimeWarning: invalid value encountered in log
  return 4*x - 4*log(x + 4)
<lambdifygenerated-510>:2: RuntimeWarning: invalid value encountered in log
  return x**2*(log(x) + 4)
<lambdifygenerated-512>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/2)*sqrt(x) + (2/3)*exp(1/sqrt(x))
<lambdifygenerated-514>:2: RuntimeWarning: invalid value encountered in arcsin
  return 2*x - arcsin(x)
<lambdifygenerated-515>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - 4/3*cos(arccosh(x))**3
<lambdifygenerated-515>:2: RuntimeWarning: invalid value encountered in arccosh
  return log(x) - 4/3*cos(arccosh(x))**3
<lambdifygenerated-517>:2: RuntimeWarning: invalid value encountered in log
  return x + 5*log(x)
<lambdifygenerated-519>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3*sqrt(x) + tanh(x)
<lambdifygenerated-520>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + 8*x
<lambdifygenerated-524>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + 9*log(x))
<lambdifygenerated-525>:2: RuntimeWarning: invalid value encountered in log
  return -x + log(1 + tan(x)**(-1.0))
<lambdifygenerated-533>:2: RuntimeWarning: invalid value encountered in log
  return -2*x - 2*log(x)
<lambdifygenerated-539>:2: RuntimeWarning: invalid value encountered in sqrt
  return x**5*(sqrt(x) + x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-551>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*cos(sqrt(x)) + 4*sin(sqrt(x))
<lambdifygenerated-552>:2: RuntimeWarning: invalid value encountered in log
  return (2/5)*x - 1/2*log(x)**2
<lambdifygenerated-554>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 5*x*arctanh(x)
<lambdifygenerated-554>:2: RuntimeWarning: invalid value encountered in arctanh
  return 5*x*arctanh(x)
<lambdifygenerated-557>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x**3)
<lambdifygenerated-560>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(x) + 3*x - sqrt(x**4 - 1)
<lambdifygenerated-561>:2: RuntimeWarning: invalid value encountered in power
  return 4*sin(x) + (4/3)/x**(3/2)
<lambdifygenerated-564>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*x + 3/sqrt(x)
<lambdifygenerated-565>:2: RuntimeWarning: divide by zero encountered in log
  return 4*x + 6*log(tanh(x + 4) + 1)
<lambdifygenerated-567>:2: RuntimeWarning: invalid value encountered in log
  return (3/5)*log(x)**2
<lambdifygenerated-569>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(2)*sqrt(tanh(x))
<lambdifygenerated-570>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x))
mean: 0.10568148642778397
top: 0.9130902290344238
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
<lambdifygenerated-573>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) + 2*x + exp(x)
<lambdifygenerated-573>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) + 2*x + exp(x)
<lambdifygenerated-575>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(x)
<lambdifygenerated-576>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-576>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-578>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - cos(sqrt(x))
<lambdifygenerated-578>:2: RuntimeWarning: invalid value encountered in sqrt
  return log(x) - cos(sqrt(x))
<lambdifygenerated-584>:2: RuntimeWarning: invalid value encountered in sqrt
  return (4/3)*x*sqrt(x**(-1.0))
<lambdifygenerated-587>:2: RuntimeWarning: invalid value encountered in power
  return (1/6)*x**(4/3) + x
<lambdifygenerated-592>:2: RuntimeWarning: invalid value encountered in log
  return 25*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-595>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos(x))
<lambdifygenerated-601>:2: RuntimeWarning: invalid value encountered in log
  return x*log(2*x)
<lambdifygenerated-619>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(19)*sqrt(x) + x
<lambdifygenerated-620>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arcsinh(2*x**2 + 1) - sqrt(x + 6)
<lambdifygenerated-622>:2: RuntimeWarning: divide by zero encountered in log
  return log(x + 1) + 1
<lambdifygenerated-622>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 1) + 1
<lambdifygenerated-624>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 2
<lambdifygenerated-627>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4/sqrt(x)
<lambdifygenerated-628>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*x*arccosh(x)
<lambdifygenerated-631>:2: RuntimeWarning: invalid value encountered in log
  return x*log(sqrt(3)) + 2*log(x)
<lambdifygenerated-632>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + (1/4)*log(x)
<lambdifygenerated-633>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x)*sin(sqrt(x)) - 2*sin(sqrt(cos(sqrt(x))))
<lambdifygenerated-635>:2: RuntimeWarning: divide by zero encountered in divide
  return 1/(x**2*(x + 1))
<lambdifygenerated-636>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 1)
<lambdifygenerated-639>:2: RuntimeWarning: invalid value encountered in log
  return x + 5*log(x)
<lambdifygenerated-640>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x + 4)
<lambdifygenerated-644>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x*(x**3)**(1/8)
x*atanh(x) + 2*x + exp(x) 0.0000
None 0.0000
16*x**2 0.0421
3*log(x) 0.0000
None 0.0000
atanh(x + 5) 0.0000
2*x*sinh(x) 0.0000
log(x) - cos(sqrt(x)) 0.0000
(x + 2)/x**2 0.3968
2*x*(x + sin(x)) 0.3980
tan(x/2) 0.3969
x + 3/x 0.3967
-cos(4*x)/4 0.3968
4*x*sqrt(1/x)/3 0.0000
x + log(2) 0.3967
2*sinh(x) 0.0000
x**(4/3)/6 + x 0.0000
None 0.0000
None 0.0000
x*tanh(1) 0.3967
-exp(-1/x) 0.3968
(2*x + 1)/x 0.3969
None 0.0000
None 0.0000
x**2/sin(x)**2 0.0029
None 0.0000
25*log(x) 0.0000
x**4*(x**2 + x) 0.0000
2*x + exp(-x) 0.0000
-2*log(cos(x)) 0.0000
x**2/5 0.4510
None 0.0000
x + asinh(2*x) 0.3967
x*(x**2 + 4*x) 0.0076
x**12/792 0.0000
126*x + 3 0.2574
None 0.0000
x*log(2*x) 0.0000
sin(x**2)/2 0.3968
5*sin(x)/x 0.3968
4*x*(x + 4) 0.1792
x**2*(x + exp(x)) 0.0000
x*(x + 4) 0.8537
x/2 0.3968
x*sinh(2*x) 0.0000
x*(x + 1) + x 0.8824
None 0.0000
sinh(2*x) 0.0000
None 0.0000
x**4/10 0.0009
None 0.0000
-x*atan(x) + x 0.3922
None 0.0000
x + cos(x) + 1/x 0.3967
None 0.0000
tan(6*x)**2 0.2795
1/x 0.3968
x**2*asinh(2)/2 0.6984
x**2/5 0.4510
cos(x/2) 0.3968
None 0.0000
-sqrt(19)*sqrt(x) + x 0.0000
None 0.0000
x*asinh(2*x**2 + 1) - sqrt(x + 6) 0.0000
4*(x - 1)*exp(x)/5 0.0000
log(x + 1) + 1 0.0000
x*(x**3 + x + 8) 0.0001
log(x) + 2 0.0000
3/x**2 0.3968
log(2*x**2) 0.3972
None 0.0000
None 0.0000
None 0.0000
None 0.0000
4/sqrt(x) 0.0000
2*x*acosh(x) 0.0000
None 0.0000
None 0.0000
4*x**4 + exp(x) 0.0000
x**3*tan(2)/13 0.0436
None 0.0000
x*log(sqrt(3)) + 2*log(x) 0.0000
None 0.0000
x**2/2 + log(x)/4 0.0000
2*sqrt(x)*sin(sqrt(x)) - 2*sin(sqrt(cos(sqrt(x)))) 0.0000
None 0.0000
2*x**3 0.0038
1/(x**2*(x + 1)) 0.0000
None 0.0000
x/(x + 1) 0.0000
None 0.0000
tan(1)/x**2 0.3968
None 0.0000
None 0.0000
4*x**6/9 0.0000
x + 5*log(x) 0.0000
x*(sqrt(x) + x + 4) 0.0000
None 0.0000
None 0.0000
None 0.0000
4*cos(x) - 4*sinh(x) 0.0000
tan(4)/x**4 0.3968
2*x**4 + x 0.0000
2*x*(x**3)**(1/8)/3 0.0000
10*log(x) 0.0000
-2*exp(x)/5 0.0000
(1 - x**2)/x 0.3969
2*x*sin(asinh(x)) 0.3916
None 0.0000
5*x**2 0.1414
24*x**3 0.0003
5*x**4/4 0.0001
-x + acos(x) 0.0000
-x**2 + x 0.2477
None 0.0000
x**4*exp(-1) 0.0002
None 0.0000
x/(3*x + 4) 0.3968
None 0.0000
None 0.0000
-sinh(x*cosh(x + 5) + x - 5) 0.0000
tan(3*x)/3 0.3968
2*x + 2*log(2*x + 1) + tan(x)**2 0.0000
x*cos(2*x) + cos(2*x) 0.3972
cos(2*x) 0.3968
x**2/16 0.4123
sinh(5*x) 0.0000
2/(3*cos(x)) 0.3969
2*cosh(x) 0.0000
-log(tan(x + 5)**2 + 1)/5 0.3968
x*acos(6) 0.0000
x*(sqrt(x) + x) 0.0000
log(4*x + sin(x)) 0.0000
106*x**5/5 0.0000
x*(x + 4) 0.8537
sqrt(x + 1) 0.0000
x**5 + 4*x 0.0000
x*(log(x) + 1) 0.0000
2*x**5/55 0.0000
3*x**2*acos(x) 0.0000
1 - 3*x 0.3970
sin(x)/3 0.3968
8*sqrt(x)/5 0.0000
2/5 0.0000
None 0.0000
None 0.0000
None 0.0000
x*(exp(x) + 1) 0.0000
2*x*(x + sin(x)) 0.3980
None 0.0000
None 0.0000
1/(8*x**3) 0.3968
None 0.0000
None 0.0000
5*x**(4/3) + 2 0.0000
5*x**3 0.0015
None 0.0000
x*acosh(x) 0.0000
1 - 5*x 0.3969
-x - exp(x) 0.0000
2*x + 2*log(x) 0.0000
None 0.0000
cos(x/5) 0.3968
4*x**2*sin(x) 0.1772
log(x + sin(x)) 0.0000
log(x)**2 0.0000
4*x**4/3 0.0001
3*x + 10*log(x) 0.0000
x*(1 - x)*exp(x) 0.0000
x**3*cos(1)/3 0.0407
-x**4/2 0.0002
x**2*(x**4 + 1) 0.0000
9/(2*x**2) 0.3968
cosh(6*x) 0.0000
None 0.0000
4*x**(3/2)/3 + x*log(x) - cos(x) 0.0000
x*(x + log(x)) 0.0000
None 0.0000
-2*exp(-3/2)*log(x)**2 0.0000
-x**8/2 + 2*x**3 0.0000
-4*sin(2*x) 0.3968
log(9*x) 0.0000
x**2*acosh(2) 0.6704
x*(x + 10) 0.7779
None 0.0000
2*cos(x) 0.3968
-76/(3*x**6) 0.3968
None 0.0000
1 0.0000
x/34 0.3968
4*log(tan(x - 5)**2 + 1) 0.3970
-sqrt(x) 0.0000
9*x*(x - 1) 0.0761
x**2*sin(2) 0.8573
None 0.0000
x + log(tan(x)**2 + 1)/2 0.3967
x**2*(x + cos(1)) 0.0076
2*(x + sin(sqrt(x)))**2 0.0000
None 0.0000
-tanh(x) 0.3968
-4*log(x) 0.0000
None 0.0000
x*(x + acosh(x)) 0.0000
2*x*(x + 2) 0.3951
log(x**4)/2 0.3972
None 0.0000
None 0.0000
2*x**3*exp(x) 0.0000
x**6/16 0.0000
3*x + 4*pi/3 0.3965
x**2 + 3*x 0.8678
-1/(15*x) 0.3968
2*x**4/17 0.0007
x/2 0.3968
x**2*(1 - x) 0.0076
log(2*tan(3*x + 1)**4 + 1)/16 0.3968
-cos(x/2) 0.3968
None 0.0000
3*x**2/2 0.5662
x**3*(x + 3) 0.0001
x/2 0.3968
x**2*tan(3) 0.3655
None 0.0000
None 0.0000
x*(x**2 + 2*x + 3) 0.0076
3*x/2 0.3966
None 0.0000
sinh(x + 3) 0.0000
-3*log(cos(x)) 0.0000
-4*x - 4*log(x + 4) 0.0000
None 0.0000
x*(2*x**4 + x) 0.0000
x*exp(-3*x) 0.0000
sin(12*x) 0.3968
2*x**4 0.0000
x*(x + cos(1)) 0.9046
log(x)/6 0.0000
None 0.0000
x**4/2 0.0002
None 0.0000
2*sin(x)**2/3 0.3969
x*exp(x + 2) 0.0000
3*log(x)/2 0.0000
x + 3*sinh(x) 0.0000
x - tanh(x) 0.3967
x + sin(2*x) 0.3967
-2*x + asin(sqrt(x)) 0.0000
None 0.0000
None 0.0000
2*x**(3/2)/3 + sinh(x) 0.0000
None 0.0000
None 0.0000
2*x/(x + 4) 0.3969
2*x + 4*log(x) 0.0000
6*x 0.3955
None 0.0000
<lambdifygenerated-645>:2: RuntimeWarning: invalid value encountered in log
  return 10*log(x)
<lambdifygenerated-652>:2: RuntimeWarning: invalid value encountered in arccos
  return -x + arccos(x)
<lambdifygenerated-656>:2: RuntimeWarning: overflow encountered in sinh
  return -sinh(x*cosh(x + 5) + x - 5)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: invalid value encountered in reduce
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
<lambdifygenerated-658>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 2*log(2*x + 1) + tan(x)**2
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-666>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(6)
<lambdifygenerated-667>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x)
<lambdifygenerated-668>:2: RuntimeWarning: invalid value encountered in log
  return log(4*x + sin(x))
<lambdifygenerated-671>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-673>:2: RuntimeWarning: invalid value encountered in log
  return x*(log(x) + 1)
<lambdifygenerated-675>:2: RuntimeWarning: invalid value encountered in arccos
  return 3*x**2*arccos(x)
<lambdifygenerated-678>:2: RuntimeWarning: invalid value encountered in sqrt
  return (8/5)*sqrt(x)
<lambdifygenerated-683>:2: RuntimeWarning: invalid value encountered in power
  return 5*x**(4/3) + 2
<lambdifygenerated-685>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x)
<lambdifygenerated-688>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 2*log(x)
<lambdifygenerated-691>:2: RuntimeWarning: invalid value encountered in log
  return log(x + sin(x))
<lambdifygenerated-692>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**2
<lambdifygenerated-694>:2: RuntimeWarning: invalid value encountered in log
  return 3*x + 10*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-701>:2: RuntimeWarning: invalid value encountered in power
  return (4/3)*x**(3/2) + x*log(x) - cos(x)
<lambdifygenerated-701>:2: RuntimeWarning: invalid value encountered in log
  return (4/3)*x**(3/2) + x*log(x) - cos(x)
<lambdifygenerated-702>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x))
<lambdifygenerated-703>:2: RuntimeWarning: invalid value encountered in log
  return -2*exp(-3/2)*log(x)**2
<lambdifygenerated-706>:2: RuntimeWarning: invalid value encountered in log
  return log(9*x)
<lambdifygenerated-714>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x)
<lambdifygenerated-719>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*(x + sin(sqrt(x)))**2
<lambdifygenerated-721>:2: RuntimeWarning: invalid value encountered in log
  return -4*log(x)
<lambdifygenerated-722>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*(x + arccosh(x))
<lambdifygenerated-742>:2: RuntimeWarning: invalid value encountered in log
  return -3*log(cos(x))
<lambdifygenerated-743>:2: RuntimeWarning: invalid value encountered in log
  return -4*x - 4*log(x + 4)
<lambdifygenerated-749>:2: RuntimeWarning: invalid value encountered in log
  return (1/6)*log(x)
<lambdifygenerated-753>:2: RuntimeWarning: invalid value encountered in log
  return (3/2)*log(x)
<lambdifygenerated-757>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*x + arcsin(sqrt(x))
<lambdifygenerated-757>:2: RuntimeWarning: invalid value encountered in arcsin
  return -2*x + arcsin(sqrt(x))
<lambdifygenerated-758>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + sinh(x)
<lambdifygenerated-760>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 4*log(x)
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
mean: 0.13337883353233337
top: 0.9045689702033997
x - acosh(x) 0.0000
None 0.0000
None 0.0000
x*(x + tan(log(x))) 0.0000
exp(5*sqrt(x))/5 0.0000
x*exp(x + 5) 0.0000
x**2 0.9131
exp(-4*x)/2 0.0000
2*x/(x**2 + x) 0.0000
2*log(x) + sin(x) 0.0000
tanh(x)/2 0.3968
2*log(x) 0.0000
None 0.0000
12*x**2 0.0565
-6*log(x + 1) 0.0000
tan(x)*sinh(x) 0.0000
5*log(x) 0.0000
x**2/(x + 1) 0.0000
3*x/2 0.3966
2*sin(x + 1) 0.3968
x**2*(2*x)**(x**4) 0.3968
2*x*exp(-x) 0.0000
x*(x + 5) 0.8401
x*(x + sinh(x)) 0.0000
2*x - log(x) 0.0000
x*tan(4) 0.3967
None 0.0000
None 0.0000
log(tan(x)**2 + 1)/2 0.3969
None 0.0000
None 0.0000
x**2*(x + cos(x)) 0.0076
2*x*(x + sin(x)) 0.3980
3*sinh(x) 0.0000
tan(x)**2 0.3115
cos(2*x) 0.3968
3*x**2/16 0.4472
log(6*x) 0.0000
log(2)/x 0.3968
x*(4*x + 4) 0.1798
x*log(2) 0.3968
0 0.0000
None 0.0000
5*x*tanh(x) 0.4119
None 0.0000
x**3/3 0.0225
None 0.0000
None 0.0000
x**2/2 + x*exp(5)/3 0.4406
None 0.0000
5*log(x)/6 0.0000
x + cos(3*x) 0.3967
None 0.0000
2*x**6 0.0000
None 0.0000
x*(x + cosh(x)) 0.0000
None 0.0000
15*x**26/4 0.0000
x + cos(1) 0.3967
x**3*(x - 4)/3 0.0003
-x**4/4 0.0003
x**4/1210 0.1097
-3*x**2/8 0.3238
x*(x + 1/x) 0.9131
x**6*sinh(x) 0.0000
9*x**2/2 0.1584
51*x**7/76 0.0000
None 0.0000
5*x*acos(x) 0.0000
x**4/4 0.0003
tanh(2*x) 0.3968
x*(4*x**3 + x) 0.0000
x - cos(x + 2) 0.3967
sinh(x + 1) 0.0000
4*x + 2 0.3962
x/(x**4 + x) 0.0000
cos(3*x)/3 0.3968
2*x**2*(x + 6) 0.0038
sqrt(x) + x + 2 0.0000
-20*x**3/3 0.0011
-sqrt(x) + x 0.0000
log(4*x**2)/4 0.3969
sqrt(x) + atanh(x) 0.0000
None 0.0000
-3/(4*x) 0.3968
2 + 1/sqrt(x) 0.0000
42*x**3 0.0002
4*log(x) 0.0000
x**2*(x - 3) 0.0076
x*(1 - x) 0.2477
5*atanh(3*x) 0.0000
x + asinh(x + 3) 0.3967
log(x)/16 0.0000
None 0.0000
atan(x)/x 0.3968
5*x*log(x) 0.0000
log(2*x + 1)/2 0.0000
x**3*log(x) 0.0000
x*(4*x + 4) 0.1798
x**2*(x + 1) 0.0076
None 0.0000
x + 4*log(x) 0.0000
x*(x + sin(x) + 2) 0.8790
x**4 + x**3/3 + 2*x 0.0001
x + 3*log(x) 0.0000
x*sinh(x + 6) 0.0000
(x**2 - 2*x + 2)*exp(x) 0.0000
(cos(x) - 1)*exp(x) 0.0000
exp(x) + exp(-sqrt(x)) 0.0000
sqrt(2*x + 1) 0.0000
x*asinh(2*x) 0.4144
None 0.0000
4*x**3 0.0019
2*x - sin(x) 0.3965
-3*log(2*x + 3)/2 0.0000
None 0.0000
2*x*(x + 1) 0.3959
x + exp(x) 0.0000
x**3*acos(x) 0.0000
sinh(2*x) 0.0000
sin(x)/2 0.3968
x**3/25 0.1549
None 0.0000
asinh(x + 1) 0.3968
2*x**15/15 0.0000
x**4/2 0.0002
None 0.0000
None 0.0000
x*log(2) 0.3968
x + 12 0.3972
None 0.0000
2*x*asinh(x) 0.4287
x*log(x) - 3*log(cos(x)) 0.0000
exp(x) + asinh(x) 0.0000
x*acosh(x) - sqrt(log(x)**2 - 1) + sinh(x) 0.0000
x - asin(x) 0.0000
x**3*tan(1) 0.0049
None 0.0000
x + sin(x) + 2 0.3968
None 0.0000
2*x*(x + 1) 0.3959
None 0.0000
-x*exp(5) 0.2404
5*log(x) 0.0000
x**3*acos(x) 0.0000
x*(x + sinh(x)) 0.0000
x + cos(x - 1) 0.3967
tanh(x/4) 0.3968
x*cos(2*x) + x 0.3971
(x + 4)/x 0.3969
2*x*(x - 5) 0.3973
x*(3*x + 7) 0.2470
None 0.0000
None 0.0000
2*x**2*asinh(x) 0.0600
x*(exp(x) + 1) 0.0000
None 0.0000
-6*x**5/5 0.0000
-2*log(cos(5*x/2)) 0.0000
x**3*(2*x + 1) 0.0000
None 0.0000
3*x*(x + 1) 0.2474
sinh(x)/3 0.0000
x + exp(x) 0.0000
x**4*(x + 1) 0.0000
28*x**7 0.0000
2*x + 4*log(x) 0.0000
None 0.0000
24*x**2 + x 0.0278
None 0.0000
log(tanh(x + 5)**2 + 1)/2 0.3969
None 0.0000
x*(x + sin(x)) 0.9092
4*x**2/155 0.4031
asinh(2*x) 0.3968
x + 6*log(x) 0.0000
x/4 0.3968
2*exp(x) 0.0000
None 0.0000
2*x**2 + 12*x 0.3908
x**2 + x + (x + 1)**2 0.3955
x + tan(x) + 1 0.3968
-6*log(x + 4) 0.0000
None 0.0000
x*(x - sin(x)) 0.9152
x*(x + 3) 0.8678
x + log(x) + 5 0.0000
x**2*tan(2) 0.1714
None 0.0000
-log(cos(3*x))/3 0.0000
None 0.0000
cos(2*x)**3 0.3968
None 0.0000
x**3*exp(-5) 0.3613
sinh(x + 1) 0.0000
x*atanh(x) 0.0000
4*log(x) 0.0000
cos(9*x/2) 0.3968
x**3/(3*tan(1)) 0.0345
None 0.0000
x + cos(acosh(x)) 0.0000
x**2*(x + 5) 0.0076
x*(x + sin(x)) + 2*x 0.8790
(2*x**2 + x)/x 0.3966
x*(x**3 + x)**2 0.0000
None 0.0000
x + tan(x) 0.3967
7*x**3 0.0011
x*(5*x**2 + x) 0.0015
x/tanh(1) 0.3967
x**2*asinh(2) 0.5948
-x**4 0.0001
cos(x) 0.3968
None 0.0000
log(x*acosh(x)) 0.0000
3*x*(x + 2/x) 0.2475
3*x**2 0.2476
x**2*acosh(x) 0.0000
-cos(2*x) 0.3968
x*(x**5 + x) 0.0000
None 0.0000
x*(x - log(x)) 0.0000
x**4/4 0.0003
x*(x**3 + 3)**4 0.0000
None 0.0000
sqrt(5)*sqrt(x) + x 0.0000
exp(2*x)/2 0.0000
x/tan(2) 0.3969
4*x**4 0.0000
2*x**(5/2) 0.0000
2*x*sqrt(1/x) 0.0000
x + 4*tanh(x) 0.3967
asinh(x**2) 0.3972
x*(x + 9) + x 0.7779
None 0.0000
None 0.0000
3*x*(x**4 + x) 0.0000
None 0.0000
x*exp(x + 5) 0.0000
x + sinh(2*x) 0.0000
2*x**5/5 + 2*x**3/3 0.0000
None 0.0000
4*log(x) 0.0000
x + 1 0.3967
log(tanh(x + 2) + 1)/2 0.0000
2*x*(x + 1) 0.3959
None 0.0000
x/(x - 1) 0.3969
x*(cos(x) + 5) 0.3962
None 0.0000
x**3*(2*x + 4) 0.0000
None 0.0000
None 0.0000
-sin(sqrt(x)) + cos(sqrt(x)) 0.0000
None 0.0000
x**2/(x + 1) 0.0000
<lambdifygenerated-762>:2: RuntimeWarning: invalid value encountered in arccosh
  return x - arccosh(x)
<lambdifygenerated-763>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + tan(log(x)))
<lambdifygenerated-764>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/5)*exp(5*sqrt(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-768>:2: RuntimeWarning: divide by zero encountered in divide
  return 2*x/(x**2 + x)
<lambdifygenerated-769>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(x) + sin(x)
<lambdifygenerated-771>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(x)
<lambdifygenerated-773>:2: RuntimeWarning: divide by zero encountered in log
  return -6*log(x + 1)
<lambdifygenerated-773>:2: RuntimeWarning: invalid value encountered in log
  return -6*log(x + 1)
<lambdifygenerated-775>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)
<lambdifygenerated-776>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
<lambdifygenerated-783>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - log(x)
<lambdifygenerated-792>:2: RuntimeWarning: invalid value encountered in log
  return log(6*x)
<lambdifygenerated-800>:2: RuntimeWarning: invalid value encountered in log
  return (5/6)*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-814>:2: RuntimeWarning: invalid value encountered in arccos
  return 5*x*arccos(x)
<lambdifygenerated-821>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x**4 + x)
<lambdifygenerated-824>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + 2
<lambdifygenerated-826>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x) + x
<lambdifygenerated-828>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arctanh(x)
<lambdifygenerated-828>:2: RuntimeWarning: divide by zero encountered in arctanh
  return sqrt(x) + arctanh(x)
<lambdifygenerated-828>:2: RuntimeWarning: invalid value encountered in arctanh
  return sqrt(x) + arctanh(x)
<lambdifygenerated-830>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2 + 1/sqrt(x)
<lambdifygenerated-832>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-835>:2: RuntimeWarning: invalid value encountered in arctanh
  return 5*arctanh(3*x)
<lambdifygenerated-837>:2: RuntimeWarning: invalid value encountered in log
  return (1/16)*log(x)
<lambdifygenerated-839>:2: RuntimeWarning: invalid value encountered in log
  return 5*x*log(x)
<lambdifygenerated-840>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(2*x + 1)
<lambdifygenerated-841>:2: RuntimeWarning: invalid value encountered in log
  return x**3*log(x)
<lambdifygenerated-844>:2: RuntimeWarning: invalid value encountered in log
  return x + 4*log(x)
<lambdifygenerated-847>:2: RuntimeWarning: invalid value encountered in log
  return x + 3*log(x)
<lambdifygenerated-851>:2: RuntimeWarning: invalid value encountered in sqrt
  return exp(x) + exp(-sqrt(x))
<lambdifygenerated-852>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(2*x + 1)
<lambdifygenerated-856>:2: RuntimeWarning: invalid value encountered in log
  return -3/2*log(2*x + 3)
<lambdifygenerated-859>:2: RuntimeWarning: invalid value encountered in arccos
  return x**3*arccos(x)
<lambdifygenerated-869>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) - 3*log(cos(x))
<lambdifygenerated-871>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x) - sqrt(log(x)**2 - 1) + sinh(x)
<lambdifygenerated-871>:2: RuntimeWarning: invalid value encountered in log
  return x*arccosh(x) - sqrt(log(x)**2 - 1) + sinh(x)
<lambdifygenerated-871>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccosh(x) - sqrt(log(x)**2 - 1) + sinh(x)
<lambdifygenerated-872>:2: RuntimeWarning: invalid value encountered in arcsin
  return x - arcsin(x)
<lambdifygenerated-877>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)
<lambdifygenerated-878>:2: RuntimeWarning: invalid value encountered in arccos
  return x**3*arccos(x)
<lambdifygenerated-889>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos((5/2)*x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-896>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 4*log(x)
<lambdifygenerated-902>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-908>:2: RuntimeWarning: invalid value encountered in log
  return -6*log(x + 4)
<lambdifygenerated-911>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 5
<lambdifygenerated-913>:2: RuntimeWarning: invalid value encountered in log
  return -1/3*log(cos(3*x))
<lambdifygenerated-917>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-917>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-918>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-921>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + cos(arccosh(x))
<lambdifygenerated-933>:2: RuntimeWarning: invalid value encountered in arccosh
  return log(x*arccosh(x))
<lambdifygenerated-936>:2: RuntimeWarning: invalid value encountered in arccosh
  return x**2*arccosh(x)
<lambdifygenerated-939>:2: RuntimeWarning: invalid value encountered in log
  return x*(x - log(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-942>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(5)*sqrt(x) + x
<lambdifygenerated-946>:2: RuntimeWarning: invalid value encountered in power
  return 2*x**(5/2)
<lambdifygenerated-947>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*x*sqrt(x**(-1.0))
<lambdifygenerated-955>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-957>:2: RuntimeWarning: divide by zero encountered in log
  return (1/2)*log(tanh(x + 2) + 1)
<lambdifygenerated-962>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sin(sqrt(x)) + cos(sqrt(x))
<lambdifygenerated-963>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
mean: 0.13958069682121277
top: 0.9151543378829956
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
atanh(2*x + 3)/2 0.0000
x**2 + x + 1 0.8975
x*(x + 3) 0.8678
None 0.0000
3*x*(x - 4) + x 0.2479
x**4*log(x) 0.0000
x**3 0.0076
x**2 + 2*x + log(x) 0.0000
sin(x)*cos(x) 0.3968
x**2*cos(1) + 1/2 0.5872
None 0.0000
x**2 + 2*x/3 0.9026
(x + sin(x))/x 0.3969
None 0.0000
3*x 0.3963
x*(x + exp(x) + 5) 0.0000
tanh(x)**3 0.3968
None 0.0000
-cos(5*x)/5 0.3968
None 0.0000
x 0.3967
2*log(5*x) 0.0000
sin(2*x) 0.3968
7*x**4/2 0.0000
x*(8*x + 7) 0.0860
(x + cos(x))/x 0.3969
None 0.0000
log(1 + 1/x) 0.0000
2*x*(x - 4) 0.3974
None 0.0000
2*x*exp(x) 0.0000
x**2*log(x)**3 0.0000
None 0.0000
sinh(2*x) 0.0000
x*cos(asinh(2*x)) 0.3968
None 0.0000
None 0.0000
x*(x + sin(x)) + x 0.8939
1/(2*x**3 + x) 0.3968
None 0.0000
(x**2 + x)/x 0.3967
atanh(x) + 1/4 0.0000
x**4/4 0.0003
x**2*tan(3) 0.3655
4*x**(3/2) 0.0000
None 0.0000
x*atanh(x) + log(x + 1) - atanh(x) 0.0000
x - 6 0.3965
x + 2 + 1/x 0.3968
x*(x + 3/x) 0.9131
x**2 + x 0.8975
4*x**2 + x 0.1799
None 0.0000
x*(-x**2 + x) 0.0076
x**7 + 1 0.0000
None 0.0000
2*x**7/7 0.0000
x**2/10 0.4222
x**2 + x + 1/sqrt(x) 0.0000
sin(2*x + 3)/2 0.3968
x*(x**2 + x + 5) 0.0076
2*x*exp(-x) 0.0000
x + 3*asinh(x) 0.3967
x**2 + x*log(x) - 3*x 0.0000
5 + 1/x 0.3970
5*x**2 + x 0.1413
None 0.0000
2*x - exp(x) 0.0000
x*(12*x + 3) 0.0565
None 0.0000
None 0.0000
2*x*cos(1) 0.3967
(5 - x)/x**2 0.3968
12*x**6 + x + log(x) 0.0000
8*x + 5 0.3950
x**7/15 0.0000
2*sin(2*x) 0.3968
5*x**2 0.1414
1 - 1/x 0.3969
x**4/16 0.0014
x**2*(x + exp(x)) 0.0000
6*x/5 0.3967
x**2/(x + 1) 0.0000
x**3/3 + x**2/2 + (x + 1)*exp(x) 0.0000
None 0.0000
x*cos(3*x) - 4*x 0.3964
log(tan(5*x + 1)**2 + 1)/5 0.3968
None 0.0000
x*asin(x) + sqrt(1 - x**2) - log(cos(x))/2 0.0000
x*log(x) - log(cos(x)) 0.0000
exp(x) - sin(x) 0.0000
None 0.0000
x + sin(x) + 5 0.3969
x + 4/x 0.3967
None 0.0000
None 0.0000
x*(x + sinh(x)) 0.0000
4 0.0000
3*E 0.0000
x**4*(x - log(x)) 0.0000
-x/3 0.3969
None 0.0000
sinh(x**2)/4 0.0000
None 0.0000
None 0.0000
5*x*acos(x) 0.0000
None 0.0000
None 0.0000
x + 4/x 0.3967
None 0.0000
4*x*cos(1) 0.3965
1 - x**2 0.2478
x + cos(3) 0.3967
x*(sin(x) + 5) 0.3950
sin(x)*cos(x) 0.3968
None 0.0000
2*x**2*atan(3) 0.3051
x*exp(-x) 0.0000
2*x + 15 0.3971
None 0.0000
None 0.0000
exp(x)/5 0.0000
None 0.0000
x*atan(x) - log(x)**2/2 + 1/(4*(x + 1)**4) 0.0000
None 0.0000
x + log(x) 0.0000
x**2/2 + sin(2*x) 0.5669
5*log(x)/3 0.0000
4*x**3*log(x) 0.0000
x*cosh(x) + x*atanh(x) + 32*cosh(x) - atanh(x) 0.0000
4*x + 2 0.3962
None 0.0000
x**4/7 0.0006
x*cos(x + 5) 0.3962
x*(x + cos(x)) 0.9124
sqrt(x) 0.0000
None 0.0000
x + 4 0.3969
x*cos(5) 0.3968
x*(x**2 + 1) 0.0076
5/(4*x) 0.3968
x**3/(x + 4) 0.9814
3*x**4/4 0.0001
None 0.0000
cos(x + 3) 0.3968
x*(x + sinh(x)) 0.0000
x**3*tan(3) 0.0510
sqrt(3)/(3*x) 0.3968
x**3/3 0.0225
sqrt(2)*x**2 0.6109
x + 2*sinh(x) 0.0000
x**4/4 0.0003
x**2*sin(3) 0.4336
None 0.0000
None 0.0000
x**12 0.0000
x**2/2 + 2*sinh(x) 0.0000
tan(x)/2 0.3968
None 0.0000
3*x*cos(x) + sin(x) 0.3980
1/sin(x) 0.3969
x**6 + x + 2 0.0000
None 0.0000
exp(x) + cos(x) 0.0000
None 0.0000
None 0.0000
x*sinh(2*x) 0.0000
None 0.0000
-cos(x - 4) 0.3968
x**2*(x + 5) 0.0076
3*x 0.3963
3*log(x)/4 0.0000
None 0.0000
None 0.0000
4*x**2/7 0.6037
x**5 - x 0.0000
x**4/2 + 2*x**3/3 0.0002
x**2*(x + 1/x) 0.0076
x + 2*cos(x) 0.3967
tan(2)/(3*x) 0.3968
5*x/2 0.3964
x*(x**4 + x)**2 0.0000
None 0.0000
4*x*cos(5) 0.3967
4*x*exp(x) 0.0000
None 0.0000
None 0.0000
x**3/3 + (x - 1)*exp(x) 0.0000
x**3 0.0076
log(x*exp(5)) 0.0000
exp(5*x) 0.0000
x**2 + 22*x 0.6605
cosh(x**3) 0.0000
x*(x**3 + 3) + x 0.0001
5*x + sin(x) 0.3958
x*sinh(x) + x 0.0000
sqrt(x**3) 0.0000
None 0.0000
log(x)/x 0.0000
4*x*sqrt(1/x) 0.0000
None 0.0000
None 0.0000
x**6*sin(3)/5 0.0000
(x**5 + x)/x 0.0001
x + exp(x) + 16 0.0000
x**2*(x**5 + 1) 0.0000
1/(2*x**3) 0.3968
None 0.0000
x + cos(x) + 4 0.3969
None 0.0000
1/tan(x) 0.3969
x**2*(2*x + 1) 0.0038
5*x*asinh(x) 0.4868
2*x + 1 0.3966
x**2 + x + 5 0.8975
None 0.0000
-5*log(tan(2*x + 5)**2 + 5)/2 0.3966
3*x + log(x**2) 0.3967
x*(4 - x) 0.2477
None 0.0000
None 0.0000
3 + x**(-3) 0.3970
-cos(x + 1) 0.3968
-2*log(cos(x)) 0.0000
x + 2*cos(x) 0.3967
x*(1 - x) 0.2477
12*x**2 0.0565
86*x**5/5 0.0000
1/16 0.0000
-sin(4*x)/4 0.3968
4*x**3/3 0.0057
None 0.0000
16*x**2 0.0421
-1/(2*x**6) 0.3968
None 0.0000
None 0.0000
x*(x + 2) 0.8824
None 0.0000
-cos(x + 3) 0.3968
None 0.0000
x/tan(5) 0.3969
x**3 + log(x) 0.0000
None 0.0000
None 0.0000
x*exp(4*x) 0.0000
None 0.0000
x + acosh(2*x) 0.0000
None 0.0000
2*x + 2/asinh(x) 0.3965
None 0.0000
None 0.0000
x*(x + cos(x) + 5) 0.8398
x*log(x) - 5*log(5*x + 1) 0.0000
2*x + 3 0.3967
x**2*(x + sin(x)) 0.0076
12*sin(x) 0.3969
<lambdifygenerated-964>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (1/2)*arctanh(2*x + 3)
<lambdifygenerated-964>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*arctanh(2*x + 3)
<lambdifygenerated-968>:2: RuntimeWarning: invalid value encountered in log
  return x**4*log(x)
<lambdifygenerated-970>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + 2*x + log(x)
<lambdifygenerated-980>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(5*x)
<lambdifygenerated-985>:2: RuntimeWarning: divide by zero encountered in log
  return log(1 + x**(-1.0))
<lambdifygenerated-988>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x)**3
<lambdifygenerated-994>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x) + 1/4
<lambdifygenerated-994>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x) + 1/4
<lambdifygenerated-997>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(3/2)
<lambdifygenerated-998>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-998>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-998>:2: RuntimeWarning: divide by zero encountered in log
  return x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-998>:2: RuntimeWarning: invalid value encountered in log
  return x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-998>:2: RuntimeWarning: invalid value encountered in add
  return x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-1008>:2: RuntimeWarning: invalid value encountered in sqrt
  return x**2 + x + 1/sqrt(x)
<lambdifygenerated-1013>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + x*log(x) - 3*x
<lambdifygenerated-1020>:2: RuntimeWarning: invalid value encountered in log
  return 12*x**6 + x + log(x)
<lambdifygenerated-1029>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
<lambdifygenerated-1033>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(x) + sqrt(1 - x**2) - 1/2*log(cos(x))
<lambdifygenerated-1033>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arcsin(x) + sqrt(1 - x**2) - 1/2*log(cos(x))
<lambdifygenerated-1033>:2: RuntimeWarning: invalid value encountered in log
  return x*arcsin(x) + sqrt(1 - x**2) - 1/2*log(cos(x))
<lambdifygenerated-1034>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) - log(cos(x))
<lambdifygenerated-1041>:2: RuntimeWarning: invalid value encountered in log
  return x**4*(x - log(x))
<lambdifygenerated-1043>:2: RuntimeWarning: overflow encountered in sinh
  return (1/4)*sinh(x**2)
<lambdifygenerated-1044>:2: RuntimeWarning: invalid value encountered in arccos
  return 5*x*arccos(x)
<lambdifygenerated-1055>:2: RuntimeWarning: invalid value encountered in log
  return x*arctan(x) - 1/2*log(x)**2 + (1/4)/(x + 1)**4
<lambdifygenerated-1055>:2: RuntimeWarning: divide by zero encountered in divide
  return x*arctan(x) - 1/2*log(x)**2 + (1/4)/(x + 1)**4
<lambdifygenerated-1056>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)
<lambdifygenerated-1058>:2: RuntimeWarning: invalid value encountered in log
  return (5/3)*log(x)
<lambdifygenerated-1059>:2: RuntimeWarning: invalid value encountered in log
  return 4*x**3*log(x)
<lambdifygenerated-1060>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*cosh(x) + x*arctanh(x) + 32*cosh(x) - arctanh(x)
<lambdifygenerated-1060>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*cosh(x) + x*arctanh(x) + 32*cosh(x) - arctanh(x)
<lambdifygenerated-1065>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x)
<lambdifygenerated-1092>:2: RuntimeWarning: invalid value encountered in log
  return (3/4)*log(x)
<lambdifygenerated-1105>:2: RuntimeWarning: invalid value encountered in log
  return log(x*exp(5))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1108>:2: RuntimeWarning: overflow encountered in cosh
  return cosh(x**3)
<lambdifygenerated-1112>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x**3)
<lambdifygenerated-1113>:2: RuntimeWarning: invalid value encountered in log
  return log(x)/x
<lambdifygenerated-1114>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4*x*sqrt(x**(-1.0))
<lambdifygenerated-1131>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos(x))
<lambdifygenerated-1144>:2: RuntimeWarning: invalid value encountered in log
  return x**3 + log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1146>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + arccosh(2*x)
<lambdifygenerated-1149>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) - 5*log(5*x + 1)
mean: 0.16933438181877136
top: 0.981351375579834
Saving results...
Working with expression:  3 * math.exp(0.1 * x[0])
Error in expression:  3 * math.exp(0.1 * x[0])
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x + tan(2) 0.3966
log(x)**2 0.0000
x**3/3 + 2*x**2 0.0224
-cos(3*x)/3 0.3968
1 - cos(x) 0.3969
tan(1)/x 0.3968
1/(4*x**2) 0.3968
3*x**2*(x + 3) 0.0025
x/(5 - x) 0.0000
x*(sqrt(x) + 1) + x 0.0000
x**2/(x + 3) 0.3966
-1/(8*x) 0.3968
(sqrt(x) + x)/x 0.0000
None 0.0000
x + log(x) + tan(x) 0.0000
x*(sqrt(x) - x**2) 0.0000
x + cos(x) + 3 0.3968
x**(5/2) + 1 0.0000
4*x*acosh(x) 0.0000
4*x/(x + 6) 0.0000
4*x + 4 0.3963
cosh(x) + 5 0.0000
None 0.0000
None 0.0000
x**2 - 2*exp(2*x) 0.0000
2*x/(x**3 + x) 0.3968
sin(x)**5 0.3968
(5 - x)/x 0.3968
None 0.0000
x**2*sin(1)/2 0.5310
None 0.0000
None 0.0000
None 0.0000
x + 5/x**4 0.3967
None 0.0000
x*(cos(x) + 1) + x 0.3970
2*x + 2/x 0.3965
sin(5*x)/5 0.3968
3*log(sin(x)) - 3*log(cos(x)) 0.0000
None 0.0000
-x**3/10 0.0709
-1/(8*x**4) 0.3968
2*x + exp(x) 0.0000
2*x*(x + 2) 0.3951
6*x**7/7 0.0000
log(5)/x 0.3968
log(5*x/4) 0.0000
x**3/(3*sin(2)) 0.0205
None 0.0000
8*x**2 0.0860
x/(4 - x) 0.3968
asinh(3*x) 0.3968
None 0.0000
x + cos(x - 1) 0.3967
2*x*cos(1) 0.3967
x + 5 0.3969
-3 0.0000
x**3 + 2 0.0076
x**(-7/3) 0.0000
(2*x + 5)/x 0.3969
-log(cos(7*x**3))/7 0.0000
cos(1)/x**2 0.3968
x*(-x**2 + x) 0.0076
asinh(x) + 5 0.3970
exp(x - 1)/2 0.0000
None 0.0000
sinh(2*x) 0.0000
x**2*(3*x**2/2 + 3/2) 0.0001
2*x*(x - 5) + x 0.3974
tanh(x + 3) 0.3968
None 0.0000
x*(2 - 2*x)*exp(x) 0.0000
None 0.0000
x**5/15 - x**2/15 0.0000
(-2*x - 2)*exp(-x) 0.0000
3/cos(x) 0.3969
sin(2*x)/12 0.3968
3*x/2 + 2*sinh(x) 0.0000
None 0.0000
(x + cos(x))/x 0.3969
None 0.0000
-cos(x + 1) 0.3968
6*x + 5 0.3957
x**2 + 2*x 0.8824
x*exp(-1) 0.3968
x**2 + log(3) 0.9131
None 0.0000
2*x**3*tan(4) 0.0033
2*x/(x + 1) 0.0000
None 0.0000
x**2*(2*x + 1) 0.0038
x + 2*sinh(x) 0.0000
7*x**4/4 + x**2 0.0000
9*x**5 0.0000
4*x**2/(x + 2) 0.3958
x**2*(x + sin(x)) 0.0076
None 0.0000
x - log(cos(x)) 0.0000
x + sqrt(3)/x 0.3967
x*log(5*x**2) + 10*x + 5*atan(x) 0.3874
x*(x + cos(x)) + x 0.8969
x + sin(x) + 6 0.3969
x*(x + sin(x) + 5) 0.8372
None 0.0000
atan(6*x) 0.3968
log(2*x**2) 0.3972
x*sin(x + 4) 0.3971
x*sqrt(x + 1) 0.0000
(x**2 + x)/x 0.3967
x + 1/sqrt(x) 0.0000
x + 3/x 0.3967
x**3/5 0.0368
4*x - log(cos(x)) 0.0000
None 0.0000
x/(x - 4) 0.3969
2*x + sin(5) 0.3965
x**2/10 0.4222
2*x*exp(x) 0.0000
x**2/(-x**2 + x) 0.3968
x + cos(x) + 5 0.3969
None 0.0000
2/(3*x**8) 0.3968
None 0.0000
8*sqrt(3)*sqrt(x**(3/2))/3 0.0000
1 + 1/x 0.3969
5*sin(2*x) 0.3968
sqrt(x + 3) 0.0000
x*(sqrt(x) + x + sin(x)) 0.0000
sinh(5*x)/5 0.0000
None 0.0000
4 - 2*x 0.3971
x + 2/x 0.3967
None 0.0000
x*cos(x) - sin(x) - cos(x) 0.3972
3*x/4 - tanh(x)/3 0.3967
x*atanh(x) - log(x + 1) 0.0000
-sqrt(x) + x**3 + 2*x 0.0000
acosh(x + 4) 0.0000
None 0.0000
5*x/2 + exp(x) 0.0000
tanh(x)**4 0.3969
x**3/27 0.1643
tan(x)**2 0.3115
112/x**2 0.3968
x**2*(2*x + 5) 0.0038
3*x*cosh(x) 0.0000
None 0.0000
3*x 0.3963
x + cos(x) + 5 0.3969
2*x**3*log(x) 0.0000
None 0.0000
4*x**2*exp(x) 0.0000
x*(x + 4) 0.8537
None 0.0000
5*x*atan(x) 0.4208
x/(cos(x) + 1) 0.1045
8*log(x) 0.0000
None 0.0000
None 0.0000
32*x**5 0.0000
None 0.0000
x*(-x**2 + x) 0.0076
x**2*cos(1) 0.5871
None 0.0000
atan(x + 3) 0.3968
x*(x - 3) + x 0.9459
x**2*(x**3 + x)**2 0.0000
None 0.0000
4*x + 5 0.3963
sqrt(x) + sin(x) + 3 0.0000
None 0.0000
None 0.0000
2*x**2 + sinh(x) 0.0000
2*log(2) 0.0000
(x + 3)/x 0.3969
x + atanh(2*x) 0.0000
-x*log(3*x) + x 0.0000
4*x*(x + sin(x)) 0.1806
25*x 0.3833
None 0.0000
None 0.0000
sin(6*x) 0.3968
None 0.0000
-cos(x)/2 0.3968
x*(x + exp(x) + 2) 0.0000
x**2*tan(5) 0.1307
tan(x + 5) 0.3969
x*(3*x + 5) 0.2472
cos(2*x) 0.3968
2*x*sin(x) 0.3951
None 0.0000
None 0.0000
-log(cos(2*x)) 0.0000
x/(x**2 + x) 0.0000
tanh(x + 2) 0.3968
None 0.0000
x*atanh(3*x) + log(x + 3) - atanh(3*x) 0.0000
x**2/2 + 5*sin(2*x*cosh(2*x))/2 0.5670
1/(12*x**2) 0.3968
x*exp(x + 2) 0.0000
2*x + 2 0.3966
3*x*(x + 6) 0.2452
x**4*sin(4) 0.0001
x**2/tan(1) 0.6449
x*tan(acosh(x)) 0.0000
None 0.0000
x**2/(x + 6) 0.0000
sin(x*(x + 5)) 0.3968
4*x*(x + 2) 0.1797
4*x/(x + 6) 0.0000
x**4*asinh(x) 0.0000
None 0.0000
3*x*log(x)**2 0.0000
9*x**3 0.0009
-1/x**2 0.3968
x**3 + atanh(x) 0.0000
x*(5 - x) 0.2476
sinh(x)/2 0.0000
tan(x)**3 0.0027
x**4*log(4) 0.0001
None 0.0000
None 0.0000
x**3 + x + 4 0.0076
(1 - x)/x 0.3968
5*x/2 0.3964
exp(x**2)/2 0.0000
sin(3*x)/3 0.3968
2*x + x*exp(-x) 0.0000
sin(x + 4) 0.3968
2*(x + exp(x))**2 0.0000
5*x**2*asinh(3) 0.0753
x + 6*log(x) 0.0000
x**3 + x + 5 0.0076
None 0.0000
8*x**3 + x 0.0010
None 0.0000
3*sinh(x) 0.0000
2*x*(x + 5) 0.3921
2*x*cos(4) 0.3969
x**2*(2*x + 1) 0.0038
None 0.0000
x*(sqrt(x) + x + 1) 0.0000
cos(5)/x 0.3968
None 0.0000
cos(x)/4 0.3968
-x + x*log(2) 0.3969
x**2/2 + x*cos(1) 0.5666
-5*x**4/2 0.0000
None 0.0000
4*x + 4/x 0.3961
log(x)/x 0.0000
(2 - x)/x 0.3968
x**2*(x**2 + x) 0.0001
x*(2*x + 4) 0.3951
-x**2/2 + x*asinh(2*x) 0.3153
<lambdifygenerated-1154>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**2
<lambdifygenerated-1161>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(5 - x)
<lambdifygenerated-1162>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + 1) + x
<lambdifygenerated-1165>:2: RuntimeWarning: invalid value encountered in sqrt
  return (sqrt(x) + x)/x
<lambdifygenerated-1166>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + tan(x)
<lambdifygenerated-1167>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) - x**2)
<lambdifygenerated-1169>:2: RuntimeWarning: invalid value encountered in power
  return x**(5/2) + 1
<lambdifygenerated-1170>:2: RuntimeWarning: invalid value encountered in arccosh
  return 4*x*arccosh(x)
<lambdifygenerated-1171>:2: RuntimeWarning: divide by zero encountered in divide
  return 4*x/(x + 6)
<lambdifygenerated-1183>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(sin(x)) - 3*log(cos(x))
<lambdifygenerated-1190>:2: RuntimeWarning: invalid value encountered in log
  return log((5/4)*x)
<lambdifygenerated-1200>:2: RuntimeWarning: invalid value encountered in power
  return x**(-7/3)
<lambdifygenerated-1202>:2: RuntimeWarning: invalid value encountered in log
  return -1/7*log(cos(7*x**3))
<lambdifygenerated-1224>:2: RuntimeWarning: divide by zero encountered in divide
  return 2*x/(x + 1)
<lambdifygenerated-1231>:2: RuntimeWarning: invalid value encountered in log
  return x - log(cos(x))
<lambdifygenerated-1240>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*sqrt(x + 1)
<lambdifygenerated-1242>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + 1/sqrt(x)
<lambdifygenerated-1245>:2: RuntimeWarning: invalid value encountered in log
  return 4*x - log(cos(x))
<lambdifygenerated-1253>:2: RuntimeWarning: invalid value encountered in power
  return (8/3)*sqrt(3)*sqrt(x**(3/2))
<lambdifygenerated-1256>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 3)
<lambdifygenerated-1257>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x + sin(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1263>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) - log(x + 1)
<lambdifygenerated-1263>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) - log(x + 1)
<lambdifygenerated-1263>:2: RuntimeWarning: divide by zero encountered in log
  return x*arctanh(x) - log(x + 1)
<lambdifygenerated-1263>:2: RuntimeWarning: invalid value encountered in log
  return x*arctanh(x) - log(x + 1)
<lambdifygenerated-1264>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x) + x**3 + 2*x
<lambdifygenerated-1265>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 4)
<lambdifygenerated-1275>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**3*log(x)
<lambdifygenerated-1280>:2: RuntimeWarning: invalid value encountered in log
  return 8*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-1288>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + sin(x) + 3
<lambdifygenerated-1292>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(2*x)
<lambdifygenerated-1293>:2: RuntimeWarning: invalid value encountered in log
  return -x*log(3*x) + x
<lambdifygenerated-1304>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(2*x))
<lambdifygenerated-1305>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x**2 + x)
<lambdifygenerated-1307>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(3*x) + log(x + 3) - arctanh(3*x)
<lambdifygenerated-1307>:2: RuntimeWarning: invalid value encountered in log
  return x*arctanh(3*x) + log(x + 3) - arctanh(3*x)
<lambdifygenerated-1315>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*tan(arccosh(x))
<lambdifygenerated-1316>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 6)
<lambdifygenerated-1319>:2: RuntimeWarning: divide by zero encountered in divide
  return 4*x/(x + 6)
<lambdifygenerated-1321>:2: RuntimeWarning: invalid value encountered in log
  return 3*x*log(x)**2
<lambdifygenerated-1324>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x**3 + arctanh(x)
<lambdifygenerated-1324>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**3 + arctanh(x)
<lambdifygenerated-1332>:2: RuntimeWarning: overflow encountered in exp
  return (1/2)*exp(x**2)
<lambdifygenerated-1338>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-1345>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x + 1)
<lambdifygenerated-1352>:2: RuntimeWarning: invalid value encountered in log
  return log(x)/x
mean: 0.17683321237564087
top: 0.9459299445152283
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
3*x*atanh(x) 0.0000
x*asin(x + 3) 0.0000
None 0.0000
x**2 + atan(x) 0.9127
None 0.0000
-x**4 + x**3 0.0001
x**2*(1 - x) 0.0076
x**4 + 5*x**3/3 0.0001
x*atanh(5) 0.0000
x*(x*sin(x) + x) 0.4559
2*x + sinh(x) 0.0000
2*x**3/9 0.0333
x**2*(3*x**2 + x) 0.0000
2*x**2 + x*cos(x) + sin(x) 0.3961
2*sqrt(2)*sqrt(x) 0.0000
None 0.0000
exp(x) + sin(x) 0.0000
None 0.0000
2*x + log(x) 0.0000
x**2*(x**2 + x) 0.0001
x**2 - 1/x 0.9131
2*x - 4*log(x**2 + 1) 0.3953
E/x**3 0.3968
None 0.0000
cos(1)/x 0.3968
None 0.0000
(x**2 + x - 2)/x 0.3967
x*(x + cos(1)) 0.9046
x*(x**3 + x) 0.0001
None 0.0000
None 0.0000
x**2*(x**2 + 1) 0.0001
3*tan(1)/x 0.3968
x*(x + log(5) + 5) 0.8190
x**2 + x/2 0.9052
-3*x + sin(x) 0.3970
tan(x + 2) 0.3969
x**2*log(x**3) 0.0000
None 0.0000
x - log(cos(x)) 0.0000
None 0.0000
x**5/10 0.0000
x/(x + 5) 0.3969
2*x + cos(1) 0.3966
(2*x + exp(x))/x 0.0000
-2*x**3/3 0.0114
2*x - cos(x) 0.3965
2*x*(2*x + 1) 0.1799
5*sin(2*x) 0.3968
x**2 + 2*x 0.8824
x**6 + 2*x 0.0000
None 0.0000
(2*x + 1)/x 0.3969
None 0.0000
sqrt(x) + x**4 + 2*x 0.0000
-x**2/2 + 2*x 0.3050
log(x)**2/(2*x) 0.0000
x*(x + sin(x)) 0.9092
x + cos(2*x) 0.3967
x*sin(x)**2 0.3966
-x**(3/2) 0.0000
x + log(x) + 1 0.0000
x**3/3 + 2*x**2 0.0224
None 0.0000
2*x*log(2*x**2) 0.3888
2*sinh(2*x + 1) 0.0000
x/(x + 5) 0.3969
4*x*tanh(4) 0.3961
x*(x + 5) + 4*x 0.7896
None 0.0000
None 0.0000
asinh(x + 3) 0.3968
None 0.0000
x*log(3) 0.3967
x**2*exp(x) + x 0.0000
(x**2 + x)/x 0.3967
2*x*(x + 5) 0.3921
5*x**7/7 0.0000
2*sqrt(2)*log(x) 0.0000
2*x*(x*log(x) + x) 0.0000
None 0.0000
exp(6*x)/6 0.0000
-x/4 0.3969
x + cos(5*x) 0.3967
sin(2*x) 0.3968
x/(x + 1) 0.0000
None 0.0000
2*x*(x + 2) 0.3951
tan(2*x/3)**3 0.3926
2*x**2 - log(cos(x)) 0.0000
-x**2 + 2*x 0.2477
x**4*(x + sin(x)) 0.0000
x*(x + 4) 0.8537
x**4/19 0.0016
None 0.0000
x + log(sqrt(x) + 2) 0.0000
3*x**2/4 0.7193
cos(x) - 1/x 0.3968
x + cos(5*x) 0.3967
x**2/2 - 2*x + exp(x) 0.0000
4/x 0.3968
(x + 5)/x 0.3969
log(tan(2*x + 2)**2 + 1)/2 0.3969
x/(x + 3) 0.3969
None 0.0000
5*(x + 3)/x 0.3970
x/(x + 5) 0.3969
None 0.0000
atanh(x)**2 0.0000
x*(x + asinh(x)) 0.8814
2*x**2 + 2*x 0.3959
x + log(x)**5 0.0000
None 0.0000
log(2*x)/x 0.0000
cosh(2*x)/2 0.0000
2*x/(x + 5) 0.3969
2*x*(x + 3) 0.3942
x**2 + x + sin(x) 0.8975
None 0.0000
x*tan(2*x) 0.3971
sin(x) 0.3968
None 0.0000
x*(x + 2)*exp(x) 0.0000
2*x*(x + cos(x)) 0.3956
x**2/(x + 3) 0.3966
None 0.0000
4*x*cos(x) 0.3984
x**2*(x + exp(x)) 0.0000
x/16 0.3968
(-x**2 + x)**3 0.0000
x**2*(x**3 + x) 0.0000
None 0.0000
log(5*x + 1)/5 0.0000
x**6/(6*log(2)) 0.0000
x*(x - 3) 0.9633
x/(x**2 + x) 0.0000
2*x + asinh(2*x) 0.3965
2*x**3/3 0.0114
None 0.0000
None 0.0000
x**6/10 0.0000
14*x**2 0.0482
2*x*atanh(2*x) 0.0000
(4 - x)/x 0.3968
x*(x + 4) 0.8537
None 0.0000
x*sin(x) - 2*x + sin(x) 0.3962
None 0.0000
None 0.0000
None 0.0000
2*x**2/17 0.4270
x**4/2 + log(x) 0.0000
x**4/4 + x**2 0.0003
4*x + cos(x) 0.3961
x**2*(1 - x) 0.0076
None 0.0000
x**2*cos(1) 0.5871
log(x)/7 0.0000
None 0.0000
x + log(x) + 8 0.0000
2*x + cosh(x) 0.0000
(2*x**2 + x)/x 0.3966
None 0.0000
x**2/2 - x*cos(x) + sin(x) 0.5661
x*log((x**3 + x)**2) 0.3827
5*x*sin(x) 0.3925
x**2*sin(2) 0.8573
x/3 0.3968
x*(x**2 + x + 8) 0.0076
25*x*cos(x) 0.4029
x*(x + 4)**3 0.0001
4*x + 1 0.3961
-x**2 + 2*x 0.2477
x**2 - 8*x 0.9460
None 0.0000
None 0.0000
x*log(2) 0.3968
2*(3*x + 1)**(3/2)/3 0.0000
x**3*sin(2) 0.0084
x*(cos(x) + 5) 0.3962
None 0.0000
5*x**3/3 0.0046
log(tan(log(2*x))) 0.0000
x + 4*log(x) 0.0000
None 0.0000
None 0.0000
3*x*cos(x) 0.3980
3*x + cos(x) 0.3963
None 0.0000
None 0.0000
2*x/(x + 4) 0.3969
None 0.0000
x*(3*x + 1) 0.2475
8*cos(3*x) 0.3968
x*cos(4) + x 0.3968
atanh(x)**2 0.0000
x + 3*sin(x) 0.3967
x**2*cos(5) 0.4784
None 0.0000
x*(x - 1/x) 0.9131
None 0.0000
None 0.0000
2*x*sinh(x**2) 0.0000
4*x + 3 0.3962
3*x**3*sin(1) 0.0030
None 0.0000
None 0.0000
x*(2*x + 5) 0.3947
x**3 0.0076
x**2*cos(4) 0.2848
x**2*(x**3 + x) 0.0000
2*x*atan(x) 0.4061
x**2*(x + cos(x)) 0.0076
3*log(x) 0.0000
cos(2*x) 0.3968
x*asinh(4*x) 0.4166
None 0.0000
x**2/2 + x*atan(3) 0.5661
None 0.0000
exp(x + 5) 0.0000
x*(x + 4)**3 0.0001
x + tan(2*x) 0.3967
5*x + sin(x) 0.3958
sinh(x) + 3 0.0000
5*x + log(x)/2 0.0000
(1/2 - x**2/2)/x 0.3969
x**2*(x + 2/x**2) 0.0076
None 0.0000
log(tan(x))/2 0.0000
x**2 + x 0.8975
2*x/(-x**2 + x) 0.3968
x*log(4) 0.3967
None 0.0000
x + 1 0.3967
5*x**3 + 13*x 0.0015
4 0.0000
x/3 0.3968
-x + atan(x) 0.3969
3*x**5 + x**4 0.0000
3*x/(x + exp(x)) 0.3969
4*x**2/5 0.7592
x + 3/x**2 0.3967
x + cos(log(x)) 0.0000
x*(3*x + 5) 0.2472
x**2 + 2*x 0.8824
2*x*sinh(x) 0.0000
2*x - sin(x) 0.3965
2*x*sinh(x) 0.0000
2*x*log(2*x**3) 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2/4 0.4670
None 0.0000
(x**6 + x)**2 0.0000
x/(-x**2 + x) 0.3968
<lambdifygenerated-1357>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 3*x*arctanh(x)
<lambdifygenerated-1357>:2: RuntimeWarning: invalid value encountered in arctanh
  return 3*x*arctanh(x)
<lambdifygenerated-1358>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(x + 3)
<lambdifygenerated-1363>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(5)
<lambdifygenerated-1369>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(2)*sqrt(x)
<lambdifygenerated-1371>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + log(x)
<lambdifygenerated-1386>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x**3)
<lambdifygenerated-1387>:2: RuntimeWarning: invalid value encountered in log
  return x - log(cos(x))
<lambdifygenerated-1399>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x**4 + 2*x
<lambdifygenerated-1401>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(x)**2/x
<lambdifygenerated-1405>:2: RuntimeWarning: invalid value encountered in power
  return -x**(3/2)
<lambdifygenerated-1406>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 1
<lambdifygenerated-1419>:2: RuntimeWarning: invalid value encountered in log
  return 2*sqrt(2)*log(x)
<lambdifygenerated-1420>:2: RuntimeWarning: invalid value encountered in log
  return 2*x*(x*log(x) + x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1425>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 1)
<lambdifygenerated-1428>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2 - log(cos(x))
<lambdifygenerated-1433>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + log(sqrt(x) + 2)
<lambdifygenerated-1444>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-1444>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-1447>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)**5
<lambdifygenerated-1448>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)/x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-1463>:2: RuntimeWarning: invalid value encountered in log
  return (1/5)*log(5*x + 1)
<lambdifygenerated-1466>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x**2 + x)
<lambdifygenerated-1471>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x*arctanh(2*x)
<lambdifygenerated-1476>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**4 + log(x)
<lambdifygenerated-1481>:2: RuntimeWarning: invalid value encountered in log
  return (1/7)*log(x)
<lambdifygenerated-1482>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 8
<lambdifygenerated-1497>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*(3*x + 1)**(3/2)
<lambdifygenerated-1501>:2: RuntimeWarning: invalid value encountered in log
  return log(tan(log(2*x)))
<lambdifygenerated-1502>:2: RuntimeWarning: invalid value encountered in log
  return x + 4*log(x)
<lambdifygenerated-1509>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-1509>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-1513>:2: RuntimeWarning: overflow encountered in sinh
  return 2*x*sinh(x**2)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: invalid value encountered in reduce
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
<lambdifygenerated-1522>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(x)
<lambdifygenerated-1531>:2: RuntimeWarning: invalid value encountered in log
  return 5*x + (1/2)*log(x)
<lambdifygenerated-1534>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(tan(x))
<lambdifygenerated-1547>:2: RuntimeWarning: invalid value encountered in log
  return x + cos(log(x))
<lambdifygenerated-1553>:2: RuntimeWarning: invalid value encountered in log
  return 2*x*log(2*x**3)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
mean: 0.21208375692367554
top: 0.9632590413093567
Saving results...
Working with expression:  math.log2(x[0] + 1)
Error in expression:  math.log2(x[0] + 1)
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
None 0.0000
9*x**3 0.0009
x**2*sinh(2) 0.2004
None 0.0000
x**2*exp(-1)/2 0.4462
None 0.0000
None 0.0000
None 0.0000
x**2 + 5*x 0.8401
4*x + sin(x) 0.3961
4/sqrt(x) 0.0000
3*x + asinh(x) 0.3963
3*x**2/4 0.7193
3*x/4 0.3967
None 0.0000
16*x**3/7 0.0033
None 0.0000
None 0.0000
x*exp(x) + x 0.0000
None 0.0000
x + 3*cos(x) 0.3967
5*x*(x + 5) 0.1406
acos(4)/sqrt(x) 0.0000
None 0.0000
atanh(x + 5) 0.0000
tanh(x + 1) 0.3968
x**4/4 + 5*x 0.0003
4*x + tan(x) 0.3961
None 0.0000
x*(x**2 + x)**3 0.0000
sin(x)**2 0.3969
4*tanh(x) 0.3968
x*(sinh(x) + 1) 0.0000
x**4/2 + sin(x) + cos(x) 0.0002
atan(x)/4 0.3968
exp(2*x**3/3) 0.0000
x + tan(x + 2) 0.3967
4*x*(x + 1) 0.1798
x**5*(x + 1) 0.0000
x**2 - 2*x 0.9459
x*cos(log(x)) 0.0000
None 0.0000
(x + 3)*cos(x) 0.3973
x*acos(5) 0.0000
sin(x + 3) 0.3968
x**2*cosh(2) + x 0.1924
x + 4*log(x)/x 0.0000
1/sin(x + 5) 0.3968
None 0.0000
x**4/4 + 2*x**2 0.0003
tan(1)/x 0.3968
asin(x + 2) 0.0000
x*(5*x + 2) 0.1413
x**2*(x**2 + 4) 0.0001
x*acos(x) + 3 0.0000
None 0.0000
3*x/4 0.3967
None 0.0000
x*(x + 1) + x 0.8824
None 0.0000
2*x**2 - cos(x) 0.3965
x**5 0.0000
1/(3*x + 5) 0.3968
sin(x) + cos(x) 0.3968
1/(-x**2 + x) 0.3968
None 0.0000
(x + 2)/x 0.3969
3*x**2 - 2*(3*x + 2)**3/3 0.0004
None 0.0000
x**2 + atan(x) 0.9127
x + cos(4) 0.3967
x**2/2 + sin(x) 0.5669
x + log(cos(x)) 0.0000
sinh(x)**2 0.0000
(-x**3 + x**2 - 5)*sinh(x) 0.0000
None 0.0000
(x + 5)/x**5 0.3968
None 0.0000
2*x*(x**2 + x) 0.0038
x*(x + 1/x) + 2*x 0.8824
5*x**3/3 0.0046
None 0.0000
x + 2*log(x) + sin(x) 0.0000
None 0.0000
x**4/8 0.0007
log(x)**2 0.0000
x + 5*log(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*(x + exp(2)) 0.8092
x + tan(5*x) 0.3967
2*x + cos(x + 2) 0.3965
2*x + exp(2*x) 0.0000
log(x)/x 0.0000
x + sin(x) + 5 0.3969
None 0.0000
4*x**3 0.0019
None 0.0000
cos(2*x + 4) 0.3968
x*(x + 2) + 2*x 0.8537
9*x**2/5 0.4506
x**2 + 4 0.9131
-acos(4*x)/4 0.0000
4*x**2 0.1800
x**2 + asinh(x) 0.9120
x*(x + asinh(x)) 0.8814
sin(2*x) 0.3968
None 0.0000
28*x**2 0.0238
None 0.0000
x*asinh(x) 0.4122
56*x**2 0.0118
2*x**2/9 0.4580
x**2/(3*log(5)) 0.4532
x**2 - (x + cos(x))**sin(x) 0.0000
x*cos(x + 4) 0.3959
4*x/(x**2 + x) 0.0000
x*(3*x**2 + x) 0.0025
None 0.0000
asinh(x + 1) 0.3968
8*x**2 0.0860
x + log(x)/x 0.0000
None 0.0000
9*x**2 0.0761
None 0.0000
sin(x) + tan(x) 0.3969
x**3*cos(1) 0.0140
None 0.0000
2*x + sinh(x) 0.0000
(x + cos(x))/x 0.3969
x**2/2 + x*acos(5) 0.0000
-1/(2*x**2) 0.3968
9/x 0.3968
x*(x + cos(2)) 0.9197
None 0.0000
None 0.0000
8*x**3/3 0.0029
6/x 0.3968
x**2*cos(1)/2 0.4737
x + log(5) 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
0 0.0000
x*(x**2 + 1) 0.0076
None 0.0000
x + tan(2*x) 0.3967
3*x/2 0.3966
(2*x + 2)/x 0.3969
x*(x*sin(x) + x) 0.4559
x**2 + 2*x 0.8824
None 0.0000
None 0.0000
None 0.0000
x*(x + cosh(x)) 0.0000
8/x 0.3968
x*(3 - x) 0.2477
None 0.0000
asinh(x + 1) 0.3968
sqrt(x) + tan(x) + 2 0.0000
None 0.0000
x/(2*x + 2) 0.0000
1/3 0.0000
asinh(x**3) 0.3968
2*x**7/7 0.0000
log(x**2 - 1/2) 0.3972
-x**2 + 3*x 0.2477
x*(x**2 + x) 0.0076
None 0.0000
2*x*cosh(x) 0.0000
2*x**2*atan(x) 0.1666
(exp(x) + atan(x))/x 0.0000
x**3*(-x**2 + x) 0.0000
log(5*x)/5 0.0000
cos(x + 2) 0.3968
None 0.0000
(x + sin(x))**2 0.9039
x**4/52 0.0045
x*sin(1/x)**2 0.3968
None 0.0000
None 0.0000
2*x*(x + 5) 0.3921
x/(x + 2) 0.3969
x*sin(x + 5) 0.3962
5*x*asinh(x) 0.4868
log(5*x**2) 0.3972
8*x**3/(x + 2) 0.0860
None 0.0000
cos(x + 1) 0.3968
x*(x + 4) 0.8537
None 0.0000
-2*x + tan(x) 0.3970
63*x**111 0.0000
3*sin(9*x) 0.3968
2*(2*x + 1)/x 0.3970
x*(x**2 + x) 0.0076
x**2/9 0.4252
None 0.0000
None 0.0000
4*cos(3*x) 0.3968
None 0.0000
None 0.0000
None 0.0000
x*log(x**3) 0.0000
2*x + 6/x 0.3965
x*(x + 4) 0.8537
x*asinh(2) 0.3966
x**2*(2*x + 5) 0.0038
None 0.0000
(x + 2 + 1/x)/x 0.3969
None 0.0000
x*(x + 5) + 2*x 0.8140
x*(x + acos(x)) 0.0000
sqrt(x) + 2*x 0.0000
log(2)/x**2 0.3968
None 0.0000
2*x + 1 0.3966
None 0.0000
x**3/3 0.0225
3*x**4/4 0.0001
x*(sqrt(x) + x)**2 0.0000
x*cos(log(x)) + sin(log(x)) 0.0000
sin(2*x) 0.3968
x**4 - log(x) 0.0000
None 0.0000
2*x/5 0.3968
None 0.0000
x**3/3 + x**2 0.0225
None 0.0000
exp(2)*sinh(x) 0.0000
2*x*(x + 4) 0.3932
-x**3/17 0.1137
1/(x**2 + x) 0.0000
4*x**3 + 5*x**2/2 0.0019
tan(x + 2) 0.3969
None 0.0000
x*(2*x + 3) 0.3955
x**2/2 + 2*x - sin(x) 0.5654
None 0.0000
2*x + cos(x) 0.3965
x**10 + x 0.0000
1/(5*x**2) 0.3968
x*(x + 3) 0.8678
1/(sqrt(x) + x) 0.0000
asin(log(2*x + 1)) 0.0000
sin(x + 3) 0.3968
x**2 0.9131
None 0.0000
None 0.0000
x**2*acosh(x) 0.0000
x*(x + cos(x)) + x 0.8969
None 0.0000
(4 - x)/x 0.3968
<lambdifygenerated-1562>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4/sqrt(x)
<lambdifygenerated-1570>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(4)/sqrt(x)
<lambdifygenerated-1570>:2: RuntimeWarning: invalid value encountered in sqrt
  return arccos(4)/sqrt(x)
<lambdifygenerated-1571>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-1571>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-1581>:2: RuntimeWarning: overflow encountered in exp
  return exp((2/3)*x**3)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-1586>:2: RuntimeWarning: invalid value encountered in log
  return x*cos(log(x))
<lambdifygenerated-1588>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(5)
<lambdifygenerated-1591>:2: RuntimeWarning: invalid value encountered in log
  return x + 4*log(x)/x
<lambdifygenerated-1595>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 2)
<lambdifygenerated-1598>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x) + 3
<lambdifygenerated-1611>:2: RuntimeWarning: invalid value encountered in log
  return x + log(cos(x))
<lambdifygenerated-1618>:2: RuntimeWarning: invalid value encountered in log
  return x + 2*log(x) + sin(x)
<lambdifygenerated-1620>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**2
<lambdifygenerated-1621>:2: RuntimeWarning: invalid value encountered in log
  return x + 5*log(x)
<lambdifygenerated-1626>:2: RuntimeWarning: invalid value encountered in log
  return log(x)/x
<lambdifygenerated-1633>:2: RuntimeWarning: invalid value encountered in arccos
  return -1/4*arccos(4*x)
<lambdifygenerated-1643>:2: RuntimeWarning: invalid value encountered in power
  return x**2 - (x + cos(x))**sin(x)
<lambdifygenerated-1645>:2: RuntimeWarning: divide by zero encountered in divide
  return 4*x/(x**2 + x)
<lambdifygenerated-1649>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)/x
<lambdifygenerated-1655>:2: RuntimeWarning: invalid value encountered in arccos
  return (1/2)*x**2 + x*arccos(5)
<lambdifygenerated-1674>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + tan(x) + 2
<lambdifygenerated-1675>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(2*x + 2)
<lambdifygenerated-1686>:2: RuntimeWarning: invalid value encountered in log
  return (1/5)*log(5*x)
<lambdifygenerated-1706>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**3)
<lambdifygenerated-1713>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(x + arccos(x))
<lambdifygenerated-1714>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 2*x
<lambdifygenerated-1719>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x)**2
<lambdifygenerated-1720>:2: RuntimeWarning: invalid value encountered in log
  return x*cos(log(x)) + sin(log(x))
<lambdifygenerated-1722>:2: RuntimeWarning: invalid value encountered in log
  return x**4 - log(x)
<lambdifygenerated-1728>:2: RuntimeWarning: divide by zero encountered in power
  return (x**2 + x)**(-1.0)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-1737>:2: RuntimeWarning: invalid value encountered in sqrt
  return (sqrt(x) + x)**(-1.0)
<lambdifygenerated-1738>:2: RuntimeWarning: invalid value encountered in log
  return arcsin(log(2*x + 1))
<lambdifygenerated-1738>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(log(2*x + 1))
<lambdifygenerated-1741>:2: RuntimeWarning: invalid value encountered in arccosh
  return x**2*arccosh(x)
mean: 0.2009115219116211
top: 0.9459299445152283
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
None 0.0000
x + exp(5) 0.4023
(x**2 + x)/x**3 0.3968
x*(x + 1) 0.8975
2*x**2 + x 0.3962
x + 3 0.3968
log(sin(x))**2 0.0000
sqrt(x) + asinh(x) 0.0000
4*x**5/5 + 2*x 0.0000
exp(3)/x**3 0.3968
sin(x + 1) 0.3968
x**2 - x 0.9292
2*x + atanh(x) 0.0000
2*x**2 - x 0.3967
None 0.0000
4*x + log(x)*cos(x) 0.0000
x + 4 0.3969
x**2 + x/2 0.9052
x*(x**3 + x + cos(x)) 0.0001
x + (log(x) + 3)**2 0.0000
None 0.0000
x*(x + 1) + x 0.8824
x*(x + cos(x)) + x 0.8969
None 0.0000
sqrt(2)*sqrt(x) 0.0000
x**2*(x + 4) 0.0076
x/14 0.3968
x + cos(x) 0.3967
None 0.0000
4*x**3*atan(x) 0.0012
2/x 0.3968
None 0.0000
tanh(x)**3 0.3968
x**3*sinh(1)/3 0.0192
x**2/12 0.4178
atanh(x + 4) 0.0000
x*cos(x + 1) 0.3978
x**4/4 0.0003
x**2 + cos(x) 0.9130
None 0.0000
4*x*(x + cos(x)) 0.1796
3*x/2 0.3966
x + sin(x)**4 0.3967
2*x*(x + cos(x)) 0.3956
(3*x + 1)**2 0.0760
x**2*sin(2) 0.8573
log(x + 2) 0.0000
x*(x + tan(3)) 0.9153
x*(3*x + 4) 0.2473
x/2 0.3968
x*(2*x + 2) 0.3959
x*tanh(2) 0.3967
x**2*cos(1) 0.5871
x**2 + sinh(x) 0.0000
None 0.0000
125*x**4 0.0000
x**3 + 3*x 0.0076
x*(x + cos(4)) 0.9236
cos(x)**(-3) 0.0027
-4*asinh(x) 0.3969
acosh(x + 3) 0.0000
sin(x) - asin(x) 0.0000
None 0.0000
6*x 0.3955
x*(x + cosh(x)) 0.0000
(sqrt(x) + x)/x 0.0000
2*sqrt(x) + cos(x) 0.0000
x*sin(x) + x + cos(x) + Abs(x) 0.3988
x*(x + cos(x)) + x 0.8969
None 0.0000
cos(exp(2*x**2)) 0.0000
None 0.0000
1 - x 0.3970
x**2 + tan(4) 0.9131
34*x**2 0.0196
4*x/sin(x) 0.3784
x*cos(x) + 1 0.3973
x**2*(x + asinh(x)) 0.0072
x**4/4 + cos(x) 0.0003
3*x**2 + x 0.2475
cos(2/x**2) 0.3969
2*x**5/5 + exp(x) 0.0000
x**2 + 4 0.9131
None 0.0000
x*(x + sin(x) + 2) 0.8790
7*x**4 0.0000
x**3*exp(-1) 0.0204
2*x*sinh(x) 0.0000
x*(x + 2) 0.8824
None 0.0000
3*x + cos(x) 0.3963
2*x**2/9 0.4580
None 0.0000
None 0.0000
None 0.0000
-2*log(cos(x)) 0.0000
cosh(tan(x + 4)) 0.0000
E*x**4 + x 0.0000
x*cos(x + 3) 0.3965
-x**3 + x 0.0076
x*(x + 4) 0.8537
x**2*cos(1)/2 0.4737
None 0.0000
2*x + tan(2) 0.3965
4*x**2 0.1800
-x**2/2 0.3051
3*x + tan(3*x) 0.3964
x*(x + cos(x)) 0.9124
2*x*(x**5 + x) 0.0000
x*(2*x + asinh(x)) 0.3823
None 0.0000
sinh(x)/2 0.0000
x*(x + 3) 0.8678
(2*x + 2)**3 0.0010
1/(2*x) 0.3968
x**2*(2*x + cos(x)) 0.0038
log(x)/2 0.0000
x*(2*x + 3) 0.3955
None 0.0000
x*cos(x + 1) 0.3978
x + asinh(x) 0.3967
x**2/2 + x*log(x**4) - x 0.5402
None 0.0000
x/(x + 2) 0.3969
sqrt(x) + x + cos(tan(x)) 0.0000
None 0.0000
6*x*sin(x) 0.3916
exp(3*x) + exp(2*x) 0.0000
2*x*tanh(3) 0.3965
x*(2*x + 4) 0.3951
x + exp(x) + 1 0.0000
-2*x**2 + log(tan(x) + 1) - atan(x) 0.0000
4*x**6 + x 0.0000
sin(2*x) 0.3968
4*x**2 + 2*x 0.1799
9*x**2 0.0761
2*x**2 + 8*x 0.3932
x*(x + 4) 0.8537
x**2/2 - x*cos(atanh(x)) + sin(atanh(x)) 0.0000
4*x + sin(x) 0.3961
x**2/2 + 2*x 0.5654
x + 1/(x + 5) 0.3967
x*(x - 1/x) 0.9131
x**5*tan(1) 0.0000
3/sqrt(x) 0.0000
x*(x + 4) 0.8537
x*(4*x + cos(x)) 0.1799
3*x + tan(x) 0.3964
-x/2 0.3969
4*x + asinh(x) 0.3961
x**3 + 4 0.0076
9*x + sin(x) 0.3944
5*x/4 0.3967
atan(x + 4) 0.3968
sin(sqrt(x))**2 0.0000
cos(3*log(x)) 0.0000
-x**3 + x**2 + 3*x 0.0076
sin(asinh(x))/x**2 0.3968
None 0.0000
None 0.0000
x**2*cos(5) 0.4784
-x**2 + exp(2*x) 0.0000
3*x**2/2 0.5662
acosh(x + 5) 0.0000
x + atanh(x)**3 0.0000
x*(x + cos(4)) 0.9236
sin(2*x)/2 0.3968
x*(x + 1) + x 0.8824
log(x) + 4 0.0000
x*(x + log(x)) 0.0000
3*sin(x) 0.3969
cos(x + 2) 0.3968
None 0.0000
x**8*(x + 6) 0.0000
None 0.0000
x*cos(cosh(x)) + x 0.3961
2*x + sin(x) 0.3966
2*x + 4*sqrt(2)*x 0.3949
x + tan(x) - 1/(2*x**2) 0.3967
sin(2*x**2 + 4)/4 0.3968
426*x**2 0.0015
x*cos(x + 5) 0.3962
x**2/2 + sin(x) 0.5669
None 0.0000
sinh(x + 2) 0.0000
3/x 0.3968
None 0.0000
None 0.0000
x*(x + 1) + 2*x 0.8678
2*sqrt(x) + x**3/3 0.0000
None 0.0000
(x + 1)/x**2 0.3968
x**4 0.0001
4*x**2*exp(-1) 0.5803
4*x + 7 0.3964
acosh(x + 2) 0.0000
exp(x + 2) 0.0000
None 0.0000
-x**2 + 2*x 0.2477
x**(3/2) 0.0000
x**2*cos(4) 0.2848
cos(2*x + 5) 0.3968
3*x**2/2 + 4*x 0.5614
x*(x + sin(x)) + 1 0.9092
asinh(x + 4) 0.3968
None 0.0000
x*(x + cos(x)) 0.9124
sqrt(x) + atan(x) 0.0000
None 0.0000
2*cos(x) 0.3968
None 0.0000
2*x**3*cos(x) 0.0066
x**2/4 + x 0.4667
5*cos(2*x)/2 0.3968
x**2 + sinh(x) 0.0000
asinh(x + 3) 0.3968
9/x**2 0.3968
None 0.0000
x + 4 0.3969
sin(x + 2) 0.3968
x**2*cos(x) 0.3611
tanh(x + 2) 0.3968
x + cos(3*x) 0.3967
x**2 + tan(3*x) 0.9132
None 0.0000
None 0.0000
None 0.0000
x**2 + 2*x 0.8824
x - 1/(3*x**3) 0.3967
x*(x + 5) + 2*x 0.8140
2*sqrt(5)*cos(x) 0.3968
x + cos(2*x) 0.3967
x**2*cos(4) 0.2848
None 0.0000
-3*x/4 0.3969
3*x**4/10 0.0003
None 0.0000
-log(cos(2*x)) + tan(2*x) 0.0000
None 0.0000
x*asinh(2) 0.3966
x*(x + 27) 0.6215
None 0.0000
x**2*tan(3) 0.3655
x**2*(x**2 + x) 0.0001
9/x**3 0.3968
x/4 0.3968
None 0.0000
-2*x + atan(x) 0.3970
4*x*(x + log(x)) 0.0000
1/(x + 2) 0.3968
x/(x + 4) 0.3969
cos(x + 5) 0.3968
-5*x + sin(5*x) 0.3969
4*x**4 0.0000
None 0.0000
<lambdifygenerated-1749>:2: RuntimeWarning: invalid value encountered in log
  return log(sin(x))**2
<lambdifygenerated-1750>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arcsinh(x)
<lambdifygenerated-1755>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x + arctanh(x)
<lambdifygenerated-1755>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x + arctanh(x)
<lambdifygenerated-1757>:2: RuntimeWarning: invalid value encountered in log
  return 4*x + log(x)*cos(x)
<lambdifygenerated-1761>:2: RuntimeWarning: invalid value encountered in log
  return x + (log(x) + 3)**2
<lambdifygenerated-1764>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(2)*sqrt(x)
<lambdifygenerated-1773>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 4)
<lambdifygenerated-1783>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 2)
<lambdifygenerated-1796>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 3)
<lambdifygenerated-1797>:2: RuntimeWarning: invalid value encountered in arcsin
  return sin(x) - arcsin(x)
<lambdifygenerated-1800>:2: RuntimeWarning: invalid value encountered in sqrt
  return (sqrt(x) + x)/x
<lambdifygenerated-1801>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x) + cos(x)
<lambdifygenerated-1804>:2: RuntimeWarning: overflow encountered in exp
  return cos(exp(2*x**2))
<lambdifygenerated-1804>:2: RuntimeWarning: invalid value encountered in cos
  return cos(exp(2*x**2))
<lambdifygenerated-1823>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-1842>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(x)
<lambdifygenerated-1848>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + cos(tan(x))
<lambdifygenerated-1854>:2: RuntimeWarning: invalid value encountered in log
  return -2*x**2 + log(tan(x) + 1) - arctan(x)
<lambdifygenerated-1861>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (1/2)*x**2 - x*cos(arctanh(x)) + sin(arctanh(x))
<lambdifygenerated-1861>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*x**2 - x*cos(arctanh(x)) + sin(arctanh(x))
<lambdifygenerated-1861>:2: RuntimeWarning: invalid value encountered in cos
  return (1/2)*x**2 - x*cos(arctanh(x)) + sin(arctanh(x))
<lambdifygenerated-1861>:2: RuntimeWarning: invalid value encountered in sin
  return (1/2)*x**2 - x*cos(arctanh(x)) + sin(arctanh(x))
<lambdifygenerated-1867>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3/sqrt(x)
<lambdifygenerated-1877>:2: RuntimeWarning: invalid value encountered in sqrt
  return sin(sqrt(x))**2
<lambdifygenerated-1878>:2: RuntimeWarning: invalid value encountered in log
  return cos(3*log(x))
<lambdifygenerated-1884>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 5)
<lambdifygenerated-1885>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x + arctanh(x)**3
<lambdifygenerated-1885>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(x)**3
<lambdifygenerated-1889>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 4
<lambdifygenerated-1890>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x))
<lambdifygenerated-1905>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x) + (1/3)*x**3
<lambdifygenerated-1910>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 2)
<lambdifygenerated-1913>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2)
<lambdifygenerated-1920>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arctan(x)
<lambdifygenerated-1942>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(2*x)) + tan(2*x)
<lambdifygenerated-1950>:2: RuntimeWarning: invalid value encountered in log
  return 4*x*(x + log(x))
mean: 0.26745834946632385
top: 0.9292064905166626
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x*cos(x + 2) 0.3974
3*x*log(x) + 3*x 0.0000
1/(4*x**2) 0.3968
None 0.0000
sin(x)**2 0.3969
None 0.0000
x*(x*cos(1) + x) 0.5474
3*x + 2 0.3964
None 0.0000
None 0.0000
None 0.0000
sin(x + 2) 0.3968
(x + 1)/x 0.3969
2*x**2 + x 0.3962
2*x**3/3 + 3*x 0.0114
zoo 0.0000
x**2/2 + sinh(x) 0.0000
None 0.0000
4*x 0.3961
2*cos(x) 0.3968
None 0.0000
(x + 3)/x 0.3969
x**2 + sin(x) 0.9131
log(x)**3 0.0000
2*x + cos(x) 0.3965
log(x*tan(2)) 0.0000
x**2*log(5) 0.5178
x*(x + sin(x)) 0.9092
None 0.0000
3*x*(x + 3) 0.2467
2*x + cos(4) 0.3965
atanh(x)**2 0.0000
x**3*cos(1) 0.0140
x**2*log(x) - 2*x 0.0000
x*(x + 2) 0.8824
-x**2/4 - 5*sin(x) 0.3449
x**2 + 2*x 0.8824
x + log(x) - 4 0.0000
None 0.0000
4*x**5/5 0.0000
(x + 9)/x 0.3969
sqrt(x + 3) 0.0000
None 0.0000
x*(x + cos(x)) 0.9124
x**3/19 0.1242
x**2 + x/3 0.9078
x + 6 0.3969
x/(2*x + 2) 0.0000
9/x 0.3968
None 0.0000
3*x/2 0.3966
-exp(x + 3) 0.0000
log(x**2)**5 0.0864
5*E*x 0.3920
x*(x + cos(x)) 0.9124
None 0.0000
x*sin(x + 1) + x 0.3966
-x**3/3 + 2*x 0.0225
None 0.0000
3*x**2/2 + x*log(4) + 4*x 0.5593
x**2 + tanh(x) 0.9128
(x + log(x))**2 0.0000
None 0.0000
sin(x)**2 0.3969
4*x**7/7 0.0000
sqrt(x) + x + log(x) 0.0000
None 0.0000
None 0.0000
2*log(x)/x**2 0.0000
exp(x) + x**(-2) 0.0000
None 0.0000
None 0.0000
2*x**2*cos(x) 0.2975
24*x**3 0.0003
sin(x/2) 0.3968
x + sin(x/2) 0.3967
x**2 + tan(x + 4) 0.9132
None 0.0000
None 0.0000
None 0.0000
1 - tan(x) 0.3969
None 0.0000
3*x + cos(x) 0.3963
x**2/(x + 5) 0.3965
x + 8 0.3970
x*(x + cos(1)) 0.9046
x**2*sinh(6) 0.0033
-x**3/3 + 2*x + exp(x) 0.0000
x*(x + cos(5)) 0.9086
x + log(x)**2 0.0000
x**2 + 8 0.9131
None 0.0000
x*(x**2 + sinh(x)) 0.0000
x**2 + 2*x 0.8824
None 0.0000
None 0.0000
4*x**4 - 2*x 0.0000
2*x**2 + sin(x) 0.3965
None 0.0000
None 0.0000
1/(x**3 + x) 0.3968
4*x*log(x) 0.0000
x*exp(3*x) 0.0000
x + 2/x 0.3967
None 0.0000
x**3*sin(x)/3 0.0269
2*x**2 + x 0.3962
None 0.0000
3*x + 2 0.3964
exp(x) + sinh(x) 0.0000
exp(-1)/x**2 0.3968
x**2 + asinh(x) 0.9120
x**2 - 4*x 0.9812
None 0.0000
x + 1/2 0.3967
-5*x + 5*log(x) 0.0000
None 0.0000
x**6/3 + exp(x) + 2 0.0000
None 0.0000
None 0.0000
2*x + 4*cos(x) 0.3965
x**2*exp(x) + x 0.0000
None 0.0000
x**2/2 - x 0.5675
sinh(x) 0.0000
x**2*sin(5) 0.2516
x*cosh(x) + sin(x) 0.0000
x*sin(x) + x + cos(x) 0.3959
x + sqrt(1 - x**2) 0.0000
cos(x) + atan(x) 0.3968
x*sin(5) + x 0.3968
x**7/7 0.0000
x + atanh(x + 4) 0.0000
2*x**2 + sin(x) 0.3965
2*x + 5 0.3967
x*exp(x) + 5 0.0000
None 0.0000
x**2 + atanh(4*x) 0.0000
x + sqrt(2)*cos(x) 0.3967
x**2 + tanh(x) 0.9128
2*x**3 + 2*x 0.0038
sin(x)**2 0.3969
x**5/5 + x 0.0000
x + log(x)**2 0.0000
None 0.0000
sin(x) + 2 0.3969
None 0.0000
x + acos(x) + 3 0.0000
5*x + tan(x) 0.3959
x + sin(2*x) 0.3967
tanh(x)**5 0.3968
x + sin(x) + 3 0.3968
None 0.0000
log(log(4*x)) 0.0000
4*x*cos(x) 0.3984
8*x + sin(x) 0.3948
x + 8/x 0.3967
6*x 0.3955
3/x 0.3968
None 0.0000
None 0.0000
x + tan(4) 0.3968
-x**2 + 2*x 0.2477
None 0.0000
2*x**2*sin(x) 0.2905
x*acos(5) 0.0000
x*(x + 4) 0.8537
x**2 - 4*x 0.9812
None 0.0000
(4*x + 5)**2 0.0420
x/5 0.3968
None 0.0000
2*x**2*exp(x) 0.0000
x*(x + 2) 0.8824
x**3*sin(1)/3 0.0266
None 0.0000
3*x**2 + x 0.2475
None 0.0000
None 0.0000
sin(x) + cos(x) 0.3968
<lambdifygenerated-1957>:2: RuntimeWarning: invalid value encountered in log
  return 3*x*log(x) + 3*x
<lambdifygenerated-1971>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**3
<lambdifygenerated-1973>:2: RuntimeWarning: invalid value encountered in log
  return log(x*tan(2))
<lambdifygenerated-1978>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-1978>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-1980>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x) - 2*x
<lambdifygenerated-1984>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) - 4
<lambdifygenerated-1987>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 3)
<lambdifygenerated-1992>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(2*x + 2)
<lambdifygenerated-2003>:2: RuntimeWarning: invalid value encountered in log
  return (x + log(x))**2
<lambdifygenerated-2006>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + log(x)
<lambdifygenerated-2006>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + x + log(x)
<lambdifygenerated-2007>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(x)/x**2
<lambdifygenerated-2022>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)**2
<lambdifygenerated-2029>:2: RuntimeWarning: invalid value encountered in log
  return 4*x*log(x)
<lambdifygenerated-2040>:2: RuntimeWarning: invalid value encountered in log
  return -5*x + 5*log(x)
<lambdifygenerated-2049>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + sqrt(1 - x**2)
<lambdifygenerated-2053>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(x + 4)
<lambdifygenerated-2057>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**2 + arctanh(4*x)
<lambdifygenerated-2063>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)**2
<lambdifygenerated-2065>:2: RuntimeWarning: invalid value encountered in arccos
  return x + arccos(x) + 3
<lambdifygenerated-2070>:2: RuntimeWarning: invalid value encountered in log
  return log(log(4*x))
<lambdifygenerated-2079>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(5)
<lambdifygenerated-2093>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + tan(x)
<lambdifygenerated-2106>:2: RuntimeWarning: invalid value encountered in log
  return -x + log(x)
<lambdifygenerated-2107>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x**(-1.0)))
<lambdifygenerated-2117>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + cos(log(x)))
<lambdifygenerated-2129>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + cos(x)**3
<lambdifygenerated-2133>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)
<lambdifygenerated-2134>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-2149>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**2
x*(x + 2) + x 0.8678
x*(2*x + 4) 0.3951
x*(3*x + 4) 0.2473
sqrt(x) + tan(x) 0.0000
2/x 0.3968
x - cos(x) 0.3967
26*x**2 0.0257
sinh(x)/4 0.0000
None 0.0000
3*x*(x + 5) 0.2458
x*sin(x) + x + cos(x) 0.3959
exp(x + 3) 0.0000
5*x**2 + 5*x 0.1413
None 0.0000
2*x**2 + 6*x 0.3942
2*atan(x) 0.3968
zoo 0.0000
-x**2 + sin(x) 0.2477
2*x*(x + sin(x)) 0.3980
None 0.0000
-x + log(x) 0.0000
x*(x + log(1/x)) 0.0000
x*(x**2 + 3*x) 0.0076
x*(x + 3) + x 0.8537
2*x**2 + x + cosh(x) 0.0000
4*x**3 + x 0.0019
9*x**2 0.0761
None 0.0000
None 0.0000
x*(x + sin(x)) 0.9092
x*(x + 3) + 2*x 0.8401
x + tan(4*x) 0.3962
None 0.0000
None 0.0000
2*x + asinh(x) 0.3965
x*(x + cos(log(x))) 0.0000
x**2/12 0.4178
2*x*(x + cos(x)) 0.3956
2*x**2 - 3*x 0.3971
None 0.0000
x**2/2 + x 0.5663
x**2/2 - x + exp(x) 0.0000
x*(3*x + 5) 0.2472
x**4 + x + 3 0.0001
x**2/34 0.4040
5*sinh(x) 0.0000
x*(x**5 + x + 5) 0.0000
7*x/4 0.3966
x + log(x) + cos(x)**3 0.0000
None 0.0000
x**2*cos(4)/2 0.3316
x**2 + 2*x 0.8824
2*x**4 + cos(x) 0.0000
None 0.0000
None 0.0000
log(2*x) 0.0000
x*(sqrt(x) + x) 0.0000
-2*x**4 + 2*x 0.0000
x*(x + cos(5)) 0.9086
4*x**3/3 + sin(x) 0.0057
x**3/3 + x 0.0225
-2*x**2 + 4*x 0.1800
x*(2 + 1/x) 0.3966
None 0.0000
None 0.0000
x + exp(5*x) 0.0000
x**3/3 + x**2*cos(x) 0.0224
cos(2*x) 0.3968
x**3 + sin(x) 0.0076
None 0.0000
x*(x + tan(x) + 2) 0.8038
x + x/(x + 5) 0.3967
1 + 1/x 0.3969
cos(x + 5) 0.3968
log(x)**2 0.0000
mean: 0.23305080831050873
top: 0.9812045693397522
Saving results...
Working with expression:  -x[0] - 2
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x**2 + sin(x) 0.0124
4*sin(x) 0.5028
sin(x + 4) 0.4998
x**4 + 2*x 0.0000
(x + 5)**2 0.0122
x + sin(x) + 2 0.3336
None 0.0000
4*x + cos(x) 0.1666
2*x + cos(x) 0.2499
5/(2*x) 0.4998
x*(x + cos(x)) 0.0124
x + log(x) + 6 0.0000
x + 10/x 0.3330
2*cos(x)/x 0.5000
sqrt(x) + x + asinh(x) 0.0000
x**2*(x + 4) 0.0001
x*(x + exp(x)) 0.0000
3*x + 5 0.2000
sinh(x + 2) 0.0000
exp(x**2) 0.0000
x*(x + 3) + x 0.0123
x/4 0.4444
25*x**2 + log(x) 0.0000
exp(x + 3) 0.0000
sin(x + 2) 0.4992
None 0.0000
tanh(x) + 1 0.4963
None 0.0000
-x**4/2 + x 0.0000
x*(x + cos(x) + 2) 0.0123
3*x*atan(x) 0.1720
-x*cos(x) 0.4596
-x**2 + cos(x) 0.0124
None 0.0000
2/(5*x**4) 0.5000
x*(x + cos(x)) 0.0124
x + sin(x) + 4 0.3335
x*(x + exp(2)) 0.0123
None 0.0000
None 0.0000
tan(x + 5) 0.4853
3*x + sqrt(2)*atan(sqrt(x)) 0.0000
None 0.0000
None 0.0000
x/(x + 3)**2 0.4999
x**2/20 0.1937
2*x*(x + 3) 0.0062
x + cos(x - 4) 0.3332
x**2/2 + log(x)/x 0.0000
None 0.0000
3*x + cos(x) 0.1999
x*exp(3) 0.0453
x**2*tan(4)/2 0.0212
x + log(5*x) 0.0000
-2 0.0000
None 0.0000
x*sin(x + 3) 0.4723
x**2*log(2) 0.0177
x*(x*sin(5) + x) 0.2235
2*x*(x + 5) 0.0062
4*x + sin(x) 0.1668
x*(3 - x) 0.0124
<lambdifygenerated-2160>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 6
<lambdifygenerated-2163>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + arcsinh(x)
<lambdifygenerated-2168>:2: RuntimeWarning: overflow encountered in exp
  return exp(x**2)
<lambdifygenerated-2171>:2: RuntimeWarning: invalid value encountered in log
  return 25*x**2 + log(x)
<lambdifygenerated-2185>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3*x + sqrt(2)*arctan(sqrt(x))
<lambdifygenerated-2190>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + log(x)/x
<lambdifygenerated-2194>:2: RuntimeWarning: invalid value encountered in log
  return x + log(5*x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-2210>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + log(x)
<lambdifygenerated-2211>:2: RuntimeWarning: invalid value encountered in sqrt
  return sin(sqrt(x))
<lambdifygenerated-2213>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)
<lambdifygenerated-2214>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) + 3*x
<lambdifygenerated-2220>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
<lambdifygenerated-2224>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2) + (2/3)*x**3
<lambdifygenerated-2227>:2: RuntimeWarning: invalid value encountered in log
  return log(x**5 + x)
<lambdifygenerated-2234>:2: RuntimeWarning: invalid value encountered in log
  return log(x)*sin(2*x)
1/(x**2*(x + 4)) 0.5000
x**2/2 + cos(x) 0.0244
atan(x + 5) 0.4944
2*x**2 + 1/5 0.0062
2/x 0.4998
x**5*tan(2) 0.0000
2*x*exp(4*x) 0.0000
3*x*(x + cos(x)) 0.0042
2*x + log(x) 0.0000
sin(sqrt(x)) 0.0000
5*x**2 + 5*x 0.0025
log(2*x) 0.0000
x*log(x) + 3*x 0.0000
1/(4*x**3) 0.5000
x + sin(3) 0.3333
2*x*(x + 2) 0.0062
None 0.0000
x + sin(x) + 1 0.3337
x*asinh(x) 0.1625
x**2/(x + 1) 0.0000
x + sin(x) + 3 0.3336
x*(1 - x) 0.0124
3*x**2 + 3*x 0.0042
x**(3/2) + 2*x**3/3 0.0000
x*(x + 5) + x 0.0123
None 0.0000
x**2 0.0124
log(x**5 + x) 0.0000
x**2*exp(-2)/4 0.2547
cos(x) 0.4995
2*x + cosh(x) 0.0000
8*x**4/5 0.0000
-4*x + exp(-x) 0.0000
x**3*exp(2)/3 0.0001
log(x)*sin(2*x) 0.0000
x + asinh(x) 0.3258
None 0.0000
x**3*tan(4) 0.0001
-x + exp(-2*x) 0.0000
2*x*sin(2*x) 0.3745
sin(x) - 2 0.5007
x + sin(x + 5) 0.3336
7*x**2/2 + 5*x 0.0036
x/(x + 2) 0.5000
None 0.0000
x**4/2 + exp(x) 0.0000
None 0.0000
None 0.0000
9*x + 54 0.0906
2*x**5/5 + x**2/2 0.0000
exp(x + cos(x) + 3) 0.0000
2*x**2 + x 0.0062
sin(x + 4) 0.4998
2*x**2 + sin(x) 0.0062
None 0.0000
x**(3/2) 0.0000
x + sin(x) + 5 0.3335
None 0.0000
sin(x)/4 0.5001
2*x**2 + 2*x 0.0062
x*sin(x + 4) 0.4745
x*(x + cos(4)) 0.0124
x**2/2 + x*log(x) - 3*x 0.0000
2*x**2 + x 0.0062
2*x*(x + 5) 0.0062
-sin(x) 0.4992
2*x + asinh(x) 0.2457
x*exp(3*x**2) 0.0000
4*sin(x) 0.5028
-x**2 + 3*x 0.0124
exp(3*x/2) 0.0000
3*x**2 - 6*x 0.0042
None 0.0000
None 0.0000
None 0.0000
-1/x 0.5000
None 0.0000
x + asinh(3*x) 0.3241
asinh(x)**4 0.1058
3*x*(x + tan(x)) 0.0043
4*x**2 0.0031
x*sinh(x) + x 0.0000
None 0.0000
x*tan(2) + x 0.8414
2*x + exp(-x) 0.0000
x*(x + sin(x)) 0.0124
tan(3*x)/3 0.5004
x*(9*x + 1) 0.0014
x*(x + tan(4)) 0.0124
None 0.0000
9*x**2 + x 0.0014
-x 0.9677
x*(x + cos(x)) 0.0124
x**4/2 + sinh(x) 0.0000
x**2*sin(4)/2 0.0321
x*(x + 3) + x 0.0123
3*x + exp(x) 0.0000
x**2/2 + x*sin(x) + cos(x) 0.0246
None 0.0000
None 0.0000
-2*x 0.4997
2*x**3 0.0001
x + tan(2*x) 0.3330
5*x - 5*log(x) 0.0000
-x**2 + x 0.0124
x/(x + 1) 0.0000
sin(x) 0.5007
2*x*(x + 1) 0.0062
1/(x*(x + 4)) 0.5000
-log(cos(2*x)) 0.0000
x + 1 0.3333
sin(2*x)/2 0.4998
x*(x + acos(x)) 0.0000
None 0.0000
5/(2*x) 0.4998
None 0.0000
None 0.0000
8*x**5 0.0000
-x + tan(x) 0.7077
x**3*(x + 2) 0.0000
x**2*asinh(2) 0.0086
3*x + sin(x) 0.2001
x + exp(x + 4) 0.0000
x**4/2 + sin(2*x) 0.0000
exp(x + 3) 0.0000
x*(x**2 + 1/2) 0.0001
None 0.0000
8/x 0.4993
8*x**3/7 0.0001
None 0.0000
None 0.0000
x**6/6 0.0000
1 0.0000
x*(x + 5) 0.0123
2/(5*x) 0.4999
x**5/10 0.0000
x*asinh(x) 0.1625
2*x + sin(x) + cos(x) 0.2501
sqrt(x) + 1 0.0000
x*(x + asinh(x)) 0.0117
exp(3*x + 1) 0.0000
4*x + tan(x) 0.1672
x**2*sin(1)/2 0.0289
6*x**5/5 0.0000
x*(x + sin(x)) 0.0124
x**2/12 0.1287
x*(4*x + 1) 0.0031
-3*x 0.3332
x**3*cosh(x) 0.0000
x*(tanh(x) + 1) 0.3070
(2*x + 2)/x 0.4995
x**4/2 + sin(x) 0.0000
None 0.0000
3/x**2 0.4999
cos(x) + tan(x) 0.4881
-x + exp(-x) 0.0000
sin(x + 4) 0.4998
None 0.0000
x*(x + 2) + x 0.0123
tan(x) + 1/x 0.4884
0 0.0000
atan(x + 4) 0.4944
sin(x) - cos(x) 0.5011
x/(2*x**2 + x) 0.4999
-x**2/2 + sin(x) 0.0245
2*x*(x - 1) 0.0062
x**3*(x + 16) 0.0000
None 0.0000
asin(9*x/2) 0.0000
None 0.0000
None 0.0000
x*sin(x + 2) 0.4668
x*(x + 4) 0.0123
tan(3*x) 0.4996
2*x*exp(-x) 0.0000
None 0.0000
x**2 + atanh(x) 0.0000
None 0.0000
None 0.0000
sin(acosh(x)) 0.0000
x*sin(2) + 2*x 0.2037
x**2/2 + sin(x) 0.0244
log(x + 3) - atan(x)/2 0.0000
x*(x + 4) - 2*x 0.0124
x*sin(x) + 4*x 0.1603
x*sin(2*x) 0.4558
x*(2*x + sin(x)) 0.0062
sin(7*x) 0.4995
x*log(x) - x 0.0000
2*x**4 0.0000
log(x**5) 0.0000
x*(5 - x) 0.0124
4/x**3 0.4999
None 0.0000
<lambdifygenerated-2250>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2)
<lambdifygenerated-2256>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x*log(x) - 3*x
<lambdifygenerated-2261>:2: RuntimeWarning: overflow encountered in exp
  return x*exp(3*x**2)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: invalid value encountered in reduce
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
<lambdifygenerated-2289>:2: RuntimeWarning: invalid value encountered in log
  return 5*x - 5*log(x)
<lambdifygenerated-2291>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 1)
<lambdifygenerated-2295>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(2*x))
<lambdifygenerated-2298>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(x + arccos(x))
<lambdifygenerated-2318>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 1
<lambdifygenerated-2345>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin((9/2)*x)
<lambdifygenerated-2350>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x**2 + arctanh(x)
<lambdifygenerated-2350>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**2 + arctanh(x)
<lambdifygenerated-2351>:2: RuntimeWarning: invalid value encountered in arccosh
  return sin(arccosh(x))
<lambdifygenerated-2354>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 3) - 1/2*arctan(x)
<lambdifygenerated-2360>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) - x
<lambdifygenerated-2362>:2: RuntimeWarning: invalid value encountered in log
  return log(x**5)
mean: 0.13654229044914246
top: 0.9677212238311768
Saving results...
Working with expression:  -x[0]**2 - 7
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
<lambdifygenerated-2366>:2: RuntimeWarning: divide by zero encountered in divide
  return 4*x/(x + 1)
5*x + 2 0.3961
None 0.0000
4*x/(x + 1) 0.0000
x/(x + 3) 0.3970
x*tan(x + 3) 0.4027
None 0.0000
None 0.0000
4/x 0.3971
-x**2 + 4*x 0.9293
x + atanh(x + 5) 0.0000
log(tan(5)/x) 0.0000
x*(1 - x)**2 0.0076
4*x + sin(x) 0.3964
-82*log(cos(x)) 0.0000
x**4/4 + 5*x 0.0003
None 0.0000
x + 5/x 0.3970
x*(x + sin(x))*cos(x) 0.3605
x**2/2 + tan(x) 0.3052
x**2/2 0.3052
x**2 + 10/x 0.2478
2*x*(x + 2) 0.1800
None 0.0000
log(x)/5 0.0000
exp(x) 0.0000
None 0.0000
log(x**2 + 1)/2 0.3969
cos(x) + 3 0.3970
16*x**2 + sin(x) 0.0373
None 0.0000
3*x/2 0.3969
None 0.0000
3*x**2/8 0.3239
None 0.0000
x**2*(2*x**2 + x) 0.0000
None 0.0000
x**2 - 2*x + log(x + 2) 0.0000
cos(1)/x**2 0.3971
6*x 0.3959
x + cos(x) + 4 0.3968
x/(1/2 - x) 0.3971
None 0.0000
2*x*(x - 2) 0.1802
x + cos(x + 4) 0.3970
2*x + x*exp(5) 0.2340
None 0.0000
x**6 + 1 0.0000
sin(x/4) 0.3971
-x**2 0.9978
x*(x + 3) + x 0.2476
x**2/2 + 2*x 0.3050
None 0.0000
x*(2*x**2 + x)**3 0.0000
x**6/2 0.0000
2*x - cos(x) 0.3968
9*x 0.3949
6*x**3 0.0013
sin(x**2) 0.3971
x*(x + cos(3)) 0.2478
x**2/2 + x 0.3051
-cos(x) 0.3971
5*x*exp(x**2) 0.0000
x**3*exp(-1)/3 0.0585
4*log(x) 0.0000
-x*(x + 2) 0.9633
x**7/1026 0.0000
None 0.0000
x*(5 - x) 0.9132
None 0.0000
x*(x - log(x)) 0.0000
-x**3/3 + x**2 0.0225
3*x**2/4 0.2735
x + sin(x) + 3 0.3968
2*log(x) 0.0000
asinh(5)/x 0.3971
x*(2*x**2 + x + 5) 0.0038
x*cos(x + 2) 0.3965
acosh(x)/3 0.0000
x*sin(asinh(x))/3 0.3980
2*x*(2*x + 1) 0.1165
x**2/124 0.3951
x**2 + 4 0.2478
(4 - x)/x**3 0.3971
2*x + sin(x) 0.3968
log(x) + 9 0.0000
x + log(9*x**2) 0.3966
x - cos(x) 0.3970
-cos(x) 0.3971
None 0.0000
8*x**2 0.0682
x**2/25 0.3877
None 0.0000
x**2*tan(1) 0.2049
2*x**3/9 0.0333
2*sqrt(2)*sqrt(x) 0.0000
5*x**2 + 6*x 0.0989
x**2 + cos(4*x) 0.2478
x**3*cos(3)/3 0.0228
5*log(x)/3 0.0000
x*(x + 1)*tan(3*x) 0.1422
x*sin(x) + 3*x 0.3974
None 0.0000
4*x + exp(x) 0.0000
-2/x**2 0.3971
x/(x + 2) 0.3970
4*x*sin(2) 0.3965
5*x + log(x) 0.0000
x*sin(x**2)/2 0.3972
(2*x + 5)/x 0.3970
x + 8 0.3967
None 0.0000
exp(x + 2) 0.0000
(x + 4)/x 0.3970
cos(x + 2) 0.3971
x*sin(x + 4) 0.3969
3*x**4/4 - 4*x**3/3 0.0001
x**3/10 0.0705
2*x*(x + atan(x) + 2) 0.1782
sin(x + 5) 0.3971
2*x**3*sin(2)/3 0.0125
x + cos(2) 0.3970
x**2*(2*x**3 + x) 0.0000
None 0.0000
None 0.0000
9*x**(7/2) 0.0000
-x*cos(x) + cos(x) 0.3975
x**2*cos(1) 0.2996
None 0.0000
9*x**2 0.0618
None 0.0000
40/x 0.3971
x**2*cos(4) 0.6549
sinh(x)/4 0.0000
2*x + log(x + 2) + 2*log(x**2 + x) 0.0000
2*x + exp(x) 0.0000
x**4/4 + 3*x**3 0.0003
x*sin(x*cos(2*x)) 0.3961
5*x**6/6 0.0000
None 0.0000
None 0.0000
2*x*cos(1) 0.3970
x*(x + sin(x)) - x 0.2482
34*x**2 + 4*x 0.0185
atanh(x + 5) 0.0000
None 0.0000
3/(2*x**2) 0.3971
None 0.0000
9*x**2 + 6*x 0.0618
None 0.0000
x*(x + sin(x) + 2) 0.2480
x**2 + 5*x + exp(x) 0.0000
x - exp(x) 0.0000
-exp(x) + sin(x) 0.0000
3*sin(x) 0.3970
None 0.0000
3*x**2/2 + 2*x 0.2086
exp(2*x) 0.0000
-3/(4*x**4) 0.3971
x**3/3 0.0225
exp(x + 10) 0.0000
2*x*(x - 4) 0.1802
2*x + tan(x/2) 0.3968
4*x**2 0.1165
None 0.0000
x/2 0.3970
x*(x + exp(x)) + x 0.0000
None 0.0000
cos(x) - atanh(x) 0.0000
x*(1 - x) 0.9812
None 0.0000
cos(x + 2) 0.3971
None 0.0000
None 0.0000
8*x + 1 0.3952
sin(x + 1) 0.3971
4*x*sin(x) 0.4001
None 0.0000
-x**2/2 + x + 2 0.5678
None 0.0000
x + tan(x) + 3 0.3968
sinh(x + 4) 0.0000
3*x**3 + 3*x 0.0026
log(x) + 4 0.0000
None 0.0000
(x + 2)/x 0.3970
(x + 1)/x 0.3970
x**2*asinh(x) 0.1114
4*x + acosh(x) 0.0000
x/(x + 4) 0.3970
2*x/3 0.3970
None 0.0000
None 0.0000
x**2*sin(4) 0.7296
x*sinh(2*x) + x 0.0000
6*x**3 0.0013
None 0.0000
None 0.0000
x**2/2 - sin(x) 0.3052
4/x**2 0.3971
x*cos(1) + x 0.3969
x**3*log(x)/3 + x**2/8 0.0000
x*tan(x + 2) 0.3985
None 0.0000
x**2*(3*x + 1) 0.0026
sin(x + 4) 0.3971
acos(x + 2) 0.0000
None 0.0000
2*x**2 - 2*x 0.1801
x**2 - 2*sin(x) + cos(x) 0.2478
6*x**2 0.0861
x**2/2 + x 0.3051
log(x**(-2)) 0.3974
2*x*cos(x)/5 + 2*sin(x)/5 0.3969
2/(5*x**2) 0.3971
x*(x + sin(x) + 2) 0.2480
None 0.0000
cosh(1)/x 0.3971
2*x**3/3 + x**2/2 + x*log(x) 0.0000
None 0.0000
2*x*log(x) 0.0000
x*exp(x) + 2*x 0.0000
x - exp(x) 0.0000
x**3*cosh(3)/3 0.0023
x**4/5 0.0004
x**3 + 10 0.0076
x**12/16 0.0000
-2*x**3/3 0.0114
x*tan(x + 2) 0.3985
sin(x - 5) 0.3971
x*(x + 1/x) 0.2478
None 0.0000
None 0.0000
-1/x 0.3971
3*cos(x)/x 0.3971
x**2 + sinh(x) 0.0000
224/x 0.3971
4/x**2 0.3971
sin(x + 2) 0.3971
x + 3*cos(x) 0.3970
x + sin(2*x) 0.3970
None 0.0000
x**2 - 2*x 0.2479
x**2 + x + 2 0.2478
-1/x 0.3971
x**2 + x + 3 0.2477
x*(x + 1) + x 0.2477
2*x**(3/2)/3 0.0000
None 0.0000
None 0.0000
(x + 4)/x 0.3970
None 0.0000
None 0.0000
9*x**2 + exp(x) 0.0000
None 0.0000
7*x**2/2 0.1278
None 0.0000
<lambdifygenerated-2371>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x + arctanh(x + 5)
<lambdifygenerated-2371>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(x + 5)
<lambdifygenerated-2372>:2: RuntimeWarning: invalid value encountered in log
  return log(tan(5)/x)
<lambdifygenerated-2375>:2: RuntimeWarning: invalid value encountered in log
  return -82*log(cos(x))
<lambdifygenerated-2383>:2: RuntimeWarning: invalid value encountered in log
  return (1/5)*log(x)
<lambdifygenerated-2391>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - 2*x + log(x + 2)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-2413>:2: RuntimeWarning: overflow encountered in exp
  return 5*x*exp(x**2)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: invalid value encountered in reduce
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
<lambdifygenerated-2415>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-2419>:2: RuntimeWarning: invalid value encountered in log
  return x*(x - log(x))
<lambdifygenerated-2423>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(x)
<lambdifygenerated-2427>:2: RuntimeWarning: invalid value encountered in arccosh
  return (1/3)*arccosh(x)
<lambdifygenerated-2434>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 9
<lambdifygenerated-2442>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(2)*sqrt(x)
<lambdifygenerated-2446>:2: RuntimeWarning: invalid value encountered in log
  return (5/3)*log(x)
<lambdifygenerated-2453>:2: RuntimeWarning: invalid value encountered in log
  return 5*x + log(x)
<lambdifygenerated-2468>:2: RuntimeWarning: invalid value encountered in power
  return 9*x**(7/2)
<lambdifygenerated-2475>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + log(x + 2) + 2*log(x**2 + x)
<lambdifygenerated-2475>:2: RuntimeWarning: divide by zero encountered in log
  return 2*x + log(x + 2) + 2*log(x**2 + x)
<lambdifygenerated-2483>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-2483>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-2501>:2: RuntimeWarning: divide by zero encountered in arctanh
  return cos(x) - arctanh(x)
<lambdifygenerated-2501>:2: RuntimeWarning: invalid value encountered in arctanh
  return cos(x) - arctanh(x)
<lambdifygenerated-2511>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 4
<lambdifygenerated-2515>:2: RuntimeWarning: invalid value encountered in arccosh
  return 4*x + arccosh(x)
<lambdifygenerated-2524>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3*log(x) + (1/8)*x**2
<lambdifygenerated-2528>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(x + 2)
<lambdifygenerated-2538>:2: RuntimeWarning: invalid value encountered in log
  return (2/3)*x**3 + (1/2)*x**2 + x*log(x)
<lambdifygenerated-2539>:2: RuntimeWarning: invalid value encountered in log
  return 2*x*log(x)
<lambdifygenerated-2563>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2)
mean: 0.18566283583641052
top: 0.9977847933769226
Saving results...
Working with expression:  x[0]**3 - 4 * x[0]**2 + 2 * x[0] - 5
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x**3/3 + tan(5*x) 0.5998
x**2*(x + 1) 0.9449
x**2 + 4*x 0.5001
None 0.0000
x**3*log(3) + x**2/2 0.8981
5*x + 5/6 0.5001
x*(x + exp(x)) + x 0.0000
cos(4*x - cos(x + 4)) 0.5000
x**2/3 0.5000
4*x + tan(8*x) 0.5001
x*(x + 10) 0.5003
x**3/3 + 16*x 0.6006
None 0.0000
tan(3*x) 0.5000
x**2 + 2*x 0.5000
x**2*tan(5)/2 0.4999
exp(x + 4) 0.0000
-log(tanh(x) + 1) 0.0000
(4 - 4*x)*exp(x) 0.0000
8/x**2 0.5000
x*sin(x)**3 0.5000
None 0.0000
x**2/12 0.5000
None 0.0000
None 0.0000
None 0.0000
x*cos(x + 2) 0.5000
2*x*exp(-x) 0.0000
x + tan(2*x) 0.5000
None 0.0000
atanh(x)**2 0.0000
x*acosh(4) 0.5000
1/(3*x**2) 0.5000
2*x - 1/x 0.5000
log(5)/x 0.5000
1/(2*x + 5) 0.5000
None 0.0000
None 0.0000
None 0.0000
-1/(8*x**4) 0.5000
None 0.0000
8*x + sin(x) 0.5002
None 0.0000
x + cos(x)**3 0.5000
x**2*cosh(x) 0.0000
x + 5 0.5000
82*x**2 0.4190
x**2 - 2/5 0.4999
None 0.0000
2*x + 2*log(x) 0.0000
None 0.0000
2*x + 2/x 0.5000
2*x**15/15 + 8*x**3/3 + sin(x) 0.0000
None 0.0000
None 0.0000
6*x**(3/2) 0.0000
x**2*sinh(1) 0.4999
1/(x/2 + 2) 0.5000
2*cos(2)/x 0.5000
x**2/2 + sin(x) 0.5000
x*(x + 1)*cos(x) 0.5004
cosh(3) 0.0000
x**2/2 + x*cos(2) 0.4999
2*x**3 + x 0.4991
2*x + cosh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2/2 + sinh(x) 0.0000
2*x**3 + 2*x 0.4991
x + sin(x) + 4 0.5000
x**3*log(7) 0.5130
cos(x + 5) 0.5000
x + 1/(x + 3) 0.5000
cos(3*x)/3 0.5000
None 0.0000
3*x**2/2 + x*atanh(x) 0.0000
x**2*exp(-1)/2 0.5000
None 0.0000
x*(x + cos(2)) 0.4999
10*x**2 + 2*x 0.4982
127*x**2 0.3584
x**2/2 - log(cos(x)) 0.0000
x - 5 + 1/x 0.5000
acos(x)/4 0.0000
x - sinh(x) 0.0000
None 0.0000
2*x + log(2*x) 0.0000
x*(x + 3/x) 0.4999
2*sqrt(2)*x**2 0.4998
x**2/20 0.5000
tan(3*x) 0.5000
None 0.0000
x*(x + exp(-x)) 0.0000
None 0.0000
x + exp(2*x) 0.0000
6*x**2 + x 0.4993
x**2 + x*sin(2) + 12*x 0.5004
x + 4/x**2 0.5000
x**2 - x 0.4999
5*log(x)**3 0.0000
x*(x + 1) + x 0.5000
3*x*(x + 5) 0.5003
None 0.0000
None 0.0000
(x + 4)**5 0.0020
x*exp(2*x)/2 0.0000
2*x + 6 0.5000
None 0.0000
None 0.0000
x**2 + sin(x) 0.4999
x**4/4 0.0430
x*tan(x + 4) + x 0.5000
x + tan(5) + 2 0.5000
x + 6 0.5000
-x*tanh(x) 0.5000
x*cos(3) + 12*x 0.5003
x**2/2 + cos(1)/3 0.5000
3*x*(x + 4) 0.5002
None 0.0000
2*x + 1 0.5000
-2*x + x*cos(1) 0.4999
None 0.0000
9*x**2 + x 0.4985
5*x**3 + x 0.1998
3*x*log(2) 0.5000
3/x 0.5000
x*exp(x + 4) 0.0000
x + 3/x 0.5000
2*x**2 + cos(x) 0.4999
4*x**2 + exp(x) 0.0000
-4*x + cos(x) 0.4998
-x + cos(x) 0.4999
5*x**2/2 + x 0.4999
sin(3*x)/3 0.5000
sin(x) + cos(x) 0.5000
None 0.0000
(x + asinh(x))**4 0.0089
-x + exp(x) + 5 0.0000
None 0.0000
None 0.0000
(x + exp(x))**3 0.0000
-2*x**2 0.4999
sqrt(2)*x**3/6 0.5667
None 0.0000
None 0.0000
-3*x**4/4 0.0148
sin(x)**5 0.5000
None 0.0000
None 0.0000
x/2 0.5000
5/x**3 0.5000
5*x + sin(x) 0.5001
x*sin(x + 2) 0.5000
x*(1 - x)*exp(x) 0.0000
2*x - cos(x) 0.5000
3 0.0000
cos(x) + tan(x) 0.5000
-3 + 1/x 0.5000
x*sin(1) + 2*x 0.5001
1/(2*x + 2) 0.0000
None 0.0000
x + cos(4) 0.5000
2*x + tan(x**2) 0.5000
3*sqrt(x) 0.0000
3/x 0.5000
None 0.0000
None 0.0000
x*(-x**2 + x + 4) 0.3334
4*x*sin(2*x) 0.5000
None 0.0000
x + log(5) 0.5000
x**2*(x + 6) 0.8956
x*sin(x) + 4*x 0.5001
x + tan(x/2) 0.5000
2*x*cosh(x) 0.0000
-2*sqrt(x) + x**2 0.0000
x**2*(x**3 + 2*x) 0.0023
4*x + exp(x) 0.0000
4*x*(x + 2) 0.4999
-cos(x) 0.5000
sin(4*x) 0.5000
x + cos(x) + 2 0.5000
None 0.0000
(x + 4)/x 0.5000
cos(x + 2) 0.5000
5*x*sin(1) 0.5001
2*x*sin(2) 0.5000
2*x**2 - x + 2*log(tan(x) + 1) 0.0000
(x + x**(-4))/x**2 0.5000
3*x*cos(x) 0.5000
x**2 + 2*x 0.5000
-x**2 0.5000
None 0.0000
4*x**2 + 2*x 0.4997
(2*x - 1)*exp(2*x)/4 0.0000
None 0.0000
x**2/(x + 4) 0.5000
2*x*(x + 3) 0.5001
x*(x + 1) 0.5000
x**3*(x + 3/2) 0.0111
1/(x*log(x**2)) 0.0000
x*exp(x*log(2)) 0.0000
2*x**2 + 2*x 0.4999
5*x**2/4 0.4999
log(cos(2*x) + 1)/4 0.5000
None 0.0000
x**4/32 + exp(-x) 0.0000
None 0.0000
3*x*tan(x) 0.5001
None 0.0000
2*x*(x + 1) 0.4999
x*sin(x + 2) 0.5000
(x + 1)/x**3 0.5000
-4*x**3/9 + 2*x 0.4091
4/x 0.5000
2*x + cosh(x) 0.0000
-1/(5*x**2) 0.5000
-x**2 + x 0.5000
None 0.0000
None 0.0000
x*log(x) 0.0000
3*x 0.5001
None 0.0000
2/(5*x) 0.5000
2*x**2 + 2*x 0.4999
x/(x + tan(5)) 0.5000
(x + 2)/x 0.5000
4*x*cos(x) 0.5000
x*(x + exp(x)) 0.0000
2*x + 1 0.5000
x*log(5/x) 0.0000
x*(x + cos(x) + 2) 0.5000
x - 1/x 0.5000
-2*x**2 + 2*x 0.5000
None 0.0000
x/(x + 5)**(1/3) 0.0000
5*x 0.5001
acosh(x - 4) 0.0000
-2*sqrt(x)/9 + 2*x**3*asinh(x)/3 + x 0.0000
x**2 + 4*x 0.5001
(x - 1)/x**3 0.5000
None 0.0000
None 0.0000
4*x**5/5 0.0002
None 0.0000
x*cos(2) + 3*x 0.5001
None 0.0000
x**2 + 2*x + log(x) 0.0000
log(3*x**2) 0.5000
x/(x**2 + x + 3) 0.5000
-x + 2*atan(x) 0.4999
sin(x + 3) 0.5000
sinh(x)**3 0.0000
48*x 0.5016
1/(x + log(x)**2) 0.0000
<lambdifygenerated-2582>:2: RuntimeWarning: divide by zero encountered in log
  return -log(tanh(x) + 1)
<lambdifygenerated-2590>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-2590>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x)**2
<lambdifygenerated-2603>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 2*log(x)
<lambdifygenerated-2606>:2: RuntimeWarning: invalid value encountered in power
  return 6*x**(3/2)
<lambdifygenerated-2623>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (3/2)*x**2 + x*arctanh(x)
<lambdifygenerated-2623>:2: RuntimeWarning: invalid value encountered in arctanh
  return (3/2)*x**2 + x*arctanh(x)
<lambdifygenerated-2628>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 - log(cos(x))
<lambdifygenerated-2630>:2: RuntimeWarning: invalid value encountered in arccos
  return (1/4)*arccos(x)
<lambdifygenerated-2632>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + log(2*x)
<lambdifygenerated-2643>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)**3
<lambdifygenerated-2690>:2: RuntimeWarning: divide by zero encountered in power
  return (2*x + 2)**(-1.0)
<lambdifygenerated-2693>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3*sqrt(x)
<lambdifygenerated-2702>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*sqrt(x) + x**2
<lambdifygenerated-2713>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2 - x + 2*log(tan(x) + 1)
<lambdifygenerated-2724>:2: RuntimeWarning: divide by zero encountered in divide
  return 1/(x*log(x**2))
<lambdifygenerated-2739>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x)
<lambdifygenerated-2748>:2: RuntimeWarning: invalid value encountered in log
  return x*log(5/x)
<lambdifygenerated-2752>:2: RuntimeWarning: invalid value encountered in power
  return x/(x + 5)**(1/3)
<lambdifygenerated-2754>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x - 4)
<lambdifygenerated-2755>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2/9*sqrt(x) + (2/3)*x**3*arcsinh(x) + x
<lambdifygenerated-2760>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + 2*x + log(x)
<lambdifygenerated-2767>:2: RuntimeWarning: invalid value encountered in log
  return (x + log(x)**2)**(-1.0)
mean: 0.2883443236351013
top: 0.9449408650398254
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
sin(x) - 1 0.5000
None 0.0000
2*x**2*cos(1) 0.4999
x + x*exp(2) 0.5003
None 0.0000
sin(x + 4) 0.5000
x + tan(3) 0.5000
None 0.0000
(x + 3)/x 0.5000
x**2/(x + 2) 0.5000
2*exp(2*x) 0.0000
4 0.0000
2*x + 3 0.5000
sin(x + 2) 0.5000
1/tan(x) 0.5000
x**2*exp(x) - x 0.0000
2*x + tan(2*x) 0.5000
None 0.0000
None 0.0000
x + tan(5) 0.5000
None 0.0000
None 0.0000
9/x**2 0.5000
16*x**6 0.0000
x*cos(x + 4) 0.5000
x**3*tan(3)/3 0.4884
cos(x + 4) 0.5000
9*x**2/10 0.4999
x*cos(2) + x 0.5000
3*x + 5 0.5001
None 0.0000
x**2/2 + x*log(x**3) - 6*x 0.0000
x**2 0.4999
None 0.0000
x**15 + x 0.0007
x*(1 - x) 0.5000
x - log(tanh(x) + 1) 0.0000
x + tan(x + 3) 0.5000
4*x*tan(2) 0.4997
None 0.0000
x**4 + x + log(x) 0.0000
2*x**(9/2)/9 + x**2/2 0.0000
x**3*(x**2 + x) 0.0000
tan(x) + atanh(x) 0.0000
None 0.0000
sqrt(1 - x**2) 0.0000
x*(x + 3) + x 0.5001
2*x + atanh(2*x) 0.0000
x**2/2 + exp(5*x)/5 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x/4 0.5000
2*x**2 + x 0.4999
2*x**2 + x 0.4999
None 0.0000
x + (x - 2)*exp(x) 0.0000
x + 9 0.5000
-6*x**2 + cos(x) 0.4994
2*x + asinh(2*x) 0.5000
-x**2 + sqrt(2) 0.5000
-x*asin(x) + Abs(x) 0.0000
(1 - x)/x**2 0.5000
8*x + sin(x) 0.5002
2*x + tan(2) 0.5000
tan(x - 8) 0.5000
None 0.0000
None 0.0000
zoo 0.0000
cos(x) + tan(x) 0.5000
x**2*(1 - x) 0.3333
sqrt(x) + 1 0.0000
x*(x*cosh(x) + x) 0.0000
x**2/2 + x*sin(5) 0.4999
x - acosh(x) 0.0000
x**2 + x*exp(5) 0.5050
None 0.0000
None 0.0000
sqrt(2)/2 0.0000
None 0.0000
x*log(2*x**2) + 2*x 0.5004
x + exp(5*x**2) 0.0000
-x**2/2 + x 0.5000
x + cos(6) 0.5000
None 0.0000
None 0.0000
None 0.0000
x + log(3*x) 0.0000
None 0.0000
2*x**3 + 2*x 0.4991
tan(2*x) + 5 0.5000
cosh(2*x + 2)/2 0.0000
None 0.0000
None 0.0000
x*(x*cos(x) + cos(x)) 0.5004
None 0.0000
2*x**2 + x 0.4999
4*x**6 + x**2 0.0000
9*x**2 + 6*x 0.4987
None 0.0000
3/(5*x**2) 0.5000
2*x + sin(x) 0.5000
None 0.0000
x**3/3 + exp(3*x) 0.0000
x + 8 0.5000
5 - x 0.4999
x**2 0.4999
exp(-2*x) 0.0000
x - log(cos(x)) 0.0000
tanh(4*x) 0.5000
2*x**3*cos(x) 0.3945
-sqrt(3)*acos(-3*x)/3 0.0000
(x + 2)/x 0.5000
x - tan(x) 0.5000
4*log(x) 0.0000
None 0.0000
x**2 + 10/3 0.4999
None 0.0000
3*x**2/2 + 5*x 0.5001
-2*x**2 + 12*x 0.5003
None 0.0000
x**2 + 5*x 0.5001
None 0.0000
x**2 - log(tan(x) + 1) 0.0000
x**2*cos(2) 0.5000
x**2*atan(5) 0.4999
-x/10 0.5000
None 0.0000
106*x**4 0.0007
None 0.0000
exp(acos(x + 3)) 0.0000
x + log(tan(x)**2 + 1)/2 0.5000
x**2*(2*x + sin(x)) 0.5000
9*x**2/2 0.4996
x + tan(x) + 3 0.5000
3*x + sin(x) 0.5001
6*x**(1/5) 0.0000
x 0.5000
x + 4 0.5000
x**2*sin(1)/3 0.5000
sin(x) + cos(x) 0.5000
None 0.0000
cos(3*x)/3 0.5000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x + tan(x + 1) 0.5000
5*sin(x) 0.5000
None 0.0000
-x**3/3 + 2*x 0.4286
tanh(x + 2) 0.5000
-2*x + x*log(3) 0.4999
2*sqrt(2)*sqrt(x) 0.0000
x**2 + tan(1) 0.4999
2*x + 2/x 0.5000
2*x*(x + 2) 0.5000
x**2/2 + tan(x) 0.5000
x + sin(x) 0.5000
None 0.0000
cos(x) 0.5000
x + 6*log(x) 0.0000
x**2*exp(-2*x) 0.0000
5*x**3/3 + 3*x**2 0.5969
5*x + 2 0.5001
None 0.0000
x**2/2 + x*tan(1) 0.5000
x**2 + 4*x + sin(x) 0.5001
None 0.0000
x + cos(log(x)) 0.0000
2*x**2 + 1 0.4999
(x + 5)/x 0.5000
9*x**2 + x 0.4985
8*x**4 0.0014
-x**2/2 + x 0.5000
x*cos(x + 3) 0.5000
None 0.0000
2*x**3/7 0.5832
None 0.0000
x + tan(x) + 2 0.5000
None 0.0000
None 0.0000
None 0.0000
x + cos(x + cosh(x)) 0.5000
x + exp(x) + 2 0.0000
None 0.0000
8*x**3 0.1249
6/x**2 0.5000
2*x + sqrt(2) 0.5000
None 0.0000
x**2*sinh(1)/2 0.5000
x*(x + cos(x**2)) 0.4999
x**2 + 5*x 0.5001
x**2 + x - 5 0.5000
x**3 + 2*x**2 0.9346
exp(x) + 1 0.0000
x*exp(8*x**(3/2)) 0.0000
x**3*acos(2) 0.0000
x*exp(x) + 2*x 0.0000
2*x*(1 - x) 0.5000
x*(x + 2) 0.5000
x + cos(x + 3) 0.5000
x + cos(2) 0.5000
None 0.0000
x**3/3 + 4*x 0.6000
None 0.0000
2*(x + 1)/x 0.5000
3/(8*x) 0.5000
x**4 - x 0.0111
None 0.0000
1/(1000*x**4) 0.5000
x + sqrt(3) 0.5000
x*(x + cos(x)) 0.4999
None 0.0000
None 0.0000
None 0.0000
x**2 + cos(2*x) 0.4999
x**2/2 + 1/(4*x) 0.5000
None 0.0000
x**3/3 + 2*x**2 0.5995
x*cosh(3*x) + x 0.0000
x*(x + 4) + 2*x 0.5001
x**2 + 2*x + 8 0.5000
atan(x + 1) 0.5000
3*x + sin(x) + cos(x) 0.5001
4*x + 4 0.5001
x*sin(2*x) + 2*x 0.5000
1/(2*x + 5) 0.5000
None 0.0000
-2*x**3/3 0.3750
2*x + x*exp(4) 0.5019
x**2*sin(3)/2 0.5000
None 0.0000
None 0.0000
x**2 - log(cos(x)) 0.0000
x**2/22 0.5000
None 0.0000
80000*x**2 0.0011
x**4*cos(4) 0.0169
cos(3*x)/3 0.5000
9*x**2 0.4985
None 0.0000
x + cos(x)/2 0.5000
-x + sin(x) 0.4999
x*tan(3) + x 0.5000
2*x*exp(5) 0.5102
x*atan(x) + x 0.5000
x**2*cos(1)/4 0.5000
None 0.0000
None 0.0000
sqrt(2)*x**2/2 0.4999
4*x*exp(x) + x 0.0000
None 0.0000
9*x**2 0.4985
x + 1/(2*x) 0.5000
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-2791>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x*log(x**3) - 6*x
<lambdifygenerated-2795>:2: RuntimeWarning: divide by zero encountered in log
  return x - log(tanh(x) + 1)
<lambdifygenerated-2798>:2: RuntimeWarning: invalid value encountered in log
  return x**4 + x + log(x)
<lambdifygenerated-2799>:2: RuntimeWarning: invalid value encountered in power
  return (2/9)*x**(9/2) + (1/2)*x**2
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-2801>:2: RuntimeWarning: divide by zero encountered in arctanh
  return tan(x) + arctanh(x)
<lambdifygenerated-2801>:2: RuntimeWarning: invalid value encountered in arctanh
  return tan(x) + arctanh(x)
<lambdifygenerated-2802>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(1 - x**2)
<lambdifygenerated-2804>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x + arctanh(2*x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-2814>:2: RuntimeWarning: invalid value encountered in arcsin
  return -x*arcsin(x) + abs(x)
<lambdifygenerated-2821>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 1
<lambdifygenerated-2824>:2: RuntimeWarning: invalid value encountered in arccosh
  return x - arccosh(x)
<lambdifygenerated-2828>:2: RuntimeWarning: overflow encountered in exp
  return x + exp(5*x**2)
<lambdifygenerated-2831>:2: RuntimeWarning: invalid value encountered in log
  return x + log(3*x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-2846>:2: RuntimeWarning: invalid value encountered in log
  return x - log(cos(x))
<lambdifygenerated-2849>:2: RuntimeWarning: invalid value encountered in arccos
  return -1/3*sqrt(3)*arccos(-3*x)
<lambdifygenerated-2852>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-2857>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - log(tan(x) + 1)
<lambdifygenerated-2862>:2: RuntimeWarning: invalid value encountered in arccos
  return exp(arccos(x + 3))
<lambdifygenerated-2868>:2: RuntimeWarning: invalid value encountered in power
  return 6*x**(1/5)
<lambdifygenerated-2879>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(2)*sqrt(x)
<lambdifygenerated-2886>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-2892>:2: RuntimeWarning: invalid value encountered in log
  return x + cos(log(x))
<lambdifygenerated-2912>:2: RuntimeWarning: invalid value encountered in power
  return x*exp(8*x**(3/2))
<lambdifygenerated-2912>:2: RuntimeWarning: overflow encountered in exp
  return x*exp(8*x**(3/2))
<lambdifygenerated-2913>:2: RuntimeWarning: invalid value encountered in arccos
  return x**3*arccos(2)
<lambdifygenerated-2940>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - log(cos(x))
mean: 0.27148348093032837
top: 0.9346491694450378
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x**2*cos(5) 0.5000
x*(-2*x**2 + x) 0.2500
x/(x + 4) 0.5000
2*x*acosh(2) 0.5001
2*x + 1/(1 - 2*x) 0.5000
4*x + 4*log(x) 0.0000
6*x**2 + x 0.4993
x**4*tan(1)/4 0.0281
2*x*asinh(x) 0.5000
None 0.0000
None 0.0000
x*atan(x) 0.5000
None 0.0000
x**3/10 0.5263
8/x**2 0.5000
2*x*(x + 4) 0.5001
None 0.0000
None 0.0000
x*(2*x + 2) 0.4999
x*atan(2) 0.5000
x**2 + sin(x) 0.4999
5*x + 5 0.5001
x*log(x) - 2*x 0.0000
2 - x 0.4999
sqrt(2)*x**4/2 0.0157
None 0.0000
x + atan(x**2) 0.5000
(x + 4)/x 0.5000
atanh(x**2) 0.0000
x*sqrt(x + 2) 0.0000
x**2 + 2*x 0.5000
2*x*cos(3) 0.4999
sin(6*x) 0.5000
None 0.0000
x**2*(x + 3) 0.9246
x + (x + 4)*exp(x) 0.0000
x**2*(2*x + 2) 0.4985
(x + 1)**2 0.5000
2*x*(x + 2) 0.5000
None 0.0000
x**2*cosh(5)/2 0.4781
x**2*(x + 3) 0.9246
-x + acos(x) 0.0000
None 0.0000
3*x**2 0.4998
x*(5 - x) 0.5001
-15*x + 5*log(x) 0.0000
1/(4*x) 0.5000
x - cos(x) 0.5000
8*x**3 0.1249
-x**2 + x 0.5000
x + cos(x) + 1 0.5000
x**2/4 + x*sin(x) + cos(x) 0.5000
x + tan(x) + 2 0.5000
x**3 - 2*x**2 + x 0.9772
3*x**2 0.4998
None 0.0000
8*x**2/5 0.4999
4 0.0000
2*x*atan(x) 0.5000
x*(x + sin(x)) 0.4999
-2*cos(x) 0.5000
x**2*cos(2) 0.5000
x - 4*log(x) 0.0000
x**2/2 + sin(x) 0.5000
2*x**2 - 2*x 0.4998
(x + 4)/x 0.5000
sin(2*x) 0.5000
2*x**2 - x 0.4998
x*sin(2*x) + 2*x 0.5000
3*x*(x + exp(x)) 0.0000
x - tan(x) 0.5000
sqrt(x) + 1 0.0000
sin(x/2) 0.5000
None 0.0000
x/2 + asinh(x)**3/3 0.5000
log(x) 0.0000
4*sqrt(x) + x 0.0000
x**2/(x + 8) 0.0000
None 0.0000
x + sin(x) + cos(x) 0.5000
x*atan(4*x) 0.5000
None 0.0000
None 0.0000
cos(3*x) 0.5000
2*x**(3/2) 0.0000
None 0.0000
x**3 + sin(x) 0.9555
None 0.0000
None 0.0000
None 0.0000
log(x)/x 0.0000
x*(x + 5) 0.5001
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x + 4) 0.5000
None 0.0000
None 0.0000
(x + 3)/x 0.5000
(x - 7)/x 0.5000
6*x 0.5002
2*x**3/3 0.7490
x - cos(x) 0.5000
x*atan(x + 3) 0.5000
x + (x + 1)**2 0.5000
x*(x**2 + x) + x 0.9449
(x + asinh(x))**2 0.4999
x*(x + 5) 0.5001
x*tan(x**2)/2 0.5000
x*(x + 3) + 2*x 0.5001
exp(x) + cos(x) 0.0000
x**2 - 6*x 0.4997
1/10 0.0000
x*sin(x + 3) 0.5000
x**2 - cosh(x) 0.0000
None 0.0000
x - 1/x 0.5000
sin(x)**4 0.5000
3*cosh(x)/x 0.0000
2*x + cos(x) 0.5000
1 - exp(acosh(x)) 0.0000
x*atanh(5) 0.0000
x**3*(tan(2) + 1) 0.3139
x*(x + 3) + 2*x 0.5001
sqrt(x) + cos(1) 0.0000
x**3/3 + x**2 0.5997
x**2/2 + (x - 1)*exp(x) 0.0000
2*x**3/3 + 2*x 0.7491
x**2*cosh(2) 0.4997
x + 8 0.5000
x**2/2 + x*sin(1) 0.5000
sqrt(2)/x**2 0.5000
None 0.0000
log(2*x) 0.0000
None 0.0000
exp(x) 0.0000
(x + sin(x))**2 0.5000
1/(8*x) 0.5000
2*x - cos(x) 0.5000
2*x + 3 0.5000
x**2*exp(-4) 0.5000
None 0.0000
exp(x + 5) 0.0000
3*x**2/2 + 3*x 0.5000
x**2/2 + x*cos(5) 0.5000
-2*cos(x) 0.5000
1/(5*x) 0.5000
x*sqrt(1 - x**2) 0.0000
2*x**3/7 0.5832
x + tan(x**2) 0.5000
2*x**2/5 + x 0.5000
None 0.0000
(x + 4)/x**3 0.5000
8*x**3 0.1249
None 0.0000
(x + 1)/x 0.5000
None 0.0000
x**6/6 + 4 0.0000
-x**2 + x 0.5000
-1/x 0.5000
2*x**2 + x + 2 0.4999
log(2*x**2) 0.5000
2*x + x*exp(3) 0.5007
None 0.0000
x**2*(x + 1)**2 0.0111
1/tanh(x) 0.5000
x + tan(x + 5) 0.5000
x**2/(2*cos(1)) 0.4999
tan(x + 4) 0.5000
x**3 + 2*x**2 0.9346
x*(2*x + log(x)) 0.0000
sqrt(2)*x**2/4 0.5000
None 0.0000
x*(2*x + 1) 0.4999
x*(x + 4) 0.5001
None 0.0000
None 0.0000
2*x - cos(x) 0.5000
-log(cos(2*x))/2 0.0000
x**3/3 - x**2/2 + x 0.5999
x**2*tan(4)/2 0.5000
2*x**2 + sinh(x) 0.0000
-x**2 + cos(x) 0.5000
2*x**3*asinh(x) 0.0878
log(x)/x**2 0.0000
x**3/3 - 4*x 0.5996
x**2/(2*x + 1) 0.5000
None 0.0000
None 0.0000
2*x**2 0.4999
None 0.0000
2*x + log(x**3) 0.0000
None 0.0000
x**2 + 2*x 0.5000
3*x**3 + 3*x**2 0.3326
x**2 + 2*x 0.5000
(x + 2)/x 0.5000
None 0.0000
None 0.0000
4/x 0.5000
2*x**2 + 5 0.4999
x + x/(x + 1) 0.0000
2*x + sin(x) 0.5000
x**2*sin(3)/2 0.5000
x**3/4 + x 0.5714
None 0.0000
None 0.0000
x**2*log(2)/22 0.5000
(x + 5)/x 0.5000
x**4*(x + 5) 0.0000
x**2 + x + sin(x) 0.5000
tan(x + 4) 0.5000
tan(x + 1) 0.5000
x*(x**2 + 5) 0.9554
None 0.0000
sinh(5*x) 0.0000
2*x**2 + 1 0.4999
x*(x + 2) 0.5000
-x - cos(x) 0.4999
x**2 + x + 1 0.5000
x*sin(x + 2) 0.5000
2*(3*x - 3)*cos(x)/5 0.5000
2*x**2 - 4*x 0.4997
2*x - log(cos(x)) 0.0000
sqrt(x)*asinh(x) + x**2/2 + tan(x) 0.0000
x + 2 0.5000
tan(x/2) + exp(-x) 0.0000
2*x + tan(2*x) 0.5000
3*x*(x + exp(x)) 0.0000
x*(2 - x) 0.5000
x**2*sin(3)/2 0.5000
x**4 + sin(x) 0.0111
x**2*(x + 3) 0.9246
x**2/(sin(x) + 1) 0.1888
2*x - 2*cos(x) 0.5000
-1/(2*x**2) 0.5000
x/2 0.5000
exp(2*x) 0.0000
(x + 2)/x 0.5000
sin(2*x) 0.5000
None 0.0000
x**2 + x*tan(1) 0.5000
tan(x + 5) 0.5000
x*log(5) 0.5000
x**2*atanh(x) + exp(x) - atanh(x) 0.0000
5*pi 0.0000
x*(x + 2) + x 0.5000
x**2*(x + 3) 0.9246
2*x + exp(x) 0.0000
None 0.0000
x*(x + cos(x)) 0.4999
(x + 4)/x 0.5000
x*(x + 3) 0.5000
sqrt(2)/x 0.5000
<lambdifygenerated-2961>:2: RuntimeWarning: invalid value encountered in log
  return 4*x + 4*log(x)
<lambdifygenerated-2973>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) - 2*x
<lambdifygenerated-2978>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x**2)
<lambdifygenerated-2978>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x**2)
<lambdifygenerated-2979>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*sqrt(x + 2)
<lambdifygenerated-2990>:2: RuntimeWarning: invalid value encountered in arccos
  return -x + arccos(x)
<lambdifygenerated-2993>:2: RuntimeWarning: invalid value encountered in log
  return -15*x + 5*log(x)
<lambdifygenerated-3009>:2: RuntimeWarning: invalid value encountered in log
  return x - 4*log(x)
<lambdifygenerated-3018>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 1
<lambdifygenerated-3021>:2: RuntimeWarning: invalid value encountered in log
  return log(x)
<lambdifygenerated-3022>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4*sqrt(x) + x
<lambdifygenerated-3023>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 8)
<lambdifygenerated-3027>:2: RuntimeWarning: invalid value encountered in power
  return 2*x**(3/2)
<lambdifygenerated-3029>:2: RuntimeWarning: invalid value encountered in log
  return log(x)/x
<lambdifygenerated-3053>:2: RuntimeWarning: invalid value encountered in arccosh
  return 1 - exp(arccosh(x))
<lambdifygenerated-3054>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(5)
<lambdifygenerated-3057>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + cos(1)
<lambdifygenerated-3065>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)
<lambdifygenerated-3077>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*sqrt(1 - x**2)
<lambdifygenerated-3096>:2: RuntimeWarning: invalid value encountered in log
  return x*(2*x + log(x))
<lambdifygenerated-3101>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*log(cos(2*x))
<lambdifygenerated-3107>:2: RuntimeWarning: invalid value encountered in log
  return log(x)/x**2
<lambdifygenerated-3111>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + log(x**3)
<lambdifygenerated-3118>:2: RuntimeWarning: divide by zero encountered in divide
  return x + x/(x + 1)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-3137>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - log(cos(x))
<lambdifygenerated-3138>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x)*arcsinh(x) + (1/2)*x**2 + tan(x)
<lambdifygenerated-3157>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x**2*arctanh(x) + exp(x) - arctanh(x)
<lambdifygenerated-3157>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**2*arctanh(x) + exp(x) - arctanh(x)
<lambdifygenerated-3157>:2: RuntimeWarning: invalid value encountered in subtract
  return x**2*arctanh(x) + exp(x) - arctanh(x)
mean: 0.3258059024810791
top: 0.97721928358078
Saving results...
Working with expression:  math.sin(x[0]) + math.cos(x[0])
Error in expression:  math.sin(x[0]) + math.cos(x[0])
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
-atan(5*x) 0.5000
8*x**2 0.4988
4/x 0.5000
x*(x + 4)*sin(x) 0.4991
x**3/3 + 6*x 0.6001
sqrt(2)/x 0.5000
2*x*cos(3) 0.4999
sinh(x + 2) 0.0000
1 - x 0.4999
x*(x + 4)**3 0.0109
None 0.0000
x**2*(4*x + 1) 0.2497
x**3*(x + 2) 0.0111
2*x*exp(-x) 0.0000
None 0.0000
1/(3*x + 4) 0.5000
3*x + 1 0.5001
x*(x + 2) 0.5000
None 0.0000
4*x + 4/x 0.5001
x*(x + log(x)) 0.0000
x**23*exp(-x) 0.0000
x**3 + sin(x) 0.9555
9*x**2 + x 0.4985
None 0.0000
5*x + 5 0.5001
None 0.0000
acosh(x + 5) 0.0000
x**2*(2*x + 4) 0.4978
x*sin(x) + x 0.5000
-x**2 + x + 2 0.5000
x*(x**2 + x) 0.9449
-12/x 0.5000
None 0.0000
None 0.0000
tan(x + 2) 0.5000
None 0.0000
2*x + cos(x) 0.5000
(x - 1)*log(x**2) 0.5003
None 0.0000
cos(3)/x**2 0.5000
None 0.0000
None 0.0000
x + cos(acosh(x)) 0.0000
None 0.0000
x**3/3 + x*atan(x) 0.5998
x/2 0.5000
x + atan(x - 1) 0.5000
None 0.0000
x**2*(x*sin(x) + x) 0.5546
1/(3 - 2*x) 0.5000
None 0.0000
None 0.0000
x**2*sin(3) 0.5000
None 0.0000
x**2*log(x) + 2*x 0.0000
None 0.0000
3*cos(3*x) 0.5000
None 0.0000
None 0.0000
None 0.0000
2*x**3 + 3 0.4991
sinh(x) 0.0000
x**6/7 0.0000
5*x**2/4 0.4999
None 0.0000
None 0.0000
x*sin(x) + 5 0.5000
17*x**2/2 0.4986
None 0.0000
-x*(x + 1) 0.4999
x**3/3 0.5998
tan(x + 1) 0.5000
atan(x + 1) 0.5000
2*x + cos(x) 0.5000
None 0.0000
x - 1/x 0.5000
4*x + acos(x) 0.0000
None 0.0000
x*atan(x) - 2*x 0.4999
x + cos(5) 0.5000
x + tan(x/2) 0.5000
2*x + 4 0.5000
2*x**2 - x 0.4998
None 0.0000
5*x*(x + 1) 0.4996
sin(x + 5) 0.5000
x*cos(x + 1) 0.5000
2*x**2 + 2*x 0.4999
cos(x) + 1 0.5000
x**2 - log(x) 0.0000
None 0.0000
3*x**2 - 3*x 0.4997
-4*x + sin(x) 0.4998
-2/x 0.5000
None 0.0000
x**2*cos(1) 0.5000
x*(-1 - 1/x) 0.4999
None 0.0000
3*x*(x + 2) 0.5000
None 0.0000
x**2/20 0.5000
x**3*(x + 3) 0.0111
None 0.0000
None 0.0000
exp(x) + sin(x) 0.0000
2*sin(2*x) 0.5000
None 0.0000
None 0.0000
None 0.0000
tan(x + 1) 0.5000
x**3*(x + 2) 0.0111
(x + 1)/x 0.5000
x**2/2 + x + acosh(x) 0.0000
None 0.0000
8/x 0.5000
x*acos(2*x) + x 0.0000
x**3/3 + 2*x 0.5999
x**2*atan(5)/2 0.4999
sinh(x)*cosh(x) 0.0000
x**2/16 0.5000
None 0.0000
x**2/2 + 2*x 0.5000
None 0.0000
x**2/2 + exp(x) 0.0000
x*(x + cos(1)) 0.5000
5*x*exp(3*x) 0.0000
7*x**2/2 + x 0.4997
-1/x 0.5000
x**6/6 0.0000
(x + 1)**4 0.0111
x**4*sinh(1)/2 0.0188
x**2/2 + x*tan(5) 0.4998
x**3/3 + cos(x) 0.5998
x**4*tan(3)/4 0.2316
x*atan(x) 0.5000
x**3/13 0.5200
x + cos(2*x) 0.5000
x**2*(2 - x) 0.3333
None 0.0000
None 0.0000
x**4/4 0.0430
6 - x**2 0.5000
x**3/3 - 4*sin(x) 0.5998
None 0.0000
x + (3*x + 1)*exp(x) 0.0000
x*asinh(x/2) + x 0.5000
x*(1 - x) 0.5000
x**3 - 2*x 0.9555
x**2/2 + (x + 1)*exp(x) 0.0000
x + 7/x**2 0.5000
x**4/6 + x 0.0631
x**2/5 + 3*x 0.5001
x**3*log(4)/3 0.6499
x + x/(x + 1) 0.0000
x*(x + 2) + x 0.5000
x**2/2 + 2*x*cos(1) 0.5000
None 0.0000
sin(6*x)/6 0.5000
4*x*(x + 2) 0.4999
log(cos(5*x))/5 0.0000
None 0.0000
x**5*tan(5)/5 0.0002
None 0.0000
x**2*asinh(2) 0.4999
x**2*(2*x + 3)**2 0.0028
None 0.0000
None 0.0000
120*x**4 0.0007
x**2*tan(3) 0.5000
x**3 + cos(x) 0.9555
x*(x + 3) + x 0.5001
None 0.0000
2*x**3/3 0.7490
x**2/(3*x + 1) 0.5000
x**2*(cos(4) + 1/2) 0.5000
None 0.0000
2*x + sin(x) 0.5000
x**3 + 2*x 0.9555
x*(x**2 + x) 0.9449
x*asinh(2*x) - 2*sqrt(4*x**2 + 1)/9 + log(x) 0.0000
None 0.0000
x**2/16 0.5000
x**3/3 + 4*x 0.6000
2*x + exp(cos(x)) 0.5000
-x - 3 0.4999
None 0.0000
-2*x + x*cos(1) 0.4999
None 0.0000
-4*x + cos(x) 0.4998
x**2*(2*x + 1) 0.4989
x**2 - exp(x) 0.0000
x*(x + 5)*exp(x) 0.0000
cos(x + 2) 0.5000
x + sin(x + 2) 0.5000
cos(3*x)/3 0.5000
-1/x 0.5000
2*x*(x + 4) 0.5001
4*cosh(x)/x**2 0.0000
None 0.0000
None 0.0000
None 0.0000
-x**2/2 - x/8 0.5000
exp(x)*sin(x)/2 0.0000
acos(x + 2) 0.0000
tanh(x) + 1 0.5000
x**3/3 + x*sin(x) 0.5999
2*x**5/5 + log(x) 0.0000
None 0.0000
atan(x)/3 0.5000
None 0.0000
cos(4*x) 0.5000
x + x/(x + 2) 0.5000
tan(x/5) 0.5000
exp(2*x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*asinh(2) 0.5000
None 0.0000
x**2/(x + 1) 0.0000
None 0.0000
15*x**2/2 0.4989
x*(x + cos(1)) 0.5000
None 0.0000
log(4*x + 5)/6 0.0000
2/x 0.5000
x**2/2 + exp(3) 0.5000
cos(x + 3) 0.5000
asinh(1/x) 0.5000
x + cos(2*x**2) 0.5000
2*x**2 - 2*x 0.4998
x*log(2) 0.5000
None 0.0000
None 0.0000
x*(x + 4)**3 + x 0.0109
3*x**2/2 + x*log(x) + 3*x 0.0000
2*x**2/5 0.5000
x**2 + atan(3*x) 0.4999
2*x**2 - 2*x 0.4998
x*(x + sin(x)) 0.4999
None 0.0000
tan(3) 0.0000
x/(x + 2) 0.5000
x**2/(x + 4) 0.5000
12*x**2 0.4974
2*x + asinh(x) 0.5000
x + 2 0.5000
x*(x*atan(x) + x) 0.5045
tan(x - 3) 0.5000
x*log(3) + 4*x 0.5001
(x + 2)**3 0.8956
64*x**4 0.0000
2*x + 4 0.5000
exp(3*x + 2) 0.0000
<lambdifygenerated-3183>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x))
<lambdifygenerated-3188>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 5)
<lambdifygenerated-3198>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + cos(arccosh(x))
<lambdifygenerated-3205>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x) + 2*x
<lambdifygenerated-3219>:2: RuntimeWarning: invalid value encountered in arccos
  return 4*x + arccos(x)
<lambdifygenerated-3230>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - log(x)
<lambdifygenerated-3244>:2: RuntimeWarning: invalid value encountered in arccosh
  return (1/2)*x**2 + x + arccosh(x)
<lambdifygenerated-3246>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(2*x) + x
<lambdifygenerated-3279>:2: RuntimeWarning: divide by zero encountered in divide
  return x + x/(x + 1)
<lambdifygenerated-3284>:2: RuntimeWarning: invalid value encountered in log
  return (1/5)*log(cos(5*x))
<lambdifygenerated-3298>:2: RuntimeWarning: invalid value encountered in log
  return x*arcsinh(2*x) - 2/9*sqrt(4*x**2 + 1) + log(x)
<lambdifygenerated-3316>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(x + 2)
<lambdifygenerated-3319>:2: RuntimeWarning: invalid value encountered in log
  return (2/5)*x**5 + log(x)
<lambdifygenerated-3326>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
<lambdifygenerated-3329>:2: RuntimeWarning: invalid value encountered in log
  return (1/6)*log(4*x + 5)
<lambdifygenerated-3338>:2: RuntimeWarning: invalid value encountered in log
  return (3/2)*x**2 + x*log(x) + 3*x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
mean: 0.2924908697605133
top: 0.9554662704467773
Saving results...
Working with expression:  math.tanh(2 * x[0])
Error in expression:  math.tanh(2 * x[0])
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x + tan(x + 3) 0.5000
(1 - x)/x 0.5000
12*x*sinh(x) 0.0000
tanh(x + 2) 0.5000
x**3/3 + 2*x**2 - x 0.5994
x**3/4 0.5713
x + cos(asinh(x)) 0.5000
x + atanh(x) + 2 0.0000
sin(x + 2) 0.5000
None 0.0000
8*sqrt(5)*x**(2/3)/35 0.0000
sin(x + 5) 0.5000
x*(x + cos(3)) + x 0.4999
2*x + 2/x 0.5000
-x + sin(x) 0.4999
4/x 0.5000
x**3/3 + x**2/2 0.5998
None 0.0000
None 0.0000
log(2*x)**3 0.0000
x*(x + cos(1)) 0.5000
x**4*exp(-4)/4 0.4804
x/(x**2 + 1/2) 0.5000
7*x**2/2 0.4997
2*x*sin(3) 0.5000
None 0.0000
2*log(tan(x)) 0.0000
x*log(x**2 + 1) - 2*x 0.5002
4*x + asinh(x) 0.5001
4*x*cos(x) 0.5000
x**3 + x + 1 0.9555
None 0.0000
None 0.0000
sqrt(x + 1) 0.0000
x**3 + 6*x 0.9554
2*x**(3/2)/3 + 3*x**2/2 0.0000
None 0.0000
4 - x 0.4999
None 0.0000
x**3/3 - x**2/32 0.5998
x**3/3 + sin(x) 0.5998
x*(x + tan(3)) + x 0.5000
x**4/4 + 2*x**3 0.0429
cosh(24*x) 0.0000
5 + exp(2) 0.0000
-pi*x/4 0.4999
2*x**2 - 3*x 0.4998
x/5 0.5000
x**2*sin(1) 0.4999
3*x + exp(2*x) 0.0000
x**3/3 + x**2 0.5997
sin(x + 1) 0.5000
sin(x + 2) 0.5000
6/x**2 0.5000
None 0.0000
4*x + cos(x) 0.5001
x**2/2 + x + cosh(x) 0.0000
sin(x + 3) 0.5000
x**5/10 0.0012
2*x + 2/x 0.5000
None 0.0000
3*x**3 + cos(x) 0.3329
None 0.0000
1/(x*(x + 5)) 0.5000
8*x**4/5 0.0070
<lambdifygenerated-3363>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x + arctanh(x) + 2
<lambdifygenerated-3363>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(x) + 2
<lambdifygenerated-3365>:2: RuntimeWarning: invalid value encountered in power
  return (8/35)*sqrt(5)*x**(2/3)
<lambdifygenerated-3372>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)**3
<lambdifygenerated-3378>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(tan(x))
<lambdifygenerated-3383>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-3385>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + (3/2)*x**2
<lambdifygenerated-3391>:2: RuntimeWarning: overflow encountered in cosh
  return cosh(24*x)
x**3/3 + log(cos(x)) 0.0000
sqrt(x)/6 0.0000
exp(x + 4)/3 0.0000
x**2 + sinh(x) 0.0000
4/x 0.5000
5*x*(x + 3) 0.5000
9*x**3 0.1110
x**2 + x + acosh(x) 0.0000
sin(x) 0.5000
x**7/10 0.0000
2*x**3/3 + 2*cosh(x) 0.0000
x*cos(3*x)/5 0.5000
None 0.0000
x*(4*x + 4) 0.4998
5*sin(2*x) 0.5000
(x + 3)/x**2 0.5000
3*x**2 0.4998
None 0.0000
x**7/7 + x**4/8 0.0000
x*(x + sin(4)) 0.4999
-log(cos(x)) 0.0000
2*x + tan(cos(x)) 0.5000
x**3/3 + x**2/2 0.5998
None 0.0000
None 0.0000
None 0.0000
x + asinh(x + 1) 0.5000
2*sqrt(3)*sqrt(x) 0.0000
log(x**2*tan(2)) 0.0000
x + 4 0.5000
None 0.0000
x**2 + x*exp(-5) 0.4999
3*x**2 - 2*x 0.4997
x**3*sin(5)/3 0.4311
log(asin(x)) 0.0000
-log(cos(x)) + sin(x) 0.0000
x**4/4 + 5*x**3/3 0.0429
x**2*tan(2)/4 0.5000
2*sqrt(2)*x**(3/2)/3 0.0000
x**3/(x + 1) 0.0000
sin(4*x)/4 0.5000
x*(-2*x**2 + x) 0.2500
x*exp(x) - 3*x 0.0000
None 0.0000
-2*x**2 + 2*x 0.5000
None 0.0000
None 0.0000
x*(25 - x) 0.5008
sin(8*x) 0.5000
x*sin(x)/4 0.5000
None 0.0000
None 0.0000
x**6/6 + x**3 + x**2/2 0.0000
x + sin(x) + 5 0.5000
4*x + 3 0.5001
None 0.0000
x*sin(2*x)/2 + x*cos(2*x)/2 0.5000
1/2 - 2*log(cos(x)) 0.0000
x**2*sin(2) 0.4999
None 0.0000
x + cos(x + 3) 0.5000
None 0.0000
x**2/12 0.5000
x**2/2 + x 0.5000
log(x + 1)/x 0.0000
4 - x**2 0.5000
x**2*exp(x) + x 0.0000
sqrt(2)/(3*x) 0.5000
x**3/3 + x**2/2 0.5998
None 0.0000
cos(x + 3) 0.5000
x*(x + 2) 0.5000
None 0.0000
x*(x**3 + x + atan(x) + 1) 0.0111
x**3 + x**2*log(x)/2 + x/4 0.0000
3*x**2/2 + 5*x 0.5001
5*x + exp(x) 0.0000
2*x + log(x)**3/3 0.0000
2*x - 2/x**2 0.5000
x*(log(x) + 1) 0.0000
0 0.0000
None 0.0000
(5 - x)/x 0.5000
None 0.0000
None 0.0000
sin(x + 5) 0.5000
x**2 + 4 0.4999
-tanh(x) 0.5000
x - cos(x) 0.5000
None 0.0000
1/(9*x) 0.5000
None 0.0000
x**3/16 0.5161
log(x**5)/10 0.0000
x**4/2 + x**3/110 0.0220
5*sqrt(2)*x**2/2 0.4997
x**2*(x + 4) 0.9147
None 0.0000
cosh(6*x) 0.0000
cosh(x + 1) 0.0000
None 0.0000
(x + 1/2)/x 0.5000
None 0.0000
log(cos(x)) - cos(x) 0.0000
None 0.0000
x**3/185 0.5013
sin(x + 3) 0.5000
1/(2*x + 1) 0.5000
cos(x/4) 0.5000
x**3*log(3)/3 + 2*x**3/3 0.9452
x**2 0.4999
-exp(-x) 0.0000
x**2 + x + 4 0.5000
None 0.0000
x**2/2 + cosh(2*x) 0.0000
9*x + 1 0.5003
None 0.0000
sqrt(3)*exp(3*x/2) 0.0000
None 0.0000
x + sin(x) + 1 0.5000
(x + 7)/x 0.5000
x**2/2 + cos(3*x)/3 0.5000
2*x + tan(x/2) 0.5000
None 0.0000
sin(x + 3) 0.5000
x*(x + exp(-x**2)) 0.4999
5*x**3 + 5*x 0.1998
3*x*asinh(x) 0.5000
3*x*(x + 3) 0.5001
-x**2 - 2*x 0.4999
6/x 0.5000
exp(1 - x) 0.0000
-sqrt(3)/(6*x**4) 0.5000
x**2*exp(-2*x)/2 0.0000
5*x**3/3 + x**2/2 0.5984
None 0.0000
None 0.0000
None 0.0000
x**3 + 5*x 0.9554
x*sin(x) + 3 0.5000
None 0.0000
atan(x + 1) 0.5000
6*x**2 0.4993
x - 5/x 0.5000
x**2 + cos(x) 0.4999
5*x**3 0.1998
None 0.0000
asin(x + 2) 0.0000
sin(x + 1) 0.5000
x**4/4 + 3*x 0.0430
None 0.0000
x*(x**3 + log(x) + 4) 0.0000
None 0.0000
None 0.0000
2*x**2 + x*log(x) 0.0000
2*x**(3/2)/3 + 8*x**3/3 0.0000
x**3 - 3*x 0.9555
-2/x 0.5000
sqrt(2)*x**3/3 0.6539
x*exp(-x)/5 0.0000
sin(x)**2/2 - 9*cos(x) 0.5000
-x**3/39 + sin(x) 0.4936
x**3/8 0.5333
-3*x**2 + 3*x 0.5000
4*sqrt(x) 0.0000
4*x*sin(x) 0.5000
sqrt(x) + x + 5 0.0000
x**2*(2*x + 4) 0.4978
4*x**2 + 4*x 0.4998
-atanh(x) 0.0000
2*x + cos(x) 0.5000
-log(2*x + 1)/2 0.0000
x**2 + x + 1 0.5000
None 0.0000
sin(2*x) 0.5000
-x**2 + sin(x) 0.5000
zoo 0.0000
2*x + 3 0.5000
None 0.0000
5 - 1/x**2 0.5000
None 0.0000
None 0.0000
6*x + 4 0.5002
None 0.0000
None 0.0000
(x + 1)**5 0.0000
x**2/2 + 2*log(x) 0.0000
x*asinh(4) 0.5000
acos(3*x) 0.0000
sin(x + 4) 0.5000
3*x + 5 0.5001
<lambdifygenerated-3410>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 + log(cos(x))
<lambdifygenerated-3411>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/6)*sqrt(x)
<lambdifygenerated-3417>:2: RuntimeWarning: invalid value encountered in arccosh
  return x**2 + x + arccosh(x)
<lambdifygenerated-3428>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
<lambdifygenerated-3432>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(3)*sqrt(x)
<lambdifygenerated-3433>:2: RuntimeWarning: invalid value encountered in log
  return log(x**2*tan(2))
<lambdifygenerated-3438>:2: RuntimeWarning: invalid value encountered in arcsin
  return log(arcsin(x))
<lambdifygenerated-3438>:2: RuntimeWarning: invalid value encountered in log
  return log(arcsin(x))
<lambdifygenerated-3439>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x)) + sin(x)
<lambdifygenerated-3442>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*sqrt(2)*x**(3/2)
<lambdifygenerated-3443>:2: RuntimeWarning: divide by zero encountered in divide
  return x**3/(x + 1)
<lambdifygenerated-3455>:2: RuntimeWarning: invalid value encountered in log
  return 1/2 - 2*log(cos(x))
<lambdifygenerated-3460>:2: RuntimeWarning: divide by zero encountered in log
  return log(x + 1)/x
<lambdifygenerated-3460>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 1)/x
<lambdifygenerated-3468>:2: RuntimeWarning: invalid value encountered in log
  return x**3 + (1/2)*x**2*log(x) + (1/4)*x
<lambdifygenerated-3471>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + (1/3)*log(x)**3
<lambdifygenerated-3473>:2: RuntimeWarning: invalid value encountered in log
  return x*(log(x) + 1)
<lambdifygenerated-3482>:2: RuntimeWarning: invalid value encountered in log
  return (1/10)*log(x**5)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-3489>:2: RuntimeWarning: invalid value encountered in log
  return log(cos(x)) - cos(x)
<lambdifygenerated-3523>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 2)
<lambdifygenerated-3526>:2: RuntimeWarning: invalid value encountered in log
  return x*(x**3 + log(x) + 4)
<lambdifygenerated-3527>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2 + x*log(x)
<lambdifygenerated-3528>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + (8/3)*x**3
<lambdifygenerated-3537>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4*sqrt(x)
<lambdifygenerated-3539>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + 5
<lambdifygenerated-3542>:2: RuntimeWarning: divide by zero encountered in arctanh
  return -arctanh(x)
<lambdifygenerated-3542>:2: RuntimeWarning: invalid value encountered in arctanh
  return -arctanh(x)
<lambdifygenerated-3544>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*log(2*x + 1)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-3552>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + 2*log(x)
<lambdifygenerated-3554>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(3*x)
mean: 0.2770217955112457
top: 0.9554678797721863
Saving results...
Working with expression:  x[0]**3 + 2 * x[0]**2 + 3 * math.exp(x[0]) + 5
Error in expression:  x[0]**3 + 2 * x[0]**2 + 3 * math.exp(x[0]) + 5
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
(x + 15)/x**2 0.5000
x - log(5*x) 0.0000
(x + 6)/x 0.5000
27*x**2/10 0.4998
None 0.0000
None 0.0000
x*(5*x*sin(x) + x) 0.4951
None 0.0000
x**3/7 0.5384
3*x*tan(3) 0.5000
x*exp(1 - x) 0.0000
None 0.0000
x**4 0.0111
None 0.0000
2*x + sin(x) 0.5000
20*x**3/9 0.4493
x**3/3 + 3*x**2 0.5992
(2*x + 2)/x 0.5000
-1/(4*x**4) 0.5000
4*x**3 0.2497
sqrt(x) + 3*x**2 - 3*x 0.0000
x**2 - tan(x) 0.4999
-1/(2*x) 0.5000
21*x**2*(x + cos(x)) 0.0475
x*exp(sin(x)) - x 0.5000
x**2*log(3)/2 0.5000
-x + tan(3*x) 0.4999
x/53 0.5000
sin(1) 0.0000
None 0.0000
1/(6*x**4) 0.5000
None 0.0000
65*x**4 0.0014
None 0.0000
None 0.0000
2*x**3/3 0.7490
log(x*exp(x + 5)) 0.0000
None 0.0000
None 0.0000
exp(x) + atan(x) 0.0000
x**12/12 0.0000
5*x*sin(x) 0.5000
2*x + 3 0.5000
exp(2*x)/2 0.0000
None 0.0000
10*x**7/7 0.0000
x**3/3 + 4*x**2 0.5988
None 0.0000
3*x*tan(1) 0.5001
4*x**2 - 6*x + 6*atan(x + 3) 0.4994
2*x + 2 0.5000
None 0.0000
None 0.0000
None 0.0000
3*x**2 + 3*x 0.4999
x**2*(2*x + 1) 0.4989
3*x*(x + sin(x)) 0.4998
x*(2 - x) 0.5000
E/x 0.5000
log(x)/4 0.0000
-21*x + acos(x) 0.0000
9*x**2/5 0.4999
-1/(3*x**3) 0.5000
sqrt(x) + 5 0.0000
cos(x) 0.5000
x**2 + x + 1 0.5000
x**2/2 0.5000
3*x + cos(x) 0.5001
10/x**2 0.5000
x*sin(x + 2) 0.5000
15*x**2/2 0.4989
None 0.0000
tan(3*x) 0.5000
x*sin(1) + x 0.5000
-1/x 0.5000
None 0.0000
None 0.0000
None 0.0000
(x + 1)/x 0.5000
sin(x + 5) 0.5000
5*x**2/16 0.5000
-5*x**2 + sin(x) 0.4996
2*x*exp(2*x) 0.0000
10*x**3/9 0.8912
6*log(x) 0.0000
x + tan(x + 4) 0.5000
x**4 + tan(x) 0.0111
1/sqrt(x) 0.0000
2*x*(x - 2) 0.4997
x + cos(x)**3 0.5000
2*x*(x + 4) 0.5001
(x + 2)/x 0.5000
None 0.0000
None 0.0000
asinh(2*x + 1) 0.5000
6*x + sin(x) 0.5002
None 0.0000
asinh(x + 2) 0.5000
5*x*exp(5) 0.5262
None 0.0000
1/(x**3*(x + 2)) 0.5000
x**5*exp(-1)/5 0.0017
x**3 + 8*x 0.9554
9/x 0.5000
3*x**2 - 3*x*exp(-3*x) - exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-x**2/2 0.5000
x**5 + 4*x + 4 0.0025
3*x**2*(x + 3) 0.3319
None 0.0000
3/sqrt(x) 0.0000
2*x*tan(1) 0.5001
exp(x)*tan(3*x**2) 0.0000
None 0.0000
5*x*asinh(x) 0.5000
acos(x + 3) 0.0000
None 0.0000
x*(x**3 + x) 0.0111
x*(5 - x) 0.5001
x**2/2 + x 0.5000
1/(6*x**3) 0.5000
x*(2*x + cos(x)) 0.4999
cos(x) + tan(x) 0.5000
x**2*(x + sin(x)) 0.9522
x**6/3 0.0000
None 0.0000
2*x/(x + 3) 0.5000
None 0.0000
None 0.0000
None 0.0000
8*x**2/5 0.4999
5/(3*x) 0.5000
x**6 0.0004
-x 0.4999
4*x*sin(x)**2 0.5001
tan(3*x) 0.5000
None 0.0000
7*x**3/3 0.4279
1/(2*x + 4) 0.5000
None 0.0000
(x + cos(x))**2 0.4999
sqrt(2)*x**2/2 0.4999
-25/x 0.5000
x**2 + cos(1) 0.4999
15/x 0.5000
None 0.0000
-5*x**2 + 5*x 0.4998
x*sin(1)**5 0.5000
2*x + sin(x) 0.5000
8*x**2 0.4988
2/sqrt(x) 0.0000
x/52 0.5000
-log(cos(x)) 0.0000
None 0.0000
x**2 + x + 1/x 0.5000
-5*x + exp(5*x) 0.0000
log(x) + 4 0.0000
x**2*tan(1)/2 0.4999
x*cos(x) + x + 2 0.5000
7*x/(x + 1) 0.0000
None 0.0000
cos(9*x/2) 0.5000
16*x + atan(x) 0.5005
1 - x 0.4999
cos(x + 4) 0.5000
None 0.0000
(x + 4)**2 0.5002
None 0.0000
x*(2*x + 1) 0.4999
1 - x 0.4999
None 0.0000
None 0.0000
None 0.0000
-log(cos(x)) 0.0000
None 0.0000
x**2/13 0.5000
x + tan(x)**2 + tan(x) 0.5000
exp(x) - log(cos(x)) 0.0000
None 0.0000
x*cos(1) + x 0.5000
3*x**2/2 + 3*x 0.5000
None 0.0000
x**2/4 + 4*x 0.5001
5*x*log(3) 0.5002
x + 1 0.5000
2*x + sin(x) 0.5000
x*(8*x + exp(x**2)) 0.0000
asinh(x + 3) 0.5000
log(x/2) 0.0000
-x**2 - cos(x) 0.5000
5*x**3/3 + x**2/2 0.5984
x**7/7 0.0000
None 0.0000
x**2 + 2*x + cos(x) 0.5000
x**2*(x**2 + x) 0.0111
None 0.0000
x*(x**2 + 3) 0.9555
6*x**4 0.0019
x*cos(x + 2) 0.5000
None 0.0000
x + cos(x + 1) 0.5000
None 0.0000
4*x**2/5 0.4999
93*x**2/2 + 3*x 0.4674
None 0.0000
3 - x 0.4999
None 0.0000
None 0.0000
(x**2 + x)/x 0.5000
sin(x + 1) 0.5000
x*sin(x)/5 0.5000
3*x**2/2 - sin(x) 0.4999
x*sin(x + 2) 0.5000
log(tan(x)**3 + 1)/3 0.0000
x**2/2 + x*tan(1)/2 0.5000
x**3*cos(3)/2 0.4008
1/(4*x**3) 0.5000
None 0.0000
sqrt(2)/(5*x) 0.5000
None 0.0000
None 0.0000
3*x**2 + sin(x) 0.4998
x**12/16 0.0000
x**5 + x 0.0025
x + sin(x + 1) 0.5000
-1/sqrt(x) 0.0000
None 0.0000
None 0.0000
2*x**(3/2)/3 + x**2 0.0000
None 0.0000
x*(3*x + 6) 0.5000
4*x*cos(x) 0.5000
x*exp(-3)/2 0.5000
-x**2 + 8*x 0.5002
x**7/7 0.0000
-16/9 0.0000
log(x)**5 0.0000
None 0.0000
x**2/2 + 2*x + cos(x) 0.5000
None 0.0000
5*x**4/2 + 2*x 0.0045
1 - sin(x) 0.5000
None 0.0000
x*(x + sin(x) + 3) 0.5000
x**3*exp(5) 0.0067
x + atanh(2*x**2) 0.0000
None 0.0000
x**2 + 2*x 0.5000
x**2 + x + tan(x) 0.5000
4*x*sin(x) 0.5000
-x**2 + 8*x 0.5002
None 0.0000
x + 7/x 0.5000
<lambdifygenerated-3558>:2: RuntimeWarning: invalid value encountered in log
  return x - log(5*x)
<lambdifygenerated-3572>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 3*x**2 - 3*x
<lambdifygenerated-3584>:2: RuntimeWarning: invalid value encountered in log
  return log(x*exp(x + 5))
<lambdifygenerated-3600>:2: RuntimeWarning: invalid value encountered in log
  return (1/4)*log(x)
<lambdifygenerated-3601>:2: RuntimeWarning: invalid value encountered in arccos
  return -21*x + arccos(x)
<lambdifygenerated-3604>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 5
<lambdifygenerated-3621>:2: RuntimeWarning: invalid value encountered in log
  return 6*log(x)
<lambdifygenerated-3624>:2: RuntimeWarning: invalid value encountered in sqrt
  return 1/sqrt(x)
<lambdifygenerated-3641>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3/sqrt(x)
<lambdifygenerated-3645>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(x + 3)
<lambdifygenerated-3672>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2/sqrt(x)
<lambdifygenerated-3674>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-3677>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 4
<lambdifygenerated-3680>:2: RuntimeWarning: divide by zero encountered in divide
  return 7*x/(x + 1)
<lambdifygenerated-3688>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
<lambdifygenerated-3691>:2: RuntimeWarning: invalid value encountered in log
  return exp(x) - log(cos(x))
<lambdifygenerated-3698>:2: RuntimeWarning: overflow encountered in exp
  return x*(8*x + exp(x**2))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: invalid value encountered in reduce
  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
<lambdifygenerated-3700>:2: RuntimeWarning: invalid value encountered in log
  return log((1/2)*x)
<lambdifygenerated-3718>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*log(tan(x)**3 + 1)
<lambdifygenerated-3727>:2: RuntimeWarning: invalid value encountered in sqrt
  return -1/sqrt(x)
<lambdifygenerated-3728>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + x**2
<lambdifygenerated-3735>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**5
<lambdifygenerated-3741>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(2*x**2)
mean: 0.27849042415618896
top: 0.9554516673088074
Saving results...
Working with expression:  math.sqrt(x[0]**2 + 9) - x[0]**2
Error in expression:  math.sqrt(x[0]**2 + 9) - x[0]**2
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
4*x + 4 0.5001
2 - 1/x 0.5000
(x + 2)/x 0.5000
None 0.0000
3*x**2 + x 0.4998
sqrt(2)*sqrt(x) + 2*x 0.0000
2/(x + 4) 0.5000
x**3/6 0.5454
2*x + sin(1) 0.5000
-cos(2*x)/2 0.5000
None 0.0000
x*(x + 1) + x 0.5000
3*x*sin(x) 0.5000
cos(x + 2) 0.5000
(x**5 + x)**2 0.0009
1/(4*x) 0.5000
x**2 + cos(x) 0.4999
x**2*exp(2)/2 0.4997
1/sqrt(x) 0.0000
None 0.0000
sin(4*x)/2 0.5000
7/x 0.5000
1/(15*x) 0.5000
2*x**(3/2) + 2*x 0.0000
x*(x**2 + x) 0.9449
x**2/2 - cos(x) 0.5000
5*x*exp(3) 0.5034
x*(5 - x) 0.5001
5*x + sin(x) 0.5001
None 0.0000
x**3/3 + x**2/2 0.5998
None 0.0000
3*x**2/2 + 9*x 0.5002
x + sin(x) - 1 0.5000
x**5/5 0.0006
asin(x + 4) 0.0000
5*x + sin(x) 0.5001
x + sin(x + 3) 0.5000
None 0.0000
-x**2/2 + x**2*log(2)/2 0.5000
x**2/6 0.5000
(4*x + 5)**(-2) 0.5000
None 0.0000
2*x + 8 0.5000
5*x**2/2 + x 0.4999
None 0.0000
3*x*(x + 5) 0.5003
None 0.0000
x + 9/x 0.5000
26*x**2 0.4887
x*(x + 4) 0.5001
None 0.0000
None 0.0000
x**3/16 0.5161
x + Abs(x) + 5 0.5000
x + atan(x**2) 0.5000
None 0.0000
None 0.0000
x**3/3 0.5998
-4/x 0.5000
None 0.0000
x*(x - 1/x) 0.4999
1/(x + 2) 0.5000
None 0.0000
-x + sin(1) 0.4999
sinh(2*x + 4) 0.0000
None 0.0000
2*x + 2 0.5000
cos(x + 5) 0.5000
None 0.0000
x**2*cos(x) + x 0.5004
16*x**3 0.0625
tanh(x + 1) 0.5000
1/(x + 3) 0.5000
x**3 + x**2 0.9449
None 0.0000
3*x + 6 0.5001
x + 5/(x + 5) 0.5000
None 0.0000
None 0.0000
3*x/5 0.5000
None 0.0000
6*x + cos(x) 0.5002
4*x + 4 0.5001
tanh(x + 4) 0.5000
-1/(2*x) 0.5000
2/x 0.5000
x**2*(3*x + 3) 0.3326
None 0.0000
4*x*tan(5) 0.4995
5 - x 0.4999
-x + tan(1) 0.4999
3*x*sin(x) 0.5000
1/(4*x) 0.5000
3*x + atan(x) 0.5001
None 0.0000
x + 5/x 0.5000
5*x**3 0.1998
5*tan(x) 0.5000
x**2/2 0.5000
None 0.0000
cos(x + 1) 0.5000
x**2*sin(5) 0.5000
2*x + cos(1) 0.5000
2*x*tan(5) 0.4997
(x + 2)/x 0.5000
-x - 5 0.4999
tan(x)/sinh(x) 0.5000
-x*(x + 2) 0.4999
2*x + tan(x) 0.5000
x**2*sin(4) 0.5000
26/x**2 0.5000
None 0.0000
2 0.0000
-x + sinh(x) 0.0000
None 0.0000
1/sqrt(x) 0.0000
x**2/2 - x 0.4999
log(cos(log(cos(x)))) 0.0000
x**2 + x + 3 0.5000
x**2*(x + 3) 0.9246
2*x*(x + 3) 0.5001
(4 - x)/x 0.5000
(5 - 5*x)*exp(-x/2) 0.0000
x*sin(x + 2) 0.5000
-sin(5*x - 1) 0.5000
None 0.0000
(x**2 + x)/x 0.5000
None 0.0000
x**2 + sin(x) 0.4999
x/tan(3) + x 0.4998
2*x/(x + 3) 0.5000
x**2 + 1/x 0.4999
x*(x**2 + x + 1) 0.9449
cos(x) + 5 0.5000
x/(2*x + 4) 0.5000
cos(x) + 1 0.5000
-x*cos(x) 0.5000
tan(x + 2) 0.5000
None 0.0000
5*x*sin(x) 0.5000
x + 1 0.5000
x**2 + 5*x 0.5001
x**2 + 1 0.4999
None 0.0000
-x + cos(x) 0.4999
1/(x + 3) 0.5000
5*x + 3 0.5001
cos(3*x/2) 0.5000
x**(3/2)*sin(1) 0.0000
x**2/12 0.5000
sin(x + 8) 0.5000
-cos(x) 0.5000
-4*x + exp(5*x) 0.0000
None 0.0000
x - sin(x) 0.5000
None 0.0000
x + sin(x) + 1 0.5000
exp(x) + sin(x) 0.0000
None 0.0000
x + sin(x) + 1 0.5000
x + tan(x) + 2 0.5000
2*x**2*cosh(x) 0.0000
x**3 + 2*x + 4 0.9554
x + cos(x + 2) 0.5000
x**3*sin(4)/3 0.4440
x**2 + x - 1 0.5000
x**2/2 + 2*log(x) 0.0000
x**3 + 5*x 0.9554
-x + tan(x) 0.4999
sqrt(x - 1) 0.0000
x**2 0.4999
None 0.0000
x**3/3 - sin(x) 0.5998
None 0.0000
x**3 + 2*x 0.9555
25*x**4 0.0004
x**3/3 + 3*x 0.6000
2 - 1/x 0.5000
x*(x + sin(sqrt(x))) 0.0000
3*x + 5 0.5001
None 0.0000
x/sin(x) + 5 0.5000
x*(4*x + 3) 0.4997
2*x**2 + 4*log(x) 0.0000
None 0.0000
x*(x**2 + sin(x)) 0.9555
x*(x + 1) 0.5000
None 0.0000
sin(x + 5) 0.5000
x*(4 - x) 0.5001
sin(x + 3) 0.5000
4*cos(x) 0.5000
None 0.0000
x*(2 - x) 0.5000
2*x + 5 0.5000
2*x*(x + cos(x)) 0.4999
cos(x) + 4 0.5000
x*cos(x + 3) 0.5000
x*sin(x) + x + cos(x) 0.5000
x*log(x + 2)**2 - log(x + 2) + sin(x) 0.0000
cos(x**3) + 3 0.5000
2*x + 1 0.5000
x + cos(x + 1) 0.5000
2*x*(x + 4) 0.5001
None 0.0000
atanh(2*x + 1) 0.0000
x**3/6 0.5454
-sin(x) 0.5000
x*(x**3/3 + 3/2) 0.0326
x*log(x**3) - 3*x 0.0000
1/sin(x) 0.5000
None 0.0000
asin(3*x) 0.0000
x*sin(x)**2 + x + sin(x) 0.5000
x**9/16 0.0000
None 0.0000
5*log(5*x) 0.0000
-x + cos(x) 0.4999
x + (x + tan(x))/x 0.5000
4*x*(x + 3) 0.5000
cosh(x + 2) 0.0000
None 0.0000
x - 1/(2*x) 0.5000
2*x**2 + 5*x 0.5000
x**2 + x + 1 0.5000
x**3*sin(3) 0.5379
x**3*cos(1) 0.6846
x**2 + x*tan(1) 0.5000
x + 5 + 1/x 0.5000
x*cos(3)/5 0.5000
sin(x) 0.5000
9/x 0.5000
x**2 + 2*x + 4 0.5000
1/(8*x) 0.5000
sqrt(x) + cos(x + 1) 0.0000
x**2/2 + x 0.5000
None 0.0000
x*(5 - x) 0.5001
2*x**2 - x 0.4998
4 - x 0.4999
3*x/(x + 2) 0.5000
None 0.0000
x + cos(9) 0.5000
None 0.0000
4*x + atan(x) 0.5001
sin(x)/5 0.5000
1/sin(x) 0.5000
x*atan(2*log(x + 1)) + 2*x + 2*atan(2*x) 0.0000
(x + 5)/x 0.5000
4/x**4 0.5000
None 0.0000
x**3/3 0.5998
x**2 + x + 5 0.5000
2*x + sin(x) 0.5000
x*(x + 1) 0.5000
<lambdifygenerated-3751>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(2)*sqrt(x) + 2*x
<lambdifygenerated-3763>:2: RuntimeWarning: invalid value encountered in sqrt
  return 1/sqrt(x)
<lambdifygenerated-3767>:2: RuntimeWarning: invalid value encountered in power
  return 2*x**(3/2) + 2*x
<lambdifygenerated-3777>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 4)
<lambdifygenerated-3837>:2: RuntimeWarning: invalid value encountered in sqrt
  return 1/sqrt(x)
<lambdifygenerated-3839>:2: RuntimeWarning: invalid value encountered in log
  return log(cos(log(cos(x))))
<lambdifygenerated-3866>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2)*sin(1)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-3881>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + 2*log(x)
<lambdifygenerated-3884>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x - 1)
<lambdifygenerated-3891>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(x + sin(sqrt(x)))
<lambdifygenerated-3895>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2 + 4*log(x)
<lambdifygenerated-3908>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x + 2)**2 - log(x + 2) + sin(x)
<lambdifygenerated-3913>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(2*x + 1)
<lambdifygenerated-3913>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(2*x + 1)
<lambdifygenerated-3917>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**3) - 3*x
<lambdifygenerated-3919>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(3*x)
<lambdifygenerated-3922>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(5*x)
<lambdifygenerated-3939>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + cos(x + 1)
<lambdifygenerated-3949>:2: RuntimeWarning: divide by zero encountered in log
  return x*arctan(2*log(x + 1)) + 2*x + 2*arctan(2*x)
<lambdifygenerated-3949>:2: RuntimeWarning: invalid value encountered in log
  return x*arctan(2*log(x + 1)) + 2*x + 2*arctan(2*x)
mean: 0.36122190952301025
top: 0.955497145652771
Saving results...
Working with expression:  x[0]**3 + 2 * x[0]**2 + 2 * x[0] + 5
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x**4*cos(4)/4 0.0641
36/x 0.4998
x + tan(1) 0.4999
2*x*(x*sin(x) + x) 0.4983
x**3 + x**2 0.9885
sin(x + 5) 0.4998
2*x + tan(5) 0.4999
2*x - 1/x 0.4999
2*(x + 5)**(3/2)/3 0.0000
x**6 + 1 0.0004
None 0.0000
x*(x + sin(sin(x))) 0.5000
x*tan(x - 1) 0.4998
x**2/2 + cos(1) 0.4999
-5*cos(x) 0.4998
x**3/3 + x**2 0.5999
sin(x + 4) 0.4998
None 0.0000
x*(x + 4) 0.5001
2*x**3/3 + x 0.7491
None 0.0000
x**2 - exp(x) 0.0000
x*cos(1) + x 0.4999
2*x*atan(x) 0.4998
x**(3/2) 0.0000
x*exp(2) + 5 0.5001
-x**2 + log(x + 1)/2 0.0000
x + (x + sin(x))**2 0.5001
None 0.0000
None 0.0000
x**2*(x + tan(x)) 0.8925
x*tan(1)/2 0.4999
x**2/2 + x 0.5000
3*sin(x/3) 0.4998
exp(4*x)/4 0.0000
-x**2/2 + x 0.4998
145*x**3 0.0069
2*x*sin(1) 0.4999
None 0.0000
tan(x + 2) 0.4998
x**3*sin(1) 0.8611
x**3 - x 0.9772
4*x**2/3 0.5001
2*sin(x)**2 0.4998
x**2 + 5*x 0.5002
x/(x**2 + x) 0.0000
None 0.0000
x**2 + x - cos(x) 0.5000
2*x**2*sin(3) 0.4999
x*(x + cos(x) + 2) 0.5001
None 0.0000
2*x*log(2) 0.4999
x/cos(3) 0.4998
x**(5/6) 0.0000
x + exp(-x) 0.0000
4*x**3*sin(x) 0.2430
None 0.0000
x**2*cos(1)/2 0.4999
tan(x + 8) 0.4998
(x + 4)/x 0.4998
sin(x + 5) 0.4998
x*(x + cos(1)) 0.5000
atan(x/2) 0.4998
-x + sin(x) 0.4998
sin(x + 4) 0.4998
x**4/4 + x**2*log(5)/2 0.0432
None 0.0000
-x + log(x) - cos(x) 0.0000
None 0.0000
None 0.0000
sqrt(x) + cos(x) 0.0000
x + 1/3 0.4999
None 0.0000
(x + 2)/x 0.4998
None 0.0000
None 0.0000
None 0.0000
2*x**2 + 2*x 0.5002
None 0.0000
None 0.0000
x**2/2 + x + 1 0.5000
x*(x**(3/2) + x) 0.0000
(3 - 3*x)*exp(x) 0.0000
x**3/3 + sin(x) 0.5996
-cos(x) 0.4998
None 0.0000
x*sin(x + 2) 0.4998
x**3 + x**2 + 2*x + cos(x) 0.9885
x/2 0.4999
2*x + sin(x + 3) 0.4999
None 0.0000
sqrt(2)*x**2/5 0.4999
x**5 + atan(x) 0.0001
x*(9*x + sin(x)) 0.5002
565*x 0.5196
None 0.0000
8/x 0.4998
x 0.4999
2*x + 2/x 0.4999
x*acosh(x) - x 0.0000
x/25 0.4998
x**3 0.9772
3*sinh(x) 0.0000
4*x + 3 0.5000
None 0.0000
acosh(x + 3) 0.0000
None 0.0000
x*(x + exp(acosh(x))) 0.0000
x + cos(x)/x 0.4999
2*x*atan(3) 0.4999
6*x/5 0.4999
-x/3 0.4998
3*x**5/5 + x**4/2 0.0002
x**2*sin(2) 0.5000
None 0.0000
(x - 4)/x 0.4998
3*x + 8 0.4999
x**2/10 0.4999
17*sqrt(x**5)/5 0.0000
None 0.0000
None 0.0000
None 0.0000
7*x**2 + x 0.5004
2*x**3 + 3*x 0.5004
cos(x + 4) 0.4998
exp(2*x) 0.0000
x*log(3) + 2*x 0.4999
3/x 0.4998
sinh(x + 1) 0.0000
x*(x + sin(x)) 0.5000
x*(5 - x) 0.4998
-x + exp(3*x) 0.0000
2*x/(x + 2) 0.4998
x*(x*sin(x) + 4) 0.4991
2*tan(x) 0.4998
x*(3*x + 6) 0.5005
x*(x + sin(x) + cos(x)) 0.5000
None 0.0000
2*x + 1/x 0.4999
2*x + 2*log(x**2) 0.4999
x*(x + acos(x)) 0.0000
x**2*(1 - x) 0.3334
None 0.0000
-2*x**2 + x 0.4994
tanh(5*x/2) 0.4998
None 0.0000
None 0.0000
2*x**3/9 0.5622
x*(2*x + 2) 0.5002
x/4 0.4998
None 0.0000
None 0.0000
sin(x + 3) 0.4998
None 0.0000
5/(13*x) 0.4998
x**2 + x*cos(2) 0.5000
None 0.0000
x**3 + x + cos(x) 0.9772
x**2*(x + exp(x)) 0.0000
sin(x + 3) 0.4998
2/(x + 4) 0.4998
sin(x + 2) 0.4998
None 0.0000
None 0.0000
x*(x + 1) 0.5000
4*x**3/3 0.7504
3*x**2/2 0.5001
x*(x + sin(x)) 0.5000
None 0.0000
cosh(2*x)/2 0.0000
(4*x + 3)/x 0.4998
4*sin(x) 0.4998
x/8 0.4998
4*sqrt(2)*x**2/3 0.5001
-x**2/2 + x 0.4998
4*log(x) 0.0000
-4/x 0.4998
x*log(2*x**2) 0.5002
x**3/19 0.5133
sin(x) - cos(x) 0.4998
-2/x 0.4998
-cos(x) 0.4998
(x + sin(x))**cos(x) 0.0000
None 0.0000
2*x*(x + 6) 0.5006
2*x*(x + 2) 0.5003
None 0.0000
1/(5*x) 0.4998
x**2 - x 0.5000
x + cos(x + 3) 0.4999
2*x**2*sin(x) 0.4981
x*(-x**2/2 + x) 0.4001
None 0.0000
-atan(x) 0.4998
x/3 0.4998
x**3/3 + 2*x**2 0.6001
3*x + 5 0.4999
x + 5*sin(x) 0.4999
None 0.0000
3*x + atan(x) 0.4999
x*(x + cos(1)) 0.5000
-12*x**2 + exp(x) 0.0000
1/(10*x**2) 0.4998
cos(2*x) 0.4998
-x**3/3 - sin(x) 0.4285
26*x**5/5 0.0000
x**2 + x*(x + 4) 0.5003
None 0.0000
None 0.0000
x*(x + 5) 0.5002
None 0.0000
None 0.0000
x*(x - 1/x) 0.5000
x - sin(x) 0.4999
3*x + 6 0.4999
acosh(x + 5) 0.0000
None 0.0000
2*x + atan(x) 0.4999
None 0.0000
-x**2 + 2*x 0.4997
x**10/12 0.0000
2*tan(2*x) 0.4998
None 0.0000
None 0.0000
sin(x + 2) 0.4998
6*x**2 + 3*x 0.5005
x**3/3 + 5*x**2/2 0.6002
4*x**2 + 2*x 0.5004
x/sin(x) 0.4999
6/x 0.4998
atanh(x + 3) 0.0000
None 0.0000
2*x + x*sinh(2) 0.5000
3*x**3*cos(x) 0.3345
1/(5*x) 0.4998
tan(x) + acosh(x) 0.0000
-sinh(x) 0.0000
None 0.0000
x**2 + x + 1/x 0.5000
cos(x + 3) 0.4998
None 0.0000
cos(x + 5) 0.4998
9*x/2 0.5000
2*sqrt(2)*x 0.4999
-log(x)/x 0.0000
None 0.0000
2*x + sin(x) 0.4999
sin(x)/2 0.4998
3*x + sin(x) 0.4999
acos(x + 1) 0.0000
2*sin(x) 0.4998
x*(x + 6) + x 0.5002
x**3 + atan(x) 0.9772
x + sin(x) + 5 0.4999
2*x + sin(x) 0.4999
5*x**3/3 0.6005
<lambdifygenerated-3964>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*(x + 5)**(3/2)
<lambdifygenerated-3977>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2)
<lambdifygenerated-3979>:2: RuntimeWarning: divide by zero encountered in log
  return -x**2 + (1/2)*log(x + 1)
<lambdifygenerated-3979>:2: RuntimeWarning: invalid value encountered in log
  return -x**2 + (1/2)*log(x + 1)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/numpy/core/_methods.py:181: RuntimeWarning: overflow encountered in reduce
  ret = umr_sum(arr, axis, dtype, out, keepdims, where=where)
<lambdifygenerated-3995>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x**2 + x)
<lambdifygenerated-4001>:2: RuntimeWarning: invalid value encountered in power
  return x**(5/6)
<lambdifygenerated-4013>:2: RuntimeWarning: invalid value encountered in log
  return -x + log(x) - cos(x)
<lambdifygenerated-4014>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + cos(x)
<lambdifygenerated-4019>:2: RuntimeWarning: invalid value encountered in power
  return x*(x**(3/2) + x)
<lambdifygenerated-4034>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x) - x
<lambdifygenerated-4039>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 3)
<lambdifygenerated-4040>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*(x + exp(arccosh(x)))
<lambdifygenerated-4050>:2: RuntimeWarning: invalid value encountered in sqrt
  return (17/5)*sqrt(x**5)
<lambdifygenerated-4068>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(x + arccos(x))
<lambdifygenerated-4093>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-4100>:2: RuntimeWarning: invalid value encountered in power
  return (x + sin(x))**cos(x)
<lambdifygenerated-4125>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 5)
<lambdifygenerated-4136>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 3)
<lambdifygenerated-4140>:2: RuntimeWarning: invalid value encountered in arccosh
  return tan(x) + arccosh(x)
<lambdifygenerated-4147>:2: RuntimeWarning: invalid value encountered in log
  return -log(x)/x
<lambdifygenerated-4151>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(x + 1)
mean: 0.33232688903808594
top: 0.9884904623031616
Saving results...
Working with expression:  math.sin(math.sin(x[0]))
Error in expression:  math.sin(math.sin(x[0]))
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x**2*sin(4)/2 0.4998
-x + log(cos(x)) + 2*cos(x) 0.0000
x*(x**3 + x**2 + x) 0.0111
None 0.0000
2*x**3 + sin(x) 0.5005
None 0.0000
x**3 - x*cos(x) + cos(x) 0.9772
2*x**(3/2)/3 + 4*x 0.0000
x**2/6 0.4999
x**3/5 0.5553
None 0.0000
2*asin(x) 0.0000
None 0.0000
3*x**2/2 + 3*x 0.5002
None 0.0000
sqrt(2)*x**2 0.5001
75*x 0.5024
1/sin(x) 0.4998
None 0.0000
x + tan(x + 1) 0.4999
2*x + log(x)**3/3 0.0000
25/x**3 0.4998
x**2/2 + x + 6*cos(x) 0.5000
x**3/3 - x**2/2 0.5994
x + cos(x) + 2 0.4999
2*x**2*(x + 5) 0.4982
None 0.0000
None 0.0000
acosh(x + 5) 0.0000
None 0.0000
x*(x**2 + x + 1/x) + x 0.9885
x*(x + 1/x) + x 0.5000
x + (x + 4)*exp(x) 0.0000
None 0.0000
sin(x) 0.4998
log(2*x**3) 0.0000
2*x*atan(x) 0.4998
x**3 + 2*x 0.9773
2*x/(x + 3) 0.4998
None 0.0000
3*x + 3 0.4999
None 0.0000
x**3*exp(x)/3 0.0000
x*(x + 6) 0.5002
None 0.0000
5*x*sin(1)/2 0.4999
x/25 0.4998
None 0.0000
x*exp(-x) 0.0000
cos(x) 0.4998
2*x + cos(x) 0.4999
5*x + 4 0.5000
x*cos(3) + x 0.4998
None 0.0000
62/x 0.4998
2*x**2 + cos(x) 0.5001
2*x*cos(2)**sin(3) + 1/2 0.0000
2/sin(x) 0.4998
x**6/6 + x**4 + 5*x**2 - x 0.0000
2*x + tanh(x) 0.4999
sin(x) + cos(x) 0.4998
x/4 0.4998
None 0.0000
None 0.0000
-x**2/2 + x 0.4998
x**3/3 + 3*x 0.5998
x**2 - 6 0.5000
-2*x**2 + x 0.4994
-sin(x) + cos(x) 0.4998
8/x 0.4998
-tan(x) 0.4998
x**3*sin(3) 0.5377
x**2/2 + 8*x 0.5002
None 0.0000
x + cos(x) + 1 0.4999
x**3/3 0.5996
None 0.0000
x - acos(x) 0.0000
sin(x + 4) 0.4998
2*x**3/3 0.7490
6*x + 5 0.5000
None 0.0000
2/3 0.0000
3*x**2/2 + x + 6*asinh(x) 0.5001
sin(x) 0.4998
2*x + 3 0.4999
None 0.0000
None 0.0000
None 0.0000
-x**2 + 3*x 0.4997
9*x/2 0.5000
-1/x 0.4998
None 0.0000
x*(x + cos(3)) 0.5000
x*sin(x) + 2*x 0.4999
None 0.0000
x*(3*x + 5) 0.5004
2*x*(2*x + tan(x)) 0.5004
None 0.0000
x/16 0.4998
3*sin(3*x) 0.4998
2*x**2 + x 0.5002
3*x/25 0.4998
-x**4/4 + x**3/3 0.0430
x*sin(x + 4) 0.4998
4*log(cos(x)) 0.0000
sin(x + 5) 0.4998
2*x*exp(3) 0.5012
2*x + acosh(x) 0.0000
3*sqrt(x) + x 0.0000
615*x**3 0.0016
x**2*log(sqrt(x))/2 + 3*x/2 0.0000
None 0.0000
x*(3*x + 6) 0.5005
None 0.0000
x**3/3 + x*cos(2) + 5*x 0.5998
None 0.0000
x*atanh(2*x) 0.0000
9*x**3/2 + 3*x 0.2224
3*x + asinh(x) 0.4999
x**2/2 - 2*x 0.4999
x**2*sin(2) 0.5000
x**2 + 4*x 0.5001
None 0.0000
None 0.0000
2*x*sin(2) 0.4999
5 - x 0.4998
exp(x) + sin(x) 0.0000
2*x*(x + 4) 0.5004
2*x + 1/(x + 4) 0.4999
x*(3*x + 3) 0.5004
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x + 37 0.4999
x + cos(x/2) 0.4999
32*x**3 0.0313
x/3 0.4998
sqrt(x) - x**2 + x 0.0000
2*sqrt(x) + x 0.0000
sin(2*x)**2/2 + cosh(2*x) 0.0000
2*x**3 0.5005
x*(3*x + 3) 0.5004
None 0.0000
sinh(3*x) 0.0000
x**2/8 0.4999
None 0.0000
x**3*sin(3) 0.5377
x**3/3 + x*atan(x) + 2*x 0.5997
x**2/2 + 5*x 0.5001
8/x 0.4998
-1/(2*x**2) 0.4998
x**3/3 + 2*x 0.5997
sinh(x + 1) 0.0000
cosh(x + 2) 0.0000
x + cos(acosh(x)) 0.0000
None 0.0000
-x*tan(x - 1) 0.4998
None 0.0000
4*x**2 + exp(x) 0.0000
x*(x + 1) - x 0.5000
sin(2*x) 0.4998
None 0.0000
tan(x/2) 0.4998
5 - x 0.4998
None 0.0000
3*x + cos(x) 0.4999
None 0.0000
2*x*exp(x + 3) 0.0000
None 0.0000
2*x**(5/2)/5 + 2*x 0.0000
4*x + 4 0.5000
None 0.0000
None 0.0000
x**2/2 + x 0.5000
2/x 0.4998
exp(2*x)*tan(2*x) 0.0000
exp(x/2) 0.0000
None 0.0000
x*(x + cos(3)) 0.5000
x + 3 0.4999
2*x*sin(5) 0.4998
tanh(x**3) 0.4998
None 0.0000
None 0.0000
None 0.0000
2*x**2 0.5001
5 - x 0.4998
24*x 0.5007
-x**3 0.3334
sin(x + 2) 0.4998
None 0.0000
None 0.0000
cosh(1)/x 0.4998
x + x*exp(3) 0.5006
None 0.0000
3*atanh(x) 0.0000
3*x + log(x) 0.0000
4*x*(x + 2) 0.5006
2*x 0.4999
x**5/5 + 8*x**2 0.0006
x**2 + 5*x 0.5002
None 0.0000
None 0.0000
-x**2/2 + pi*x 0.4998
x*cos(3) 0.4998
x**3 - x 0.9772
None 0.0000
x + tan(x + 4) 0.4999
-x**2 + 2*x 0.4997
None 0.0000
None 0.0000
(2 - x)/x 0.4998
3*x**2*asinh(x) 0.5484
None 0.0000
sin(2*x) 0.4998
6 0.0000
6*x**5/5 0.0001
atan(x) - exp(-x) 0.0000
(x + 3)/x 0.4998
tan(x + 2) 0.4998
None 0.0000
-cos(x + 1) 0.4998
x**2/2 + sin(x) 0.4999
None 0.0000
3*x/2 0.4999
None 0.0000
x*(4 - x) + x 0.4998
x**2 0.5000
x*(x + 4) 0.5001
2*x**2/3 0.5000
3*x + 3/2 0.4999
x**2 + cos(x) 0.5000
x/sin(10*x) 0.4960
x**2 + x + 1 0.5000
-x**2 + cosh(x) 0.0000
None 0.0000
-x + tan(x) 0.4998
x + cos(x) + 1 0.4999
2*x + tan(2) 0.4999
None 0.0000
x**2/2 + exp(x) 0.0000
1/(4*x + 4) 0.0000
x/(x + cosh(x)) 0.4998
None 0.0000
x**3 + 2*x 0.9773
5*x**3/3 + 3*x**2 0.6001
sin(x + 2) 0.4998
5*sin(x) 0.4998
3*x**2/2 + 6*x 0.5003
tan(x + 5) 0.4998
x + cos(3) 0.4999
x**2 + 4*x 0.5001
2*x + 4 0.4999
None 0.0000
<lambdifygenerated-4159>:2: RuntimeWarning: invalid value encountered in log
  return -x + log(cos(x)) + 2*cos(x)
<lambdifygenerated-4163>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + 4*x
<lambdifygenerated-4166>:2: RuntimeWarning: invalid value encountered in arcsin
  return 2*arcsin(x)
<lambdifygenerated-4172>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + (1/3)*log(x)**3
<lambdifygenerated-4178>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 5)
<lambdifygenerated-4183>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x**3)
<lambdifygenerated-4199>:2: RuntimeWarning: invalid value encountered in scalar power
  return 2*x*cos(2)**sin(3) + 1/2
<lambdifygenerated-4216>:2: RuntimeWarning: invalid value encountered in arccos
  return x - arccos(x)
<lambdifygenerated-4237>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(cos(x))
<lambdifygenerated-4240>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*x + arccosh(x)
<lambdifygenerated-4241>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3*sqrt(x) + x
<lambdifygenerated-4243>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/2)*x**2*log(sqrt(x)) + (3/2)*x
<lambdifygenerated-4246>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(2*x)
<lambdifygenerated-4262>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - x**2 + x
<lambdifygenerated-4263>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x) + x
<lambdifygenerated-4277>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + cos(arccosh(x))
<lambdifygenerated-4286>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + 2*x
<lambdifygenerated-4303>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 3*arctanh(x)
<lambdifygenerated-4303>:2: RuntimeWarning: invalid value encountered in arctanh
  return 3*arctanh(x)
<lambdifygenerated-4304>:2: RuntimeWarning: invalid value encountered in log
  return 3*x + log(x)
<lambdifygenerated-4338>:2: RuntimeWarning: divide by zero encountered in power
  return (4*x + 4)**(-1.0)
mean: 0.2994522452354431
top: 0.9884876012802124
Saving results...
Working with expression:  math.exp(-x[0]**2)
Error in expression:  math.exp(-x[0]**2)
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
5*x**3/3 + 5*x 0.6003
None 0.0000
sin(x)**3 0.4998
-x*cos(1) + x 0.4999
None 0.0000
x*asinh(x)**2 0.5007
sin(5) 0.0000
None 0.0000
x*(2*x + 3) 0.5003
2*x + 1 0.4999
sqrt(2)/3 0.0000
3*x**2*cos(x) 0.5010
x**2*sin(1) 0.5000
25*x 0.5007
2*x + sin(4) 0.4999
9*x + 2 0.5001
7*x**2/2 0.5003
None 0.0000
sin(x + 5) 0.4998
x**3/6 + x**2 + x/3 0.5454
2 - x 0.4998
None 0.0000
x/(x - 2) 0.0000
x 0.4999
2*x + tanh(x) 0.4999
2*x + sin(1) 0.4999
5*x**2 0.5004
x/(1 - x) 0.4998
3*x**2 + 4*x 0.5004
cosh(x + 5) 0.0000
x*(x + 1) + x 0.5001
None 0.0000
x/(x + 6) 0.0000
x**3/20 0.5126
x**3/166 0.5013
2*x + 4 0.4999
x + 2/x 0.4999
sin(4*x/5) 0.4998
tanh(x + 2) 0.4998
None 0.0000
sqrt(3)*x**2 0.5001
None 0.0000
None 0.0000
x**2/26 0.4998
exp(2*x + 5) 0.0000
None 0.0000
-cos(4*x**2)/4 0.4998
x*(x + 1) 0.5000
atan(2*x) 0.4998
2*log(3*x) 0.0000
x**2/2 + x 0.5000
x**2 + cos(2) 0.5000
3*cos(x)/x**3 0.4998
x**2*(x + 5) 0.9663
x*(x + 1/x) 0.5000
x**3/3 + 3*x**2/2 0.6000
None 0.0000
None 0.0000
exp(x) 0.0000
sqrt(5 - x) 0.0000
sin(sqrt(x)) 0.0000
x*(6 - x) 0.4998
None 0.0000
-cos(x/2) 0.4998
None 0.0000
None 0.0000
tan(x + 1) 0.4998
x*(x**2 + x) 0.9885
-9/(2*x**3) 0.4998
None 0.0000
4*x 0.5000
-3*cos(x) + cosh(x) 0.0000
None 0.0000
-2*x**5 + 4*x 0.0006
None 0.0000
x*log(x**3) 0.0000
tan(x + 2) 0.4998
3*x + tan(x) 0.4999
x**4*(-x - 1) 0.0000
sin(x + 2) 0.4998
None 0.0000
x**2 + 4*x 0.5001
cos(3*x/2) 0.4998
2/(5*x) 0.4998
None 0.0000
cos(x + 6) 0.4998
x**2*tan(1) 0.5001
x**2 + 2*x 0.5001
4*x**5/5 + 3*x**2 0.0002
x**2 + 1/(x + 3) 0.5000
3*x**3*exp(x) 0.0000
2*x + 4 0.4999
4*x + 5 0.5000
2*x**2 + 3*x 0.5003
sinh(x + 3) 0.0000
None 0.0000
None 0.0000
exp(x + 3) 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x + tan(3) 0.4999
2*sqrt(2)*x**(3/2)/3 0.0000
None 0.0000
2*sinh(x) 0.0000
5*sqrt(x) + x**2/2 0.0000
x**3/16 0.5159
None 0.0000
x**2*(2*x + 1) 0.5004
exp(x + 2) 0.0000
3 - x 0.4998
x**3/32 0.5078
44*x**3/3 0.0682
None 0.0000
x*(1 - x) + x 0.4997
sin(x + 2) 0.4998
x**2*sin(2)/2 0.4999
x*tan(2) 0.4998
None 0.0000
9/x 0.4998
None 0.0000
x**3/3 0.5996
tanh(x + 2) 0.4998
x*(x**3 + x) 0.0111
5*sin(x) 0.4998
2*x**2 + 2 0.5001
5*x + exp(x) 0.0000
x*(x**2 + 2) 0.9773
x**9/2 0.0000
x**2 + x - 2 0.5000
3*x + 4 0.4999
2*sqrt(3)*x 0.5000
(2*x + 8)/x 0.4998
x*(2*x**2 + 5*x) 0.4998
x*exp(x - 1) 0.0000
x/atan(3) 0.4999
None 0.0000
3*x**4/4 + 2*x**2 + x 0.0148
zoo 0.0000
3*x + 5 0.4999
x*(5 + 1/x) 0.5000
None 0.0000
None 0.0000
x*exp(2*x) 0.0000
1/tan(x) 0.4998
None 0.0000
x**3*log(2)/3 0.5650
x**2 + 2*x 0.5001
x**2/4 0.4999
None 0.0000
1/(2*x) 0.4998
None 0.0000
64*x**2 0.4529
log(cos(2*x))/2 0.0000
None 0.0000
cos(x) - 1 0.4998
sin(asinh(x)) 0.4998
x + 8 0.4999
None 0.0000
2 - x 0.4998
x**3/16 0.5159
x*(x + 1) 0.5000
sin(5*x) 0.4998
x**3 + x + cos(x) 0.9772
3*x**2/2 0.5001
cos(x + 3) 0.4998
x**2 + x*sin(x + 2) 0.5000
x**3/5 - log(x + 3)/15 0.0000
x/5 0.4998
4*x**3*exp(x) 0.0000
x**2 + 5*x 0.5002
7*x**2 + 3*x 0.5004
x**2/10 0.4999
x**4/36 0.2777
None 0.0000
1/6 0.0000
sqrt(x) + 2*x 0.0000
x**2/128 0.4998
None 0.0000
None 0.0000
x**2 + x + 1 0.5000
5 - x 0.4998
2*x/(x + 2) 0.4998
x + cos(log(x)) 0.0000
x**2/18 0.4998
3*x - 4*sin(x) 0.4999
x + cos(x + 1) 0.4999
8/x 0.4998
34/x**2 0.4998
1/12 0.0000
x*(x**3/3 + x) 0.0327
2*x + exp(-x) 0.0000
2*x + 1/2 0.4999
-x**2 0.4996
x**2/2 + x 0.5000
None 0.0000
3*x 0.4999
x**2 - x 0.5000
x**2 + 4 0.5000
3*x - cos(x) 0.4999
None 0.0000
None 0.0000
None 0.0000
x + cos(x - 3) 0.4999
x**3/3 + x**2/2 0.5998
3*log(x) 0.0000
5*x**2/2 + 2*atanh(x) 0.0000
2*x + 3 0.4999
4*x*sin(x) 0.4999
x**3/9 0.5292
cos(3*x) 0.4998
-x**2/2 + cos(x) 0.4997
3*x + 5 0.4999
1/(x + 4) 0.4998
None 0.0000
x/(x + 3) 0.4998
sin(x) 0.4998
x + log(x) + cos(x) 0.0000
x*log(4*x**2) - 4*x 0.5000
tanh(x + 2) 0.4998
3*x**2/2 0.5001
asinh(x + 2) 0.4998
None 0.0000
2*x**3/3 0.7490
2*x**3/3 - x**2/2 0.7486
38/x 0.4998
4*x**3/3 + 2*x**2 0.7503
5*x**4/36 0.0752
3*x**2 - 3*x 0.5002
2*x*(x + 2) + x 0.5003
x + tan(1) 0.4999
None 0.0000
x/(tan(x) + 3) 0.4998
-x**2 0.4996
x*(x**3 + 3*x) 0.0111
sqrt(2)*x**2/5 0.4999
x**2/2 + x 0.5000
x**2*(2 - x) 0.3335
x*(x + sin(1)) 0.5000
None 0.0000
x/5 0.4998
x**3 + 5*x 0.9773
None 0.0000
2/sin(x) 0.4998
None 0.0000
2/(13*x**2) 0.4998
5/x**2 0.4998
x**5/5 + sin(x) 0.0006
None 0.0000
x/(x + cos(2))**5 0.4998
None 0.0000
5*x**3/16 0.5922
None 0.0000
2*x**3 + x 0.5004
sqrt(x) + acosh(x) 0.0000
1/(4*(x + 5)) 0.4998
<lambdifygenerated-4366>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x - 2)
<lambdifygenerated-4375>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 6)
<lambdifygenerated-4388>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(3*x)
<lambdifygenerated-4396>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(5 - x)
<lambdifygenerated-4397>:2: RuntimeWarning: invalid value encountered in sqrt
  return sin(sqrt(x))
<lambdifygenerated-4406>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**3)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-4426>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*sqrt(2)*x**(3/2)
<lambdifygenerated-4428>:2: RuntimeWarning: invalid value encountered in sqrt
  return 5*sqrt(x) + (1/2)*x**2
<lambdifygenerated-4465>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(cos(2*x))
<lambdifygenerated-4477>:2: RuntimeWarning: invalid value encountered in log
  return (1/5)*x**3 - 1/15*log(x + 3)
<lambdifygenerated-4485>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 2*x
<lambdifygenerated-4490>:2: RuntimeWarning: invalid value encountered in log
  return x + cos(log(x))
<lambdifygenerated-4508>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(x)
<lambdifygenerated-4509>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (5/2)*x**2 + 2*arctanh(x)
<lambdifygenerated-4509>:2: RuntimeWarning: invalid value encountered in arctanh
  return (5/2)*x**2 + 2*arctanh(x)
<lambdifygenerated-4519>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + cos(x)
<lambdifygenerated-4548>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arccosh(x)
<lambdifygenerated-4548>:2: RuntimeWarning: invalid value encountered in arccosh
  return sqrt(x) + arccosh(x)
mean: 0.31871867179870605
top: 0.9884793758392334
Saving results...
Working with expression:  1 / (1 + math.exp(-x[0]))
Error in expression:  1 / (1 + math.exp(-x[0]))
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x*(x + 2)**2 + x 0.9773
-cos(x) 0.4998
x**3 + 3*x 0.9773
x**2 + 5*x 0.5002
x*(x + sin(2)) 0.5000
x**2 + 3*x 0.5001
3*x + cos(x) 0.4999
None 0.0000
3*x**5 0.0005
None 0.0000
5*x**3/3 + 3*x 0.6004
x**2 + log(x) 0.0000
x**2 + 2 0.5000
2*Abs(x) + 2 0.4998
None 0.0000
x + 2/x 0.4999
-5*x**2 + 5*x 0.4986
x*(x**2 + x + 1/x) 0.9885
None 0.0000
x/25 0.4998
2*x + 1 0.4999
None 0.0000
None 0.0000
x/sin(1) 0.4999
x*(-x**2 + x + atan(x)) 0.3334
-1/(5*x) 0.4998
3/(x + 2) 0.4998
5*x**7/27 0.0000
None 0.0000
sinh(3*x) 0.0000
2*x + cos(1) 0.4999
3 - x**2 0.4996
2*x + cos(2) 0.4999
atanh(x + 1) 0.0000
x**5 + 3*x 0.0025
35*x*sin(x) 0.5001
x**2 + 5*x 0.5002
None 0.0000
None 0.0000
sin(x)/2 0.4998
x**2*acos(2) 0.0000
x/(x + 1)**2 0.0000
6/(x + 2) 0.4998
4*x**2*tan(1) 0.5004
x**4/4 + x*sin(x) + cos(x) 0.0432
None 0.0000
-2*x**2 + 2*x 0.4995
x**2/20 0.4998
125*x**2 0.3689
acosh(x + 5) 0.0000
tanh(4*x + 1) 0.4998
x/8 0.4998
46*x**3/7 0.1523
x*(3*x + 4) 0.5004
None 0.0000
None 0.0000
x**5 + 2*x**2 0.0025
log(x*tan(2)) 0.0000
None 0.0000
2*x/sin(x) 0.4999
x**2*tan(3) 0.4998
5*x*cos(1) 0.4999
x/(x - 4) 0.4998
2*x + 2 0.4999
2*x + x*exp(2) 0.5002
3*log(3*x) 0.0000
None 0.0000
None 0.0000
x**2*(x + 2) 0.9997
sqrt(2)/(2*x) 0.4998
None 0.0000
x*tan(2) + 1/2 0.4998
2/(5*x**2) 0.4998
2*x + 3 0.4999
1/(x + 5) 0.4998
None 0.0000
x*tan(3) + x 0.4999
3*cos(x)/x 0.4998
x*log(3) 0.4999
4*x*acos(x) 0.0000
tan(x)**3 0.2511
9*x**5/5 + 3*x**2 0.0001
1 0.0000
2*x**2 + 5*x 0.5003
None 0.0000
x + 2 0.4999
x**2 + cos(5) 0.5000
cos(x + 1) 0.4998
3*x**2 0.5003
2*x + tan(x) 0.4999
None 0.0000
None 0.0000
x*(x + 3) 0.5001
-3/x 0.4998
x*cosh(x) - sin(x) + cosh(x)**3 0.0000
2*x + sin(x) 0.4999
x**2/110 0.4998
4*x**5/5 + x**2/2 0.0002
x**2 - x 0.5000
1/log(5) 0.0000
x + 1/2 0.4999
35/x 0.4998
x**2/2 + 4*x 0.5001
2*x*tanh(1) 0.4999
2*x + cos(5) 0.4999
None 0.0000
x*(3 - x) 0.4997
x*(4 - x) 0.4998
None 0.0000
x + 1/(x**2 + x) 0.0000
0 0.0000
3*x**2 + 3*x 0.5004
sin(x**2*cos(1)) 0.4998
None 0.0000
1/(4*x) 0.4998
x/4 0.4998
x**2 + 3 0.5000
x*sin(4) 0.4998
None 0.0000
None 0.0000
None 0.0000
5*log(cos(x)) 0.0000
log(x)/3 0.0000
x**3*sin(x) 0.4803
9*x 0.5001
3*sin(x) 0.4998
None 0.0000
2*x**3/3 + x 0.7491
-1/x 0.4998
x + x*tan(1) 0.4999
log(tan(x)**2 + 4)/4 0.4998
sin(5*x) 0.4998
None 0.0000
123/x 0.4998
x**6/3 0.0000
3*exp(x) 0.0000
x**3 + 7*x 0.9773
None 0.0000
-2*x**2 + 3*x 0.4995
sqrt(x) + 2*x 0.0000
8/x 0.4998
x**2 + cos(x) 0.5000
2*(x + 5)/x 0.4998
x*acos(5) 0.0000
-x**2 + x 0.4997
x**3 + 6*x 0.9773
None 0.0000
x*(x + 4) + x 0.5002
<lambdifygenerated-4559>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + log(x)
<lambdifygenerated-4576>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 1)
<lambdifygenerated-4581>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*arccos(2)
<lambdifygenerated-4582>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 1)**2
<lambdifygenerated-4589>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 5)
<lambdifygenerated-4595>:2: RuntimeWarning: invalid value encountered in log
  return log(x*tan(2))
<lambdifygenerated-4602>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(3*x)
<lambdifygenerated-4612>:2: RuntimeWarning: invalid value encountered in arccos
  return 4*x*arccos(x)
<lambdifygenerated-4637>:2: RuntimeWarning: divide by zero encountered in power
  return x + (x**2 + x)**(-1.0)
8*x**3/3 0.3754
2*x + 1 0.4999
9*x + (x - 3)*exp(x) 0.0000
x/(x + 4) 0.4998
3*x + cos(x) 0.4999
x**2*(2*x + 1) 0.5004
x/2 + sin(x) 0.4999
3/x 0.4998
x*tan(x + 4) 0.4998
tan(x + 5) 0.4998
x*(x + acos(x)) 0.0000
22/x 0.4998
-log(x + 3) 0.0000
None 0.0000
x**2/2 + x 0.5000
x*(log(x) + 2) 0.0000
tanh(x/4) 0.4998
None 0.0000
log(2)*log(x) 0.0000
-2*exp(sqrt(x)) 0.0000
None 0.0000
x**2*sin(3) 0.4999
None 0.0000
x**2/20 0.4998
None 0.0000
1/(8*x) 0.4998
6*x**3 + 3*x 0.1668
x*(x**2 - x) 0.9663
3*x**(3/2) + sin(x) 0.0000
1/(5*x) 0.4998
x*(x + 4) 0.5001
4*x*sin(x) 0.4999
None 0.0000
3*x 0.4999
-x**2 + x + 1 0.4997
x*(x + 3) + x 0.5001
None 0.0000
3*x 0.4999
2*x + 1 0.4999
x*(x - 3) + x 0.4999
-x + cos(x) + tan(x) 0.4998
x**2*sin(4)/4 0.4998
x**2*(x + cos(1)) 0.9833
x**3/32 0.5078
None 0.0000
3*cosh(x) 0.0000
x**2 + 3*x 0.5001
16*x**3 0.0626
1 - x 0.4998
None 0.0000
26*x**5/5 0.0000
2*x + sin(x + 2) 0.4999
64/x 0.4998
x + tan(x) + 1 0.4999
3*x/4 0.4999
None 0.0000
x*(x + 4/x) 0.5000
x**3 + 4*x 0.9773
2*x**2*(x + 2) 0.5000
None 0.0000
None 0.0000
x**2/2 + sin(x) 0.4999
x**2*(x + 3)/2 0.6666
-log(cos(x)) 0.0000
x**3 + 2*x 0.9773
x*(x + 1) + x 0.5001
4*x**2 + 4*x 0.5005
None 0.0000
x**3/3 + 2*x 0.5997
2*x/(x + 1) 0.0000
sqrt(x) + 4*x 0.0000
None 0.0000
None 0.0000
x/2 0.4999
x**5/10 0.0012
x*(x + 2) 0.5001
None 0.0000
7*x**2/2 0.5003
x*tan(4) 0.4999
None 0.0000
2*x**3 0.5005
(x + 2)/x 0.4998
1 - 5*x 0.4997
6*x 0.5000
2*x + log(12) 0.4999
None 0.0000
x**2/2 + 2*x 0.5000
None 0.0000
x*atanh(2) 0.0000
x**4/2 0.0221
2*x**3/3 + 3*x 0.7492
3*x + 4 0.4999
2*x + asinh(x) 0.4999
x**2 + x*tan(1) 0.5001
x*(1 - x) 0.4997
None 0.0000
None 0.0000
-x**3 0.3334
2*E/x**(3/2) 0.0000
x*(x**5 + x + asinh(x)) 0.0000
x**2 - 2*x 0.4999
2*x**3/9 0.5622
None 0.0000
9*x**2 + 3*x 0.5003
x**2 + cosh(x) 0.0000
x + 16 0.4999
x**2*(x**2 + 10) 0.0111
x + 5/x 0.4999
<lambdifygenerated-4645>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(cos(x))
<lambdifygenerated-4646>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*log(x)
<lambdifygenerated-4660>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 2*x
<lambdifygenerated-4664>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(5)
<lambdifygenerated-4678>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(x + arccos(x))
<lambdifygenerated-4680>:2: RuntimeWarning: invalid value encountered in log
  return -log(x + 3)
<lambdifygenerated-4682>:2: RuntimeWarning: invalid value encountered in log
  return x*(log(x) + 2)
<lambdifygenerated-4684>:2: RuntimeWarning: invalid value encountered in log
  return log(2)*log(x)
<lambdifygenerated-4685>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*exp(sqrt(x))
<lambdifygenerated-4691>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**(3/2) + sin(x)
<lambdifygenerated-4719>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
<lambdifygenerated-4724>:2: RuntimeWarning: divide by zero encountered in divide
  return 2*x/(x + 1)
<lambdifygenerated-4725>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + 4*x
<lambdifygenerated-4737>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(2)
<lambdifygenerated-4745>:2: RuntimeWarning: invalid value encountered in power
  return 2*e/x**(3/2)
mean: 0.3235659599304199
top: 0.9997082352638245
Saving results...
Working with expression:  4 * math.exp(-0.2 * x[0]) * math.sin(x[0])
Error in expression:  4 * math.exp(-0.2 * x[0]) * math.sin(x[0])
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
4/x 0.4998
x**7/7 0.0000
x*(x*(x + sin(1)) + x) 0.9981
2/(2*x + 5) 0.4998
None 0.0000
sin(x + 2) 0.4998
26/x 0.4998
x**2 + x*tan(5) 0.4999
3*x - 9 0.4999
log(sin(x)**2) 0.4998
sqrt(5)*sqrt(1/x) 0.0000
2*x*tan(1) 0.4999
None 0.0000
None 0.0000
E*x**2 0.5002
cos(x + 4) 0.4998
x + cos(x**2) 0.4999
x**2 + cos(x) 0.5000
x*log(x) - log(x - 1) 0.0000
cos(x + 6) 0.4998
7/x 0.4998
8*x**2 + x 0.5003
x/(x - 1) 0.4998
x**3 + x + 3 0.9773
x**2/4 0.4999
8*x + sin(x) 0.5001
sqrt(x) - x**2 0.0000
None 0.0000
5*x**2 + x + 2 0.5004
25*x*asinh(x) 0.5001
x**2 + cos(3) 0.5000
x + (x + 2)**2 0.5002
None 0.0000
-x**2 + 5*x 0.4998
tan(x - 2) 0.4998
x*cos(2) + 2*x 0.4999
x*(x + 1)**(5/2) 0.0000
-acos(x)/4 0.0000
3*x**2 - 6*x 0.5001
3*x**2/4 0.5000
x/(tan(x) + 2) 0.5000
None 0.0000
2*x*(x + 1) 0.5002
x*tan(3) + 2*x 0.4999
5 0.0000
None 0.0000
x + sin(x)**2 0.4999
x**2 - 4*x 0.4999
-exp(x) 0.0000
4*log(x) 0.0000
None 0.0000
-x**2/2 + x*log(x**2) - 2*x 0.5000
6*x**2 0.5004
-1/x 0.4998
2*x**2 + x 0.5002
5*x**2 - 5*x 0.5002
x**2*(x + 4) 0.9773
tanh(2*x) 0.4998
x**3*(x + 4) 0.0111
4*x*sin(x) 0.4999
sin(x - 4) 0.4998
None 0.0000
2*x**2 + 2*x 0.5002
x*tan(5) + x 0.4998
5/x 0.4998
2*x + atan(x) 0.4999
x*(2*x + 4) 0.5003
None 0.0000
16*x**3 0.0626
x - sqrt(2)*Abs(x) 0.4999
None 0.0000
x**2 0.5000
None 0.0000
x*log(x) + 3*x 0.0000
None 0.0000
x**3 + 5*x 0.9773
sin(x)**4 0.4998
x**2*sin(5)/2 0.4997
x**2 + 6*x 0.5002
x 0.4999
None 0.0000
x*sin(1) + 2*x 0.4999
x**4/16 0.1521
x**2 + 1 0.5000
x*tanh(2) 0.4999
None 0.0000
2*x**3/3 0.7490
1/(4 - x) 0.4998
x**2/sin(x) + cos(x) 0.4996
1/sin(x) 0.4998
-sin(x + 2) 0.4998
x**6/6 0.0000
None 0.0000
x*sin(2) + x 0.4999
x*sin(x + 2) 0.4998
5*x + 5 0.5000
None 0.0000
3*(x + 2)/x 0.4998
None 0.0000
5*acosh(x) 0.0000
2*x + 4 0.4999
1/sin(x) 0.4998
2*x/(x + 4) 0.4998
x**2/8 0.4999
x**2*(x + 1) 0.9885
sin(x)**5 0.4998
x**2 + x + 3 0.5000
4 - x 0.4998
x**4/4 + 3*x 0.0432
None 0.0000
8*x + 2 0.5001
3*exp(x/3) 0.0000
4*x**2 + 4*x 0.5005
asinh(x + 1) 0.4998
None 0.0000
x + cos(2*x) 0.4999
4 - x 0.4998
None 0.0000
x**2*(x + 4) 0.9773
x*log(x**3) - x 0.0000
5*x*sin(x) 0.4999
x**2*cos(1)/2 0.4999
3*x + asinh(x) 0.4999
x*(x + atan(x)) + x 0.5000
3*x + 5 0.4999
x**2*(2*x + 1) 0.5004
(4*x + 3)**2 0.4993
x + 2/x 0.4999
None 0.0000
None 0.0000
2*cos(2*x) 0.4998
x**2/2 + x*log(3*x**2) - 5*x 0.5001
None 0.0000
5*sin(x) 0.4998
3*x + sin(x) 0.4999
8*x**2 0.5003
cos(3*x)/3 0.4998
x**3/16 + x/2 0.5160
log(x) + 2/3 0.0000
3*x + tanh(x) 0.4999
43*x**3/3 0.0698
1/sqrt(x + 1/2) 0.0000
2*exp(-x) 0.0000
(2 - x)*exp(x) 0.0000
x*cos(1) + x 0.4999
4*x + 3 0.5000
None 0.0000
4*x*sin(x) 0.4999
4*exp(1/x) 0.4998
x**2 - 3*x 0.4999
4*x*(x + 5) 0.5010
x**6 + 4*x 0.0004
acosh(x + 3) 0.0000
x*(x + 3) 0.5001
-sqrt(x) + 3*x 0.0000
2*x**3/3 + 3*x**2 0.7502
(x + 4)/x 0.4998
None 0.0000
sqrt(3)*x**2/4 0.4999
None 0.0000
x*(x + 4) + x 0.5002
tan(2*x) 0.4998
7*x + exp(2) 0.5001
4*x**2 - 2*x 0.5003
x/(2*x + 5) 0.4998
x*(2*x + 3) 0.5003
exp(-2*x)/4 0.0000
x**3/6 0.5452
None 0.0000
x**2/10 0.4999
x*(x + sin(4)) 0.5000
x**3 + x**2 0.9885
x**4/4 0.0432
None 0.0000
None 0.0000
x**2 + 5*x 0.5002
None 0.0000
x - cos(x + 3) 0.4999
5*x + 1 0.5000
(x + 3)/x 0.4998
0 0.0000
None 0.0000
x + tanh(x) 0.4999
1/(x + 5) 0.4998
10*x 0.5002
x**4/20 0.1823
None 0.0000
None 0.0000
3*x + sin(x) 0.4999
3*sqrt(3)*x 0.5000
3*x**2 + 2*x 0.5003
x**2*sin(2) 0.5000
3*x + tan(x) 0.4999
2*x + sin(x) 0.4999
55*x**3/3 0.0546
-x**2/2 + 2*x 0.4998
x**4*sin(5)/4 0.0447
None 0.0000
3*x + tan(x/2) 0.4999
5*x**2 + x 0.5004
Abs(x) 0.4998
x**3 + 2*x 0.9773
None 0.0000
6*x**2 0.5004
x + tan(x + 1) 0.4999
9*x + cos(x) 0.5001
3*sin(tan(x)) 0.4998
None 0.0000
x**5/5 + x**3/16 0.0006
2*x + sin(2*x) 0.4999
tanh(x + 5) 0.4998
3*(x + 1)/x 0.4998
x*(x + atan(x)) + x 0.5000
4*x + 4 0.5000
None 0.0000
None 0.0000
x**2*(x + 3) 0.9885
None 0.0000
6*x**2 + 2*x 0.5004
x + 3 0.4999
8*x + cos(x) 0.5001
x**2 + x*tan(1) 0.5001
2*x**9/9 0.0000
2/x 0.4998
None 0.0000
x*cosh(4) 0.5008
x**4/36 0.2777
4*x**2 + 2*x 0.5004
2*x*log(x) 0.0000
None 0.0000
exp(3*x) 0.0000
None 0.0000
2*x + sin(x) 0.4999
x*(x + 8) 0.5003
2*x - 2*log(x - 1) 0.0000
cos(x + 4) 0.4998
2*x*(x + 3) 0.5004
tanh(3*x) 0.4998
None 0.0000
sin(x)**3 0.4998
6/x 0.4998
x**2/2 + x + tan(x)**3 0.2511
sin(7*x)/7 0.4998
2*cos(x) 0.4998
37/x**2 0.4998
None 0.0000
None 0.0000
cosh(x)**3 0.0000
-1/(8*x**2) 0.4998
x**2*tan(1) 0.5001
None 0.0000
4*x**2 + 6*x 0.5005
x**2 + 2*x 0.5001
None 0.0000
None 0.0000
x*(x + sin(1)) + x 0.5001
<lambdifygenerated-4763>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(5)*sqrt(x**(-1.0))
<lambdifygenerated-4769>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) - log(x - 1)
<lambdifygenerated-4777>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - x**2
<lambdifygenerated-4785>:2: RuntimeWarning: invalid value encountered in power
  return x*(x + 1)**(5/2)
<lambdifygenerated-4786>:2: RuntimeWarning: invalid value encountered in arccos
  return -1/4*arccos(x)
<lambdifygenerated-4796>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-4815>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) + 3*x
<lambdifygenerated-4835>:2: RuntimeWarning: invalid value encountered in arccosh
  return 5*arccosh(x)
<lambdifygenerated-4852>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**3) - x
<lambdifygenerated-4868>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 2/3
<lambdifygenerated-4871>:2: RuntimeWarning: invalid value encountered in sqrt
  return 1/sqrt(x + 1/2)
<lambdifygenerated-4881>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 3)
<lambdifygenerated-4883>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x) + 3*x
<lambdifygenerated-4941>:2: RuntimeWarning: invalid value encountered in log
  return 2*x*log(x)
<lambdifygenerated-4945>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - 2*log(x - 1)
mean: 0.35000309348106384
top: 0.998119592666626
Saving results...