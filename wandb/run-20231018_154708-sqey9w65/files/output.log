/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/trainer/ppo_trainer.py:239: UserWarning: No dataset is provided. Make sure to set config.batch_size to the correct value before training.
  warnings.warn(
Index(['type', 'name', 'expression'], dtype='object')
Working with expression:  4 * x[0]**2 + 2 * x[0] - 5
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x**4 + 2*x 0.0003
None 0.0000
x**2/sin(1) 0.4841
4*x*asinh(x) 0.4128
None 0.0000
2*tan(x) 0.3975
None 0.0000
x**2 - 3*x 0.4678
x*(x - 8) 0.4675
None 0.0000
None 0.0000
2*x + cosh(x) 0.0000
None 0.0000
6*x + 2 0.3976
2*x**2 + 5*x 0.5690
x**(3/2)/4 0.0000
None 0.0000
exp(3*x + 2) 0.0000
x**2 - sin(x) 0.4680
3*x**2*asin(2*x)**2 0.0000
3*x**3 + x*log(x) + x 0.0000
1 0.0000
None 0.0000
None 0.0000
x*(x**3 + x + 5) 0.0003
-x**2/4 + x 0.3831
-2*x**3 + x 0.0151
None 0.0000
5*x**3 + 2*x 0.0061
x**2 + x - 1 0.4680
exp(2*x**2 + 5)/4 0.0000
x/log(3)**2 0.3975
x**9 + 2*x 0.0000
None 0.0000
sqrt(x) + x + 3 0.0000
x**3*atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
1174*x**5 0.0000
None 0.0000
None 0.0000
x**2 + sin(x) 0.4680
None 0.0000
(x + 8)/x 0.3975
x**2/2 + x*log(6*x) - 4*x 0.0000
-5*x**5 0.0000
x - 1/x**2 0.3975
5 - 6*x 0.3973
x**20 + 5*x 0.0000
None 0.0000
sin(4*x)/4 0.3975
5*log(x) 0.0000
2*x*(2*x + 3) 0.9813
x**5/5 - x**3/3 0.0000
x**2 - x + cos(x) 0.4679
None 0.0000
2*x**2*log(x) 0.0000
atanh(2)/(2*x) 0.0000
log(x) - tan(x) 0.0000
asin(x + 5) 0.0000
sqrt(3)*x**(3/2)/3 0.0000
None 0.0000
(x + 5)**2 0.4684
1/(x**2 - x) 0.3975
x*cos(2*x) 0.3975
None 0.0000
x*(x**2 + x) 0.0298
None 0.0000
x*(4 - x) 0.3455
x**2 + x*log(x**2) 0.4681
None 0.0000
5*x**2 + x 0.7251
sqrt(2*x**2 + 2*x + 15) + exp(x) 0.0000
None 0.0000
x**2 + 2*x 0.4680
x**3/8 0.1896
x*acos(3*x) - sqrt(1 - x**2)/3 0.0000
x**4/4 - x - log(cos(x)) 0.0000
x**3*log(4)/3 0.0623
x**3/3 + x**2 0.0844
None 0.0000
x/28 0.3975
2*x**3/3 + 3*x 0.0441
x**2/2 - sinh(x) 0.0000
x**4/12 + x**3/3 0.0041
None 0.0000
None 0.0000
None 0.0000
6*x**3 0.0051
None 0.0000
3*x**2 - 16*x 0.7192
x*exp(-2*x) 0.0000
None 0.0000
(x**2 + x)**3 0.0000
None 0.0000
x**3*log(2) 0.0425
x**3/3 + 9*x**2/2 0.0844
x**2 + x + exp(x) 0.0000
x*atan(2*x) - x - 2*atan(2*x) 0.3986
x*(x**6 + 4*x) 0.0000
x**2 + 2*x + log(x) 0.0000
x**2/sinh(4) 0.3997
2*x**(7/2)/7 - x**2 0.0000
None 0.0000
x**2/2 + 2*log(x) 0.0000
4 - x**2 0.3455
-x**4/4 + 2*x 0.0014
None 0.0000
None 0.0000
x**2*cos(3)/2 + x**2/2 0.3978
None 0.0000
None 0.0000
None 0.0000
1/(23*x) 0.3975
12*(x + 3)**2 0.2460
x**2/2 - x - exp(x) 0.0000
sqrt(x) - log(x) 0.0000
x*atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x + tan(1) 0.3975
-x**3 - 4*x 0.0297
2*x**2 + 8*x 0.5690
None 0.0000
x + 3 0.3975
None 0.0000
sin(3*x) 0.3975
sqrt(3)*sqrt(x)*acos(x) 0.0000
x**3/36 0.3666
None 0.0000
None 0.0000
2*x**3/3 + 5*x**2/2 0.0441
None 0.0000
2*x**(5/2)/5 + 4*x 0.0000
-x*cos(x) + x 0.3974
None 0.0000
2*x**2*tan(x) + x 0.1131
sqrt(3)*sqrt(x) + x 0.0000
None 0.0000
None 0.0000
x**2 + log(x) 0.0000
None 0.0000
x*log(x**5) 0.0000
sin(x)/cos(x) 0.3975
None 0.0000
None 0.0000
None 0.0000
2*x**3/3 + x**2 0.0441
-x**3 + 10*x 0.0298
x**2*exp(2*x)/2 + exp(2*x)/2 0.0000
None 0.0000
3*x**2/2 + 2*x 0.5136
-1/(4*log(x)**2) 0.0000
6*log(x) 0.0000
x + sin(5) 0.3975
-x**2/2 + x*log(x) + x 0.0000
2*x**3/3 + 9*x**2/2 0.0441
None 0.0000
None 0.0000
x**2/2 + x/4 0.4299
4*x**2*exp(2*x) 0.0000
2*x**3/3 0.0441
-x*exp(x) + sin(x) 0.0000
-3*x + 3*cos(x) 0.3974
(x + 1)*(3*x + 5) 0.7253
0 0.0000
None 0.0000
x**5 + x + exp(x) 0.0000
x**4/64 0.0224
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x + acosh(sqrt(x)) 0.0000
x*tanh(2*x) + x - log(tanh(2*x) + 1)/2 0.0000
None 0.0000
(x**2 - x)**2 0.0003
9*log(x) 0.0000
x**3*(x + 2) 0.0003
x + tan(x + 2) 0.3975
None 0.0000
x**3/(3*sin(1)) 0.0719
x*(exp(x) + 4) 0.0000
x**3*(x**2 + x) 0.0000
None 0.0000
None 0.0000
x**2 + 2*x 0.4680
x**6/6 + x**2/2 0.0000
(x + 2)*log(x) 0.0000
3*x**2*cosh(x) + 3*x*sinh(x) - 3*cosh(x) 0.0000
(x**2 + x)/x 0.3975
x**2/2 + x*sin(x) - cos(x) 0.4296
12*x**2 - x + 5*log(x + 5) 0.0000
x*(x + atan(2*x))**3 0.0003
None 0.0000
2*x - 4 0.3975
None 0.0000
2*x**(5/2)/5 + 2*x**3/3 + exp(x) 0.0000
None 0.0000
None 0.0000
(x + sin(x))/x 0.3975
x*tan(1) 0.3975
x**2 - log(cos(x)) 0.0000
x**2*log(x) + x 0.0000
4*x**(5/2) 0.0000
None 0.0000
exp(2*x**2)/4 0.0000
2*x + 10/x 0.3975
x**2 0.4680
x**2 + sin(x) 0.4680
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
9*x/5 0.3975
x**2 + x*log(x) + 2*x 0.0000
x**3/(x + 3) 0.4679
x**2*cosh(1) 0.5178
x**2/5 0.4098
x**3/3 - x**2*log(x)/2 + x 0.0000
x**6/6 + 3*x**5/5 0.0000
x/(x**2 + 2) 0.3975
x*tan(4) 0.3975
cosh(x + 1) 0.0000
x**2/2 + log(2*x + 1) 0.0000
x**4/4 - x**2/2 0.0014
log(2*x)/x 0.0000
x**2/2 + x*tan(1) 0.4299
x**2/2 + x*sin(1) 0.4299
x**2*sinh(1)/2 0.4361
cosh(x + 5) 0.0000
None 0.0000
2*x - 2 0.3975
None 0.0000
(x**2 + 2*x)**3 0.0000
2*x**2*atanh(x) 0.0000
x**5/5 + 5*x**2/2 0.0000
None 0.0000
-x*atanh(x) + log(x + 1) - atanh(x) 0.0000
x*(exp(x) + 2) 0.0000
x/(x**2 + 1) 0.3975
None 0.0000
x**5/5 + 7*x**4/4 0.0000
2*x*log(x**2) - 2*x 0.3976
pi*x**2/2 0.5207
2*x**(5/2)/5 0.0000
x**2/sin(x) + x 0.2575
2*x*(x - 2) 0.5685
(x**2 - x)**2 0.0003
x*atan(x) + log(x**2 + 1)/2 - atan(x) 0.3987
x**3/3 + 5*x**2/2 0.0845
None 0.0000
<lambdifygenerated-10>:2: RuntimeWarning: invalid value encountered in power
  return (1/4)*x**(3/2)
<lambdifygenerated-13>:2: RuntimeWarning: invalid value encountered in arcsin
  return 3*x**2*arcsin(2*x)**2
<lambdifygenerated-14>:2: RuntimeWarning: invalid value encountered in log
  return 3*x**3 + x*log(x) + x
<lambdifygenerated-21>:2: RuntimeWarning: overflow encountered in exp
  return (1/4)*exp(2*x**2 + 5)
<lambdifygenerated-24>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + 3
<lambdifygenerated-25>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x**3*arctanh(x)
<lambdifygenerated-25>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**3*arctanh(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-29>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x*log(6*x) - 4*x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-35>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)
<lambdifygenerated-39>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2*log(x)
<lambdifygenerated-40>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*arctanh(2)/x
<lambdifygenerated-41>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - tan(x)
<lambdifygenerated-42>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 5)
<lambdifygenerated-43>:2: RuntimeWarning: invalid value encountered in power
  return (1/3)*sqrt(3)*x**(3/2)
<lambdifygenerated-54>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(3*x) - 1/3*sqrt(1 - x**2)
<lambdifygenerated-54>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccos(3*x) - 1/3*sqrt(1 - x**2)
<lambdifygenerated-55>:2: RuntimeWarning: invalid value encountered in log
  return (1/4)*x**4 - x - log(cos(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-71>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + 2*x + log(x)
<lambdifygenerated-73>:2: RuntimeWarning: invalid value encountered in power
  return (2/7)*x**(7/2) - x**2
<lambdifygenerated-74>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + 2*log(x)
<lambdifygenerated-81>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - log(x)
<lambdifygenerated-81>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) - log(x)
<lambdifygenerated-82>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-82>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-88>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(3)*sqrt(x)*arccos(x)
<lambdifygenerated-88>:2: RuntimeWarning: invalid value encountered in arccos
  return sqrt(3)*sqrt(x)*arccos(x)
<lambdifygenerated-91>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + 4*x
<lambdifygenerated-94>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(3)*sqrt(x) + x
<lambdifygenerated-95>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + log(x)
<lambdifygenerated-96>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**5)
<lambdifygenerated-102>:2: RuntimeWarning: invalid value encountered in log
  return -(1/4)/log(x)**2
<lambdifygenerated-103>:2: RuntimeWarning: invalid value encountered in log
  return 6*log(x)
<lambdifygenerated-105>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 + x*log(x) + x
<lambdifygenerated-116>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + arccosh(sqrt(x))
<lambdifygenerated-117>:2: RuntimeWarning: divide by zero encountered in log
  return x*tanh(2*x) + x - 1/2*log(tanh(2*x) + 1)
<lambdifygenerated-119>:2: RuntimeWarning: invalid value encountered in log
  return 9*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-127>:2: RuntimeWarning: invalid value encountered in log
  return (x + 2)*log(x)
<lambdifygenerated-131>:2: RuntimeWarning: invalid value encountered in log
  return 12*x**2 - x + 5*log(x + 5)
<lambdifygenerated-134>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + (2/3)*x**3 + exp(x)
<lambdifygenerated-137>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - log(cos(x))
<lambdifygenerated-138>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x) + x
<lambdifygenerated-139>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(5/2)
<lambdifygenerated-140>:2: RuntimeWarning: overflow encountered in exp
  return (1/4)*exp(2*x**2)
<lambdifygenerated-145>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + x*log(x) + 2*x
<lambdifygenerated-149>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 - 1/2*x**2*log(x) + x
<lambdifygenerated-154>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + log(2*x + 1)
<lambdifygenerated-156>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)/x
<lambdifygenerated-163>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x**2*arctanh(x)
<lambdifygenerated-163>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x**2*arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: divide by zero encountered in arctanh
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in arctanh
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: divide by zero encountered in log
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in log
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in subtract
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-171>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2)
You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
mean: 0.1270269751548767
top: 0.9813479781150818
Saving results...
Working with expression:  x**3 - 4 * x**2 + 2 * x - 5
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x**3*cosh(1)/13 0.0000
-3*x 0.0000
x**2/2 + 4*x + sin(x) 0.0000
None 0.0000
None 0.0000
-x + 4*cos(x) 0.0000
x*(sqrt(x) + x + sin(x)) 0.0000
None 0.0000
3*log(x/2) 0.0000
9*x**2 + x 0.0000
None 0.0000
None 0.0000
None 0.0000
x + sin(exp(3*x))/3 0.0000
None 0.0000
1/(10*x) 0.0000
x*(x**(3/2) + 3) + x 0.0000
None 0.0000
None 0.0000
x*(-x + sin(x)) 0.0000
x*(x + 10) 0.0000
None 0.0000
4*sqrt(2)/(3*x) 0.0000
cos(sqrt(2)*x/4) - 1/(2*x**2) 0.0000
None 0.0000
None 0.0000
4212563*x**6/3 0.0000
None 0.0000
x/2 + sin(3*x**2) 0.0000
atanh(x) + 4 0.0000
None 0.0000
2 - 1/(2*x) 0.0000
None 0.0000
x**2/2 + x + sinh(x) 0.0000
None 0.0000
x/116 0.0000
None 0.0000
None 0.0000
None 0.0000
x**4/8 - x**2/2 + exp(-x) 0.0000
None 0.0000
x**3/3 + log(x) 0.0000
None 0.0000
x/cos(4) 0.0000
x**2 + 5*x 0.0000
None 0.0000
cos(5*x)/12 0.0000
sinh(x + 4) 0.0000
x*asinh(x**2) 0.0000
x*(-sqrt(x) - 1) - 2*x 0.0000
1/(x + 5) + 1/sqrt(x) 0.0000
None 0.0000
atan(x)/2 0.0000
None 0.0000
log(x**(-5/2)) 0.0000
None 0.0000
None 0.0000
3*x + exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
-exp(x + 1) 0.0000
x**2/4 + 3*x*sin(x)/2 - cos(x) 0.0000
tan(x**3) 0.0000
None 0.0000
sqrt(5*x**2 + 1) + 12*log(x) 0.0000
x**2/2 + 3*x + 5*exp(x) 0.0000
x**2/2 + x*sinh(x) + 3*x 0.0000
None 0.0000
5*x**(3/2) + 4/cos(x) 0.0000
sin(2*x) + 1/x 0.0000
sin(2*x + 2)/2 0.0000
None 0.0000
None 0.0000
sin(2*x + 2) 0.0000
None 0.0000
15*x 0.0000
-1/(2*(x - 3)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x**(3/2)/3 + sin(x) 0.0000
None 0.0000
x*cosh(log(x)) - x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**3 + 4 0.0000
-cos(x - 3) 0.0000
2*x + asin(x) 0.0000
-x**2*tan(1)/2 0.0000
None 0.0000
2*x*(x + exp(x)) 0.0000
exp(x + 1) 0.0000
2*sin(2*x)**(3/2)/3 - cos(2*x)/2 0.0000
-cos(2*x)/12 0.0000
x**2/(2*tan(3)) 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x 0.0000
sin(x + 1) 0.0000
sqrt(x) - sinh(x - 2) 0.0000
sqrt(x) + x - cos(x) 0.0000
x**3/3 + x + sinh(x) 0.0000
None 0.0000
None 0.0000
sin(x) + asinh(x) 0.0000
None 0.0000
None 0.0000
x**2*exp(x + 1) 0.0000
None 0.0000
x**2 + 2/(9*x**2) 0.0000
None 0.0000
None 0.0000
4 - 1/x 0.0000
-2*x + cosh(x)/x 0.0000
3*x**(3/2) + sinh(x) 0.0000
x**2 - x*(x + 1) 0.0000
None 0.0000
x**2/3 + (x - 5)*exp(x) 0.0000
x**2/2 + tanh(2*x) + 1/(4*x**2) 0.0000
-x - log(tanh(x) + 1) 0.0000
None 0.0000
x**4*exp(x) + 20*x 0.0000
66*x**4/5 0.0000
None 0.0000
None 0.0000
26*x 0.0000
x*(2*x + exp(x)) 0.0000
None 0.0000
x**(2/3) + x + log(x)**2 0.0000
-x + cos(x)/sin(x) 0.0000
None 0.0000
x*(x + 1) 0.0000
None 0.0000
1/(3*x + 4) 0.0000
cos(x)/x 0.0000
None 0.0000
None 0.0000
3*x + asin(x) 0.0000
x**2/5 0.0000
x**(3/2) + sin(x) 0.0000
x*(x**3 + x) 0.0000
None 0.0000
2*x*atanh(x) 0.0000
x*(x**2 + x) 0.0000
1/(2*cos(exp(x))**4) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*acos(x + 2) - sqrt(x**2 + 1) + 4*acos(x + 2) 0.0000
x + sinh(x) + 1 0.0000
<lambdifygenerated-181>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x + sin(x))
<lambdifygenerated-182>:2: RuntimeWarning: invalid value encountered in log
  return 3*log((1/2)*x)
<lambdifygenerated-186>:2: RuntimeWarning: invalid value encountered in power
  return x*(x**(3/2) + 3) + x
<lambdifygenerated-193>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x) + 4
<lambdifygenerated-193>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x) + 4
<lambdifygenerated-198>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 + log(x)
<lambdifygenerated-204>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(-sqrt(x) - 1) - 2*x
<lambdifygenerated-205>:2: RuntimeWarning: invalid value encountered in sqrt
  return (x + 5)**(-1.0) + 1/sqrt(x)
<lambdifygenerated-207>:2: RuntimeWarning: invalid value encountered in power
  return log(x**(-5/2))
<lambdifygenerated-212>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(5*x**2 + 1) + 12*log(x)
<lambdifygenerated-215>:2: RuntimeWarning: invalid value encountered in power
  return 5*x**(3/2) + 4/cos(x)
<lambdifygenerated-220>:2: RuntimeWarning: divide by zero encountered in divide
  return -(1/2)/(x - 3)
<lambdifygenerated-221>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + sin(x)
<lambdifygenerated-222>:2: RuntimeWarning: invalid value encountered in log
  return x*cosh(log(x)) - x
<lambdifygenerated-225>:2: RuntimeWarning: invalid value encountered in arcsin
  return 2*x + arcsin(x)
<lambdifygenerated-229>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*sin(2*x)**(3/2) - 1/2*cos(2*x)
<lambdifygenerated-234>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - sinh(x - 2)
<lambdifygenerated-235>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x - cos(x)
<lambdifygenerated-242>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**(3/2) + sinh(x)
<lambdifygenerated-246>:2: RuntimeWarning: divide by zero encountered in log
  return -x - log(tanh(x) + 1)
<lambdifygenerated-251>:2: RuntimeWarning: invalid value encountered in power
  return x**(2/3) + x + log(x)**2
<lambdifygenerated-251>:2: RuntimeWarning: invalid value encountered in log
  return x**(2/3) + x + log(x)**2
<lambdifygenerated-256>:2: RuntimeWarning: invalid value encountered in arcsin
  return 3*x + arcsin(x)
<lambdifygenerated-258>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2) + sin(x)
<lambdifygenerated-260>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x*arctanh(x)
<lambdifygenerated-260>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x*arctanh(x)
<lambdifygenerated-263>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x + 2) - sqrt(x**2 + 1) + 4*arccos(x + 2)
<lambdifygenerated-270>:2: RuntimeWarning: invalid value encountered in log
  return x - 2*log(x + cos(x**2))
<lambdifygenerated-272>:2: RuntimeWarning: divide by zero encountered in log
  return (1/2)*x**2 + log(1 - x**2)
<lambdifygenerated-272>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + log(1 - x**2)
<lambdifygenerated-274>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + exp(-1)
<lambdifygenerated-277>:2: RuntimeWarning: invalid value encountered in power
  return x*(x + 1/3)**(3/2)
<lambdifygenerated-280>:2: RuntimeWarning: invalid value encountered in power
  return x*arctan(x) + (1/2)*log(4 - 2/x**(4/3))
<lambdifygenerated-282>:2: RuntimeWarning: invalid value encountered in power
  return sinh(x**(3/2))
<lambdifygenerated-282>:2: RuntimeWarning: overflow encountered in sinh
  return sinh(x**(3/2))
<lambdifygenerated-284>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*x*(x + arccosh(x))
<lambdifygenerated-286>:2: RuntimeWarning: invalid value encountered in log
  return -x - log(tan(x))
<lambdifygenerated-288>:2: RuntimeWarning: divide by zero encountered in log
  return x + exp(x) - log(tanh(x + 1) + 1)
<lambdifygenerated-290>:2: RuntimeWarning: invalid value encountered in power
  return x**(1/26) + (1/7)*x**(7/4)
<lambdifygenerated-291>:2: RuntimeWarning: invalid value encountered in sqrt
  return 5*x*exp(sqrt(x))
<lambdifygenerated-292>:2: RuntimeWarning: divide by zero encountered in log
  return 4*log(x + 1) - 1/2*log(x**2 - 1)
<lambdifygenerated-292>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x + 1) - 1/2*log(x**2 - 1)
<lambdifygenerated-292>:2: RuntimeWarning: invalid value encountered in subtract
  return 4*log(x + 1) - 1/2*log(x**2 - 1)
<lambdifygenerated-294>:2: RuntimeWarning: invalid value encountered in power
  return -4/3*x**(3/2)
<lambdifygenerated-296>:2: RuntimeWarning: invalid value encountered in power
  return -4*x - (2/3)/(3*x + 1)**(2/3)
<lambdifygenerated-297>:2: RuntimeWarning: invalid value encountered in arccos
  return -x*arccos(x) - 2*sqrt(1 - x**2) - arccos(x)
<lambdifygenerated-297>:2: RuntimeWarning: invalid value encountered in sqrt
  return -x*arccos(x) - 2*sqrt(1 - x**2) - arccos(x)
<lambdifygenerated-299>:2: RuntimeWarning: invalid value encountered in power
  return (3*x**(3/2) + x)**(-1.0)
<lambdifygenerated-300>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/4) + x**(3/2) + 1
<lambdifygenerated-308>:2: RuntimeWarning: invalid value encountered in power
  return (1 - x)**(-1/3)
<lambdifygenerated-309>:2: RuntimeWarning: invalid value encountered in power
  return -6*x**(5/2)
<lambdifygenerated-312>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + log(x)
<lambdifygenerated-317>:2: RuntimeWarning: invalid value encountered in log
  return -2*x - 1/2*log(x + 2) - (1/2)/x**12
x**2/3 + x + sin(x) 0.0000
2*exp(4*x/3) 0.0000
None 0.0000
12*x**2 + 3*x 0.0000
None 0.0000
3*sin(x)**2/4 - 1/(2*x**12) 0.0000
x + 10 0.0000
None 0.0000
None 0.0000
x - 2*log(x + cos(x**2)) 0.0000
None 0.0000
4*x + exp(x)/2 0.0000
x**2/2 + log(1 - x**2) 0.0000
20*x**2 0.0000
log(x) + exp(-1) 0.0000
None 0.0000
4*x*(x + 4) 0.0000
5*x*sin(x) + 5*cos(x) 0.0000
None 0.0000
x*(x + 1/3)**(3/2) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*cos(x) - x + sinh(x) 0.0000
x*(x + asinh(x) + 3) 0.0000
x*atan(x) + log(4 - 2/x**(4/3))/2 0.0000
None 0.0000
1/(4*x**3) 0.0000
None 0.0000
sinh(x**(3/2)) 0.0000
None 0.0000
3*x**4/8 0.0000
2*x*(x + acosh(x)) 0.0000
None 0.0000
None 0.0000
x**2*tan(5) 0.0000
None 0.0000
-x - log(tan(x)) 0.0000
x**2*tanh(4) 0.0000
x + exp(x) - log(tanh(x + 1) + 1) 0.0000
2*sin(x) 0.0000
None 0.0000
None 0.0000
x**(1/26) + x**(7/4)/7 0.0000
None 0.0000
None 0.0000
5*x*exp(sqrt(x)) 0.0000
4*log(x + 1) - log(x**2 - 1)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
10*x 0.0000
-4*x**(3/2)/3 0.0000
x + exp(3*x/2) 0.0000
-4*x - 2/(3*(3*x + 1)**(2/3)) 0.0000
None 0.0000
-x*acos(x) - 2*sqrt(1 - x**2) - acos(x) 0.0000
x**6*sin(1)/2 0.0000
1/(3*x**(3/2) + x) 0.0000
2*x**(3/4)/3 + x**(3/2) + 1 0.0000
None 0.0000
x/5 0.0000
None 0.0000
None 0.0000
None 0.0000
log(cosh(5*x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
(x + exp(x) + 2)/x 0.0000
7/x**6 0.0000
None 0.0000
-x**2 + x*cos(2*x)/2 0.0000
None 0.0000
x + cos(2*x) 0.0000
2*cos(2*x) 0.0000
(1 - x)**(-1/3) 0.0000
None 0.0000
-6*x**(5/2) 0.0000
None 0.0000
None 0.0000
x + asinh(3*x) 0.0000
-3*x**2 + 3*x 0.0000
x**2/2 + log(x) 0.0000
None 0.0000
2*x + exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x + asinh(3*x) 0.0000
None 0.0000
x*(x + sin(x)) + 12*x 0.0000
0 0.0000
None 0.0000
-2*x - log(x + 2)/2 - 1/(2*x**12) 0.0000
mean: 0.0
top: 0.0
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x**2*tan(1) 0.0000
None 0.0000
None 0.0000
824*x*log(5)/5 0.0000
x + 3 0.0000
None 0.0000
None 0.0000
None 0.0000
sqrt(x) + log(tan(x)) 0.0000
acosh(2*x)/x - 1/sqrt(x) 0.0000
-x**2/2 - x - log(-tanh(x)) 0.0000
None 0.0000
None 0.0000
x + 6*log(x) 0.0000
x + asinh(x + 1) 0.0000
x*cos(acosh(x)) + cos(acosh(x)) 0.0000
x**4/16 0.0000
x*(x + 4) + 2*x 0.0000
None 0.0000
None 0.0000
2*x - log(cos(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
log(1 + 1/tan(x**2))/2 0.0000
None 0.0000
9*x**5 + x 0.0000
sqrt(x) + atanh(x) 0.0000
-sin(x)*cos(x)/2 + 2*sin(x) - sqrt(2)*cos(x) 0.0000
-x - 2*log(x**2 - 1) 0.0000
None 0.0000
None 0.0000
exp(x/8) 0.0000
None 0.0000
None 0.0000
6*x*sin(log(x)) + 5*x*cosh(log(x)) + cos(log(x))**2/16 0.0000
None 0.0000
None 0.0000
None 0.0000
(x + 1)*cos(2*x) 0.0000
x*(x + 5)*cosh(x) 0.0000
sin(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
atanh(2*x) 0.0000
None 0.0000
3*x**(3/2) + x*sin(2) 0.0000
x**2*acos(2) 0.0000
None 0.0000
tan(sqrt(x)) 0.0000
-x + x*sin(1) 0.0000
x**2/4 + 8*x/5 0.0000
None 0.0000
None 0.0000
exp(sqrt(x)/2) 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2/2 + x*sin(x) + cos(x) 0.0000
2*x*(x + 3) + x 0.0000
(5 - 1/x)/x 0.0000
None 0.0000
x**4/4 + sin(x)**2/8 + sin(x)*cos(x)/8 0.0000
None 0.0000
x*(tan(3) + 3) 0.0000
None 0.0000
None 0.0000
3*x/(-x**2 + x) 0.0000
4*tan(x) 0.0000
x**8/3 0.0000
None 0.0000
None 0.0000
None 0.0000
4/(3*(3*x + 2)**(3/2)) 0.0000
x*cos(x + 3) 0.0000
44*tan(x)**2/3 0.0000
None 0.0000
x + 2*cos(sqrt(x)) 0.0000
None 0.0000
sin(x)*cos(x) 0.0000
sqrt(x) + log(3*x/2) 0.0000
-x**(5/2) + x 0.0000
None 0.0000
None 0.0000
4*x*tanh(x)**4 0.0000
5*x + log(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*(x**6 + 28*x) 0.0000
4*sqrt(x) + x**4/2 0.0000
None 0.0000
None 0.0000
x*exp(-3) + x/2 0.0000
None 0.0000
cos(sqrt(x)) + asin(x)/2 - 1 0.0000
x/2 0.0000
None 0.0000
x**4/2 + 4*x*cos(x) + 4*cos(x) 0.0000
x/(x + 4*asin(sqrt(x))) 0.0000
<lambdifygenerated-321>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + log(tan(x))
<lambdifygenerated-321>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + log(tan(x))
<lambdifygenerated-322>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(2*x)/x - 1/sqrt(x)
<lambdifygenerated-322>:2: RuntimeWarning: invalid value encountered in sqrt
  return arccosh(2*x)/x - 1/sqrt(x)
<lambdifygenerated-323>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 - x - log(-tanh(x))
<lambdifygenerated-324>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-326>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*cos(arccosh(x)) + cos(arccosh(x))
<lambdifygenerated-329>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - log(cos(x))
<lambdifygenerated-330>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(1 + tan(x**2)**(-1.0))
<lambdifygenerated-332>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arctanh(x)
<lambdifygenerated-332>:2: RuntimeWarning: divide by zero encountered in arctanh
  return sqrt(x) + arctanh(x)
<lambdifygenerated-332>:2: RuntimeWarning: invalid value encountered in arctanh
  return sqrt(x) + arctanh(x)
<lambdifygenerated-334>:2: RuntimeWarning: divide by zero encountered in log
  return -x - 2*log(x**2 - 1)
<lambdifygenerated-336>:2: RuntimeWarning: invalid value encountered in log
  return 6*x*sin(log(x)) + 5*x*cosh(log(x)) + (1/16)*cos(log(x))**2
<lambdifygenerated-340>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(2*x)
<lambdifygenerated-341>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**(3/2) + x*sin(2)
<lambdifygenerated-342>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*arccos(2)
<lambdifygenerated-343>:2: RuntimeWarning: invalid value encountered in sqrt
  return tan(sqrt(x))
<lambdifygenerated-346>:2: RuntimeWarning: invalid value encountered in sqrt
  return exp((1/2)*sqrt(x))
<lambdifygenerated-355>:2: RuntimeWarning: invalid value encountered in power
  return (4/3)/(3*x + 2)**(3/2)
<lambdifygenerated-358>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + 2*cos(sqrt(x))
<lambdifygenerated-360>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + log((3/2)*x)
<lambdifygenerated-360>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + log((3/2)*x)
<lambdifygenerated-361>:2: RuntimeWarning: invalid value encountered in power
  return -x**(5/2) + x
<lambdifygenerated-363>:2: RuntimeWarning: invalid value encountered in log
  return 5*x + log(x)
<lambdifygenerated-365>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4*sqrt(x) + (1/2)*x**4
<lambdifygenerated-367>:2: RuntimeWarning: invalid value encountered in sqrt
  return cos(sqrt(x)) + (1/2)*arcsin(x) - 1
<lambdifygenerated-367>:2: RuntimeWarning: invalid value encountered in arcsin
  return cos(sqrt(x)) + (1/2)*arcsin(x) - 1
<lambdifygenerated-370>:2: RuntimeWarning: invalid value encountered in sqrt
  return x/(x + 4*arcsin(sqrt(x)))
<lambdifygenerated-370>:2: RuntimeWarning: invalid value encountered in arcsin
  return x/(x + 4*arcsin(sqrt(x)))
<lambdifygenerated-371>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*(arccosh(x) + 1)/x
<lambdifygenerated-383>:2: RuntimeWarning: invalid value encountered in arccosh
  return -1/2*arccosh(x)
<lambdifygenerated-385>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(2*x) - sqrt(sqrt(x) + 1)
<lambdifygenerated-385>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccos(2*x) - sqrt(sqrt(x) + 1)
<lambdifygenerated-394>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) + exp(x) - log(cos(x))
<lambdifygenerated-394>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) + exp(x) - log(cos(x))
<lambdifygenerated-394>:2: RuntimeWarning: invalid value encountered in log
  return x*arctanh(x) + exp(x) - log(cos(x))
<lambdifygenerated-396>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)
<lambdifygenerated-397>:2: RuntimeWarning: invalid value encountered in arccos
  return tanh(x) + arccos(x)
<lambdifygenerated-399>:2: RuntimeWarning: invalid value encountered in log
  return log(cos(x)) - 1/x
<lambdifygenerated-400>:2: RuntimeWarning: invalid value encountered in arccos
  return 2*exp(2*x) - 1/2*arccos(2*x)
<lambdifygenerated-408>:2: RuntimeWarning: invalid value encountered in log
  return x*exp(x) - x + (5/4)*log(tan(x))**2 + sin(x)
<lambdifygenerated-410>:2: RuntimeWarning: invalid value encountered in log
  return 1/(x*log(x))
<lambdifygenerated-414>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(3/2) + x
<lambdifygenerated-421>:2: RuntimeWarning: invalid value encountered in log
  return 2/log(x)
<lambdifygenerated-422>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(x)
<lambdifygenerated-423>:2: RuntimeWarning: invalid value encountered in arccos
  return -4*x*arccos(4*x)
<lambdifygenerated-428>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(5*x)
<lambdifygenerated-429>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) + x
<lambdifygenerated-430>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arcsin(x)
<lambdifygenerated-430>:2: RuntimeWarning: invalid value encountered in arcsin
  return sqrt(x) + arcsin(x)
<lambdifygenerated-431>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x) + x*arccosh(x)
<lambdifygenerated-431>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*sqrt(x) + x*arccosh(x)
2*(acosh(x) + 1)/x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x**4/2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
(x**4 + 2*x**3)**2 0.0000
exp(5*sin(4*x)/4) 0.0000
None 0.0000
2*x + log(1 + sqrt(2)) 0.0000
None 0.0000
3*x**2 - 10*x/3 0.0000
2*x + tanh(3) 0.0000
None 0.0000
None 0.0000
x - exp(4*x)/8 0.0000
x**3 + x*(x + 1) 0.0000
2*x*cos(x) - 2*sin(x) 0.0000
None 0.0000
None 0.0000
2*x + exp(1/x) 0.0000
x + (x + 1)*exp(x) 0.0000
-acosh(x)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
x/tanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*acos(2*x) - sqrt(sqrt(x) + 1) 0.0000
None 0.0000
None 0.0000
None 0.0000
x + tanh(x) 0.0000
None 0.0000
1/(x*(2*x + 1)) 0.0000
None 0.0000
exp(4*x) 0.0000
None 0.0000
4*x + 3/2 0.0000
None 0.0000
log(x**2)**2 0.0000
2*x**6 + 1 0.0000
-atan(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
cos(3*x)/3 + 4/x 0.0000
x*atanh(x) + exp(x) - log(cos(x)) 0.0000
x*(x + 4*tan(x)**2) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
5*log(x) 0.0000
None 0.0000
tanh(x) + acos(x) 0.0000
None 0.0000
None 0.0000
x**6/3 + (-x - 1)*exp(-x) 0.0000
None 0.0000
None 0.0000
log(cos(x)) - 1/x 0.0000
2*exp(2*x) - acos(2*x)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**10 + x*exp(5) 0.0000
cos(x) 0.0000
None 0.0000
None 0.0000
3*x**2 + 8*x + sin(x) 0.0000
None 0.0000
4*x + cosh(x) 0.0000
exp(asinh(x + 5)) 0.0000
None 0.0000
None 0.0000
10*x/3 0.0000
None 0.0000
exp(x/4)/2 0.0000
x*exp(x) - x + 5*log(tan(x))**2/4 + sin(x) 0.0000
None 0.0000
3*x - 3*tan(x)**2 0.0000
1/(x*log(x)) 0.0000
None 0.0000
None 0.0000
2*x**2 + exp(x) 0.0000
1/(x + 2) 0.0000
None 0.0000
4*x + tan(x) + 5 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
4*x**(3/2) + x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*exp(-1) + 3*x 0.0000
25*x**2 0.0000
None 0.0000
x**2/2 + 2*x 0.0000
None 0.0000
x*(x + 4/x) 0.0000
None 0.0000
4*x**2 + 1 0.0000
cos(x)**12 0.0000
None 0.0000
2/log(x) 0.0000
None 0.0000
3*log(x) 0.0000
-4*x*acos(4*x) 0.0000
None 0.0000
x/2 - exp(-x/2)/2 0.0000
None 0.0000
None 0.0000
3*x + cos(x/2) 0.0000
None 0.0000
None 0.0000
x**2 + 2*x + cos(x) 0.0000
x*(x**2 + 1) 0.0000
None 0.0000
asin(5*x) 0.0000
None 0.0000
x*log(x) + x 0.0000
sqrt(x) + asin(x) 0.0000
None 0.0000
None 0.0000
2*sqrt(x) + x*acosh(x) 0.0000
mean: 0.0
top: 0.0
None 0.0000
-x**2*sinh(x)/2 + 8*log(sinh(x) + 1) - 2*sinh(x) 0.0000
None 0.0000
(x + log(x))/x 0.0000
-4*x + sin(x) 0.0000
x*sin(x + 2) 0.0000
x + 1/sqrt(x) 0.0000
sqrt(x) + asinh(x) 0.0000
None 0.0000
5*x*sin(x)*cos(x) + 5*log(sin(x) + 1) - log(cos(x)) 0.0000
None 0.0000
-sin(2*x + 5) 0.0000
-log(cos(4*x))/4 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x - sinh(x) 0.0000
-4*x + log(tan(log(x))**2 + 1)/3 0.0000
None 0.0000
None 0.0000
6/x**2 0.0000
2*x**2 + 2 0.0000
None 0.0000
4*x 0.0000
2*x*atan(x) 0.0000
cosh(4*x)/4 0.0000
None 0.0000
tan(x) + atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x)**4 0.0000
None 0.0000
None 0.0000
2*x - 1 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*sin(x + 1) 0.0000
None 0.0000
None 0.0000
-x**2 + 2*x*log(2*x) - 2*x 0.0000
None 0.0000
None 0.0000
cos(x + 1) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2 + 4*x/3 0.0000
None 0.0000
None 0.0000
sqrt(x + 1) 0.0000
2*x - 6*log(cos(x)) 0.0000
(x - 4)*exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sinh(x)**4 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
612*x**2 0.0000
None 0.0000
None 0.0000
None 0.0000
tanh(2*x + 4) 0.0000
cos(2)/x 0.0000
None 0.0000
x + 3*tan(1) 0.0000
None 0.0000
x**3*log(2)/3 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**8/95 0.0000
None 0.0000
-x**2/2 + log(cos(log(x)))/2 0.0000
-acos(x)/3 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
<lambdifygenerated-432>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2*sinh(x) + 8*log(sinh(x) + 1) - 2*sinh(x)
<lambdifygenerated-433>:2: RuntimeWarning: invalid value encountered in log
  return (x + log(x))/x
<lambdifygenerated-436>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + 1/sqrt(x)
<lambdifygenerated-437>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arcsinh(x)
<lambdifygenerated-438>:2: RuntimeWarning: invalid value encountered in log
  return 5*x*sin(x)*cos(x) + 5*log(sin(x) + 1) - log(cos(x))
<lambdifygenerated-440>:2: RuntimeWarning: invalid value encountered in log
  return -1/4*log(cos(4*x))
<lambdifygenerated-442>:2: RuntimeWarning: invalid value encountered in log
  return -4*x + (1/3)*log(tan(log(x))**2 + 1)
<lambdifygenerated-448>:2: RuntimeWarning: divide by zero encountered in arctanh
  return tan(x) + arctanh(x)
<lambdifygenerated-448>:2: RuntimeWarning: invalid value encountered in arctanh
  return tan(x) + arctanh(x)
<lambdifygenerated-452>:2: RuntimeWarning: invalid value encountered in log
  return -x**2 + 2*x*log(2*x) - 2*x
<lambdifygenerated-455>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-456>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - 6*log(cos(x))
<lambdifygenerated-465>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 + (1/2)*log(cos(log(x)))
<lambdifygenerated-466>:2: RuntimeWarning: invalid value encountered in arccos
  return -1/3*arccos(x)
<lambdifygenerated-469>:2: RuntimeWarning: invalid value encountered in power
  return log(x**(3/2))
<lambdifygenerated-473>:2: RuntimeWarning: overflow encountered in exp
  return x*arctan(x) + (1/5)*exp(5*x**2 + 5)
<lambdifygenerated-476>:2: RuntimeWarning: invalid value encountered in log
  return (3/2)*x**2 - 3*log(cos(x))
<lambdifygenerated-477>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 2
<lambdifygenerated-478>:2: RuntimeWarning: invalid value encountered in log
  return -5*x*log(x)*cos(x) - 1/4*log(x**2 + 1) - 5*sin(x)
<lambdifygenerated-479>:2: RuntimeWarning: invalid value encountered in power
  return x**2 - 1/2*sin(x)**(1/4) + sin(x)*cos(x)
<lambdifygenerated-483>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + arccos(x)
<lambdifygenerated-483>:2: RuntimeWarning: invalid value encountered in arccos
  return x + log(x) + arccos(x)
<lambdifygenerated-484>:2: RuntimeWarning: invalid value encountered in arccos
  return x - arccos(x)
<lambdifygenerated-485>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*exp(sqrt(x))
<lambdifygenerated-487>:2: RuntimeWarning: invalid value encountered in power
  return (1/3)*sqrt(2)*x**(3/2) + log(x)
<lambdifygenerated-487>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*sqrt(2)*x**(3/2) + log(x)
<lambdifygenerated-488>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/4)*x**4 + x*arcsinh(x) + sqrt(2 - x**2)
<lambdifygenerated-489>:2: RuntimeWarning: invalid value encountered in power
  return (1/7)*sqrt(2)*x**(7/2) + (1/2)*x**4
<lambdifygenerated-492>:2: RuntimeWarning: invalid value encountered in arccos
  return cos(x) + arccos(x)
<lambdifygenerated-496>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + cos(arccosh(x))
<lambdifygenerated-498>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x - 1) + 2*log(x)
<lambdifygenerated-498>:2: RuntimeWarning: invalid value encountered in log
  return -sqrt(x - 1) + 2*log(x)
<lambdifygenerated-502>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/2)*sqrt(x) + (1/2)*sin(x**2)
<lambdifygenerated-503>:2: RuntimeWarning: invalid value encountered in power
  return (1/55)*x**(3/2) + (1/4)*x**4 + x*sin(x)
<lambdifygenerated-504>:2: RuntimeWarning: invalid value encountered in arcsin
  return 2*x - arcsin(x)
<lambdifygenerated-505>:2: RuntimeWarning: divide by zero encountered in arctanh
  return -2*x + arctanh(x)
<lambdifygenerated-505>:2: RuntimeWarning: invalid value encountered in arctanh
  return -2*x + arctanh(x)
<lambdifygenerated-508>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + 8*x
<lambdifygenerated-510>:2: RuntimeWarning: invalid value encountered in power
  return x**(5/2) + x + 1
<lambdifygenerated-511>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*sqrt(x + 1)
<lambdifygenerated-515>:2: RuntimeWarning: invalid value encountered in arccosh
  return sin(arccosh(x))
<lambdifygenerated-523>:2: RuntimeWarning: invalid value encountered in log
  return -1/3*x**3*log(x) + x - 1/4*log(x)**2
<lambdifygenerated-525>:2: RuntimeWarning: invalid value encountered in log
  return (2/5)*log(tanh(5*x))
<lambdifygenerated-527>:2: RuntimeWarning: invalid value encountered in log
  return x**5 + 6*x + 4*log(x)
<lambdifygenerated-531>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*sin(sqrt(x))
<lambdifygenerated-534>:2: RuntimeWarning: invalid value encountered in arccosh
  return -sin(arccosh(x))
<lambdifygenerated-535>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + sqrt(x + 1) - tanh(x)
<lambdifygenerated-536>:2: RuntimeWarning: invalid value encountered in sqrt
  return e*sqrt(x)
<lambdifygenerated-537>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*cosh(sqrt(x)) + 4*sin(sqrt(x))
<lambdifygenerated-538>:2: RuntimeWarning: invalid value encountered in power
  return x**(5/4) + x + cosh(x)
<lambdifygenerated-540>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 5*x*arctanh(x)
<lambdifygenerated-540>:2: RuntimeWarning: invalid value encountered in arctanh
  return 5*x*arctanh(x)
<lambdifygenerated-544>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x**(-1.0))
2*sin(x)**3/3 + sin(x) 0.0000
x**2*sin(x) + 4*x*cos(x) + 4*sin(x) 0.0000
log(x**(3/2)) 0.0000
x + E*x 0.0000
x**3 + sinh(x) 0.0000
None 0.0000
-x 0.0000
x*atan(x) + exp(5*x**2 + 5)/5 0.0000
None 0.0000
2*x + 4 0.0000
x**6/2 + x 0.0000
3*x**2/2 - 3*log(cos(x)) 0.0000
log(x) + 2 0.0000
-5*x*log(x)*cos(x) - log(x**2 + 1)/4 - 5*sin(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2 - sin(x)**(1/4)/2 + sin(x)*cos(x) 0.0000
None 0.0000
None 0.0000
cos(x) + tan(x) 0.0000
None 0.0000
-x**3/9 0.0000
None 0.0000
x/(x + cos(1)) 0.0000
x + log(x) + acos(x) 0.0000
None 0.0000
x - acos(x) 0.0000
None 0.0000
-2*exp(sqrt(x)) 0.0000
None 0.0000
0 0.0000
sqrt(2)*x**(3/2)/3 + log(x) 0.0000
None 0.0000
x**4/4 + x*asinh(x) + sqrt(2 - x**2) 0.0000
sqrt(2)*x**(7/2)/7 + x**4/2 0.0000
32/x**2 0.0000
None 0.0000
None 0.0000
x*sinh(x + 3) + cosh(x + 3) 0.0000
cos(x) + acos(x) 0.0000
x - sin(5*x)/5 0.0000
None 0.0000
None 0.0000
cos(x) 0.0000
(log(x**2) + 1)/x**2 0.0000
None 0.0000
x + cos(acosh(x)) 0.0000
tan(x - 2) 0.0000
-sqrt(x - 1) + 2*log(x) 0.0000
None 0.0000
x**4*tan(5) 0.0000
x + 3*log(tanh(x) + 3) - sin(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2*(4*x + 4) 0.0000
None 0.0000
None 0.0000
sqrt(x)/2 + sin(x**2)/2 0.0000
x**(3/2)/55 + x**4/4 + x*sin(x) 0.0000
2*x - asin(x) 0.0000
None 0.0000
-2*x + atanh(x) 0.0000
x + sqrt(3)*atan(x) 0.0000
None 0.0000
x + log(4) 0.0000
2*x**(5/2)/5 + 8*x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-sin(4*x - 2) 0.0000
None 0.0000
x**(5/2) + x + 1 0.0000
None 0.0000
x*sqrt(x + 1) 0.0000
x + x*exp(2) 0.0000
None 0.0000
x**2*exp(x) 0.0000
None 0.0000
2*x - 2 0.0000
sin(acosh(x)) 0.0000
None 0.0000
x + tan(x) 0.0000
2/x 0.0000
None 0.0000
None 0.0000
2*x*sin(x) + sin(x)*cos(x)**2 - 2*cos(x) 0.0000
None 0.0000
x**2/2 - x*log(2*x**2) - x 0.0000
x*(x + cos(1)) + x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x/2) 0.0000
None 0.0000
x + tan(x) + 4 0.0000
None 0.0000
None 0.0000
None 0.0000
-x**3*log(x)/3 + x - log(x)**2/4 0.0000
6 - 47*x**6 0.0000
None 0.0000
None 0.0000
2*log(tanh(5*x))/5 0.0000
x*(x + 1) + x 0.0000
None 0.0000
x**5 + 6*x + 4*log(x) 0.0000
2*x + exp(x) 0.0000
E*x**2 + x 0.0000
x/2 + sinh(x - 5) 0.0000
x*sin(sqrt(x)) 0.0000
x + tan(tan(4)) 0.0000
None 0.0000
7*x**2/2 + 5*x 0.0000
None 0.0000
None 0.0000
None 0.0000
-sin(acosh(x)) 0.0000
x + sqrt(x + 1) - tanh(x) 0.0000
None 0.0000
E*sqrt(x) 0.0000
None 0.0000
x*cosh(sqrt(x)) + 4*sin(sqrt(x)) 0.0000
x**(5/4) + x + cosh(x) 0.0000
2*x + 1/(2*sin(x)) 0.0000
None 0.0000
5*x*atanh(x) 0.0000
sqrt(3)*x**4/3 0.0000
x**2/2 + atan(x) 0.0000
-sin(x/2) 0.0000
sqrt(1/x) 0.0000
x**4/4 + 22/x 0.0000
None 0.0000
None 0.0000
4*sinh(x) 0.0000
None 0.0000
None 0.0000
x + (x + 1)/x 0.0000
tanh(x) - 1 0.0000
x**4/4 + 10*x**3/3 0.0000
4*sin(x) + 4/(3*x**(3/2)) 0.0000
None 0.0000
None 0.0000
x**2 + cos(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x**(1/4) + 2*x 0.0000
None 0.0000
x*(x + tan(x)) + x 0.0000
-3*x*acos(x) + 3*sqrt(x**2 + 1) 0.0000
3*sin(log(cos(x)))/5 0.0000
cos(x)/x 0.0000
None 0.0000
sin(x + 4)**2 0.0000
x*cos(x**2) - x 0.0000
None 0.0000
x + sqrt(x - 1) 0.0000
<lambdifygenerated-550>:2: RuntimeWarning: invalid value encountered in power
  return 4*sin(x) + (4/3)/x**(3/2)
<lambdifygenerated-552>:2: RuntimeWarning: invalid value encountered in power
  return 3*x**(1/4) + 2*x
<lambdifygenerated-554>:2: RuntimeWarning: invalid value encountered in arccos
  return -3*x*arccos(x) + 3*sqrt(x**2 + 1)
<lambdifygenerated-555>:2: RuntimeWarning: invalid value encountered in log
  return (3/5)*sin(log(cos(x)))
<lambdifygenerated-559>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + sqrt(x - 1)
mean: 0.0
top: 0.0
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x*cosh(x) + 2*sinh(x) 0.0000
None 0.0000
-log(cos(x)) - sin(x) 0.0000
-log(cos(x)) 0.0000
None 0.0000
None 0.0000
2*x*sinh(x) 0.0000
None 0.0000
sqrt(x - 2) 0.0000
2*x*(x + sin(x)) 0.0000
tan(x/2) 0.0000
x + 3/x 0.0000
x*(2*x - 2) 0.0000
x/3 + log(x - 1)/5 + atanh(2*x)/5 0.0000
x + log(2) 0.0000
None 0.0000
None 0.0000
None 0.0000
-4*sqrt(3)*x**(3/2)/3 0.0000
x*tanh(1) 0.0000
-exp(-1/(2*x**2)) 0.0000
exp(x) - log(atanh(x)) 0.0000
None 0.0000
None 0.0000
x**2/sin(x)**2 0.0000
None 0.0000
x + 3 0.0000
x**4*acos(4) 0.0000
2*x + exp(2*x) 0.0000
-2*log(cos(x)) 0.0000
None 0.0000
None 0.0000
x + asinh(2*x) 0.0000
x*(x**2 + 4*x) 0.0000
sinh(x)**5 0.0000
126*x + 3 0.0000
None 0.0000
x*log(2*x) 0.0000
(x - 2)*exp(x) 0.0000
5*sin(x)/x 0.0000
x + sin(x) + 111 0.0000
x**2 + 5*x + tan(x) 0.0000
None 0.0000
sqrt(x) 0.0000
None 0.0000
x*(x + 1) + x 0.0000
4*x*sin(x) + 4*cos(x) 0.0000
sin(acosh(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
x + sin(x + 4) 0.0000
None 0.0000
x + cos(x) + 1/x 0.0000
None 0.0000
tan(sin(x))**5 0.0000
1/x 0.0000
1/(8*x**2) 0.0000
None 0.0000
None 0.0000
None 0.0000
-sqrt(3)*sqrt(x) + x 0.0000
None 0.0000
x*(x - 1) - x 0.0000
None 0.0000
log(x + 1) + 1 0.0000
x*(x**3 + x + 8) 0.0000
log(cos(x)) - 2 0.0000
3/x**2 0.0000
x*acos(x) - x 0.0000
None 0.0000
None 0.0000
None 0.0000
exp(x) - log(cos(x)) 0.0000
4*x**2 0.0000
None 0.0000
None 0.0000
None 0.0000
4*x**(3/2) + 2*log(x)**(5/2)/5 0.0000
sqrt(x) + sin(x) 0.0000
x*atan(sqrt(x)) 0.0000
None 0.0000
None 0.0000
x**2/2 + log(x)/4 0.0000
2*sqrt(x)*cos(sqrt(x)) - 2*sin(sqrt(x)) 0.0000
x**4 0.0000
2*x**3 0.0000
1/(x**2*(x + 1)) 0.0000
cosh(3*x) 0.0000
-3 0.0000
x**2*acosh(x)/9 - 10*acosh(x)/21 0.0000
tan(2)/x**2 0.0000
None 0.0000
None 0.0000
exp(x)*sin(x) 0.0000
x**4*(x**2 + x) + x 0.0000
x + sin(log(x)) 0.0000
None 0.0000
None 0.0000
x**2/2 + tan(x) 0.0000
4*x*cosh(x) - 4*sinh(x) 0.0000
None 0.0000
x + sin(2) 0.0000
sqrt(1 - x**2) 0.0000
x + log(x)**2 0.0000
0 0.0000
(2*x + 1)/x 0.0000
None 0.0000
x**2 + tanh(4) 0.0000
2*x*(x - 3) 0.0000
24*x**3 0.0000
None 0.0000
-x + acos(x) 0.0000
-x**2 + x 0.0000
None 0.0000
None 0.0000
None 0.0000
x + 5/x 0.0000
None 0.0000
x + 5*cosh(x) 0.0000
sinh(x) - 1 0.0000
None 0.0000
2*x + 2*log(x + 1) + tan(x)**2 0.0000
None 0.0000
cos(2*x + 2) 0.0000
x + tan(x + 3) 0.0000
sin(x + 2) 0.0000
2/(pi*x) 0.0000
2*cosh(x) 0.0000
2*x - sinh(x) 0.0000
x*acos(6) 0.0000
x*(x + cos(2*x)) 0.0000
log(x + 2) 0.0000
None 0.0000
x**2/2 + 4*acosh(x) 0.0000
sqrt(x + 1) 0.0000
x**5 + 4*x 0.0000
x*sin(1) 0.0000
4*x**7/7 0.0000
32*x**2 0.0000
1 - x**2 0.0000
3*x**2/2 - sin(x) 0.0000
x**2*tan(4) 0.0000
None 0.0000
None 0.0000
-4*x - 1 0.0000
None 0.0000
log(x) + log(tanh(x) + 1) 0.0000
None 0.0000
x**3*log(x) + x**3 0.0000
None 0.0000
x**3 + sin(x) 0.0000
x**2/4 - 3 0.0000
None 0.0000
x*asin(x) + 2 0.0000
5*x**(5/2) 0.0000
None 0.0000
x*acos(x) 0.0000
1 - x 0.0000
-x - log(x) 0.0000
None 0.0000
None 0.0000
x**7/7 + (x - 1)*exp(x) 0.0000
6*x**2 + 1 0.0000
log(x + 3) 0.0000
tan(x)**3 0.0000
4*x**(3/2)/3 0.0000
3*x + 2*log(x) 0.0000
x*(2*x + 1)*exp(x) 0.0000
None 0.0000
-x**4/2 0.0000
x**2*sin(1) 0.0000
x*sin(x) 0.0000
cosh(6*x) 0.0000
3*x + sin(log(x)) 0.0000
8*log(x)/5 0.0000
x*(x + log(x)) 0.0000
None 0.0000
x*sin(x + 4) 0.0000
2*sin(x)**3*cos(x)**2/3 - cos(x)/9 0.0000
x + log(x) + 4 0.0000
log(x + 1) 0.0000
x**2 + acosh(x) 0.0000
x + sin(x) + acosh(x) 0.0000
None 0.0000
x**2*acos(x) 0.0000
x*(x + 6) 0.0000
None 0.0000
1 0.0000
x/34 0.0000
4*sin(x)**2 0.0000
-sqrt(x) 0.0000
9*(x + 4)/x 0.0000
x**(3/2)/log(4) 0.0000
None 0.0000
x/sinh(2) + x 0.0000
x**2*cosh(x) 0.0000
log(x)/3 - log(cos(x))/3 0.0000
None 0.0000
tanh(x) - 1 0.0000
2*x - 4 0.0000
None 0.0000
x*(x + acosh(x)) 0.0000
2*x*(x + 2) 0.0000
x**4/2 + log(x)/8 0.0000
None 0.0000
None 0.0000
2*x**(3/2) 0.0000
x + tan(x - 2) 0.0000
log(x) + E 0.0000
x**2 + cos(3) 0.0000
sqrt(5)*sqrt(1/x) 0.0000
None 0.0000
x/2 0.0000
x**2*(x**2 + 2*x) 0.0000
log(x)/16 0.0000
x - 3 0.0000
None 0.0000
3*x**4*(4*x/3 + 5)**(3/2)/2 0.0000
x**3*(x + 3) 0.0000
2*x**2 - log(cos(x)) 0.0000
x**2*tan(3) 0.0000
None 0.0000
None 0.0000
x - cos(4*x) 0.0000
-3*x/2 0.0000
None 0.0000
sin(x + 2) 0.0000
-3*log(cos(x)) 0.0000
-x*log(x) - x 0.0000
-1 0.0000
x*atan(x)**2 0.0000
x*exp(acos(x)) 0.0000
sin(12*x) 0.0000
2*x**4 0.0000
x*(x + cos(1)) 0.0000
None 0.0000
2*x - sinh(x) 0.0000
(x + 2)/x 0.0000
None 0.0000
x*(4*x + 1) 0.0000
None 0.0000
None 0.0000
x*(x + sin(x)) + x 0.0000
x - tanh(x) 0.0000
x + sin(4*x) 0.0000
-2*x + asin(sqrt(x)) 0.0000
x/5 + 5/2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x*(2*x + 4)**4 0.0000
None 0.0000
None 0.0000
None 0.0000
<lambdifygenerated-561>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x)) - sin(x)
<lambdifygenerated-562>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
<lambdifygenerated-564>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x - 2)
<lambdifygenerated-569>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x + (1/5)*log(x - 1) + (1/5)*arctanh(2*x)
<lambdifygenerated-569>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/3)*x + (1/5)*log(x - 1) + (1/5)*arctanh(2*x)
<lambdifygenerated-571>:2: RuntimeWarning: invalid value encountered in power
  return -4/3*sqrt(3)*x**(3/2)
<lambdifygenerated-574>:2: RuntimeWarning: divide by zero encountered in arctanh
  return exp(x) - log(arctanh(x))
<lambdifygenerated-574>:2: RuntimeWarning: invalid value encountered in arctanh
  return exp(x) - log(arctanh(x))
<lambdifygenerated-574>:2: RuntimeWarning: invalid value encountered in log
  return exp(x) - log(arctanh(x))
<lambdifygenerated-577>:2: RuntimeWarning: invalid value encountered in arccos
  return x**4*arccos(4)
<lambdifygenerated-579>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos(x))
<lambdifygenerated-584>:2: RuntimeWarning: invalid value encountered in log
  return x*log(2*x)
<lambdifygenerated-589>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x)
<lambdifygenerated-592>:2: RuntimeWarning: invalid value encountered in arccosh
  return sin(arccosh(x))
<lambdifygenerated-598>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(3)*sqrt(x) + x
<lambdifygenerated-600>:2: RuntimeWarning: divide by zero encountered in log
  return log(x + 1) + 1
<lambdifygenerated-600>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 1) + 1
<lambdifygenerated-602>:2: RuntimeWarning: invalid value encountered in log
  return log(cos(x)) - 2
<lambdifygenerated-604>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x) - x
<lambdifygenerated-605>:2: RuntimeWarning: invalid value encountered in log
  return exp(x) - log(cos(x))
<lambdifygenerated-607>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(3/2) + (2/5)*log(x)**(5/2)
<lambdifygenerated-607>:2: RuntimeWarning: invalid value encountered in log
  return 4*x**(3/2) + (2/5)*log(x)**(5/2)
<lambdifygenerated-608>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + sin(x)
<lambdifygenerated-609>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arctan(sqrt(x))
<lambdifygenerated-610>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + (1/4)*log(x)
<lambdifygenerated-611>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x)*cos(sqrt(x)) - 2*sin(sqrt(x))
<lambdifygenerated-614>:2: RuntimeWarning: divide by zero encountered in divide
  return 1/(x**2*(x + 1))
<lambdifygenerated-617>:2: RuntimeWarning: invalid value encountered in arccosh
  return (1/9)*x**2*arccosh(x) - 10/21*arccosh(x)
<lambdifygenerated-621>:2: RuntimeWarning: invalid value encountered in log
  return x + sin(log(x))
<lambdifygenerated-625>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(1 - x**2)
<lambdifygenerated-626>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)**2
<lambdifygenerated-632>:2: RuntimeWarning: invalid value encountered in arccos
  return -x + arccos(x)
<lambdifygenerated-637>:2: RuntimeWarning: divide by zero encountered in log
  return 2*x + 2*log(x + 1) + tan(x)**2
<lambdifygenerated-637>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 2*log(x + 1) + tan(x)**2
<lambdifygenerated-644>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(6)
<lambdifygenerated-646>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 2)
<lambdifygenerated-647>:2: RuntimeWarning: invalid value encountered in arccosh
  return (1/2)*x**2 + 4*arccosh(x)
<lambdifygenerated-648>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-657>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + log(tanh(x) + 1)
<lambdifygenerated-657>:2: RuntimeWarning: divide by zero encountered in log
  return log(x) + log(tanh(x) + 1)
<lambdifygenerated-658>:2: RuntimeWarning: invalid value encountered in log
  return x**3*log(x) + x**3
<lambdifygenerated-661>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(x) + 2
<lambdifygenerated-662>:2: RuntimeWarning: invalid value encountered in power
  return 5*x**(5/2)
<lambdifygenerated-663>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x)
<lambdifygenerated-665>:2: RuntimeWarning: invalid value encountered in log
  return -x - log(x)
<lambdifygenerated-668>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 3)
<lambdifygenerated-670>:2: RuntimeWarning: invalid value encountered in power
  return (4/3)*x**(3/2)
<lambdifygenerated-671>:2: RuntimeWarning: invalid value encountered in log
  return 3*x + 2*log(x)
<lambdifygenerated-677>:2: RuntimeWarning: invalid value encountered in log
  return 3*x + sin(log(x))
<lambdifygenerated-678>:2: RuntimeWarning: invalid value encountered in log
  return (8/5)*log(x)
<lambdifygenerated-679>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x))
<lambdifygenerated-682>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 4
<lambdifygenerated-683>:2: RuntimeWarning: divide by zero encountered in log
  return log(x + 1)
<lambdifygenerated-683>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 1)
<lambdifygenerated-684>:2: RuntimeWarning: invalid value encountered in arccosh
  return x**2 + arccosh(x)
<lambdifygenerated-685>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + sin(x) + arccosh(x)
<lambdifygenerated-686>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*arccos(x)
<lambdifygenerated-691>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x)
<lambdifygenerated-693>:2: RuntimeWarning: invalid value encountered in power
  return x**(3/2)/log(4)
<lambdifygenerated-696>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*log(x) - 1/3*log(cos(x))
<lambdifygenerated-699>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*(x + arccosh(x))
<lambdifygenerated-701>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**4 + (1/8)*log(x)
<lambdifygenerated-702>:2: RuntimeWarning: invalid value encountered in power
  return 2*x**(3/2)
<lambdifygenerated-704>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + e
<lambdifygenerated-706>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(5)*sqrt(x**(-1.0))
<lambdifygenerated-709>:2: RuntimeWarning: invalid value encountered in log
  return (1/16)*log(x)
<lambdifygenerated-711>:2: RuntimeWarning: invalid value encountered in power
  return (3/2)*x**4*((4/3)*x + 5)**(3/2)
<lambdifygenerated-713>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2 - log(cos(x))
<lambdifygenerated-718>:2: RuntimeWarning: invalid value encountered in log
  return -3*log(cos(x))
<lambdifygenerated-719>:2: RuntimeWarning: invalid value encountered in log
  return -x*log(x) - x
<lambdifygenerated-722>:2: RuntimeWarning: invalid value encountered in arccos
  return x*exp(arccos(x))
<lambdifygenerated-732>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*x + arcsin(sqrt(x))
<lambdifygenerated-732>:2: RuntimeWarning: invalid value encountered in arcsin
  return -2*x + arcsin(sqrt(x))
mean: 0.0
top: 0.0
avaliation.py:113: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
<lambdifygenerated-737>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - sinh(x)
<lambdifygenerated-740>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + (5/2)*x*exp(-6)*log(x)
<lambdifygenerated-742>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
<lambdifygenerated-744>:2: RuntimeWarning: invalid value encountered in log
  return x*sin(log(x)) + 2
<lambdifygenerated-746>:2: RuntimeWarning: invalid value encountered in log
  return -2/3*log(cos(x))
<lambdifygenerated-747>:2: RuntimeWarning: invalid value encountered in power
  return x**(5/2) + 2
<lambdifygenerated-748>:2: RuntimeWarning: invalid value encountered in log
  return -1/4*log(x + 3) + (1/4)*log(sin(x) + 1)
<lambdifygenerated-749>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x)) + x
<lambdifygenerated-750>:2: RuntimeWarning: invalid value encountered in log
  return x**3*log(x)
<lambdifygenerated-751>:2: RuntimeWarning: invalid value encountered in log
  return x + 3*log(x)
<lambdifygenerated-757>:2: RuntimeWarning: invalid value encountered in arccos
  return x**3*arccos(x)
<lambdifygenerated-765>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + sqrt(3)*sqrt(x**3)
<lambdifygenerated-766>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(-x)
<lambdifygenerated-774>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - 4*log(x + 4)
<lambdifygenerated-775>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-776>:2: RuntimeWarning: divide by zero encountered in arctanh
  return sin(x) + arctanh(x)
<lambdifygenerated-776>:2: RuntimeWarning: invalid value encountered in arctanh
  return sin(x) + arctanh(x)
<lambdifygenerated-780>:2: RuntimeWarning: invalid value encountered in log
  return x**2*(x + log(x)) + x
<lambdifygenerated-781>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*x*sqrt(x**(-1.0))
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
(x + 3)/(2*x) 0.0000
None 0.0000
None 0.0000
x**2*tanh(3) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sqrt(x) - sinh(x) 0.0000
None 0.0000
3*x + 4 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
cos(2*x)/x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2/2 + 5*x*exp(-6)*log(x)/2 0.0000
None 0.0000
x*(3*x + 3) 0.0000
None 0.0000
-log(cos(x)) 0.0000
None 0.0000
None 0.0000
x*(x + cosh(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*sin(log(x)) + 2 0.0000
None 0.0000
None 0.0000
x**2*(2*x + 2) 0.0000
None 0.0000
-2*log(cos(x))/3 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**(5/2) + 2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-log(x + 3)/4 + log(sin(x) + 1)/4 0.0000
None 0.0000
None 0.0000
x*(x + log(x)) + x 0.0000
None 0.0000
x**3*log(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x + 3*log(x) 0.0000
None 0.0000
(x**2 - 2*x + 2)*exp(x) 0.0000
None 0.0000
exp(x) + sin(x) 0.0000
None 0.0000
None 0.0000
tan(x)**4 0.0000
None 0.0000
2*x - sin(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
x + exp(x) 0.0000
x**3*acos(x) 0.0000
None 0.0000
x*(x + 2) + x 0.0000
None 0.0000
None 0.0000
asinh(x + 1) 0.0000
None 0.0000
x*exp(5) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x + 3/x 0.0000
None 0.0000
None 0.0000
x**3*tan(1) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-x**2*cos(x)/2 + x/2 + 5*sin(x)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
tanh(x/4) 0.0000
x + sqrt(3)*sqrt(x**3) 0.0000
None 0.0000
None 0.0000
x*acos(-x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
316*x**4 0.0000
None 0.0000
x + exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-x*cosh(x) - sinh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x)*cosh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
-2/x 0.0000
None 0.0000
None 0.0000
x**2 + x + 2*sin(x) 0.0000
x + 125 0.0000
2*x - 4*log(x + 4) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
4*log(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x) + atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
cos(x) + tan(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2 + 3 0.0000
None 0.0000
None 0.0000
None 0.0000
x + x*exp(2) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x**2*(x + log(x)) + x 0.0000
None 0.0000
None 0.0000
2*x*sqrt(1/x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*sin(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*(x - 1)**2 0.0000
None 0.0000
None 0.0000
None 0.0000
x + 4 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
mean: 0.0
top: 0.0
Traceback (most recent call last):
  File "avaliation.py", line 125, in <module>
    response = ppo_trainer.generate(query.to(device), **generation_kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/trainer/ppo_trainer.py", line 457, in generate
    response = self.accelerator.unwrap_model(self.model).generate(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/models/modeling_value_head.py", line 198, in generate
    return self.pretrained_model.generate(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/generation/utils.py", line 1648, in generate
    return self.sample(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/generation/utils.py", line 2730, in sample
    outputs = self(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 1076, in forward
    transformer_outputs = self.transformer(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 900, in forward
    outputs = block(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 390, in forward
    attn_outputs = self.attn(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 331, in forward
    attn_output, attn_weights = self._attn(query, key, value, attention_mask, head_mask)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 201, in _attn
    mask_value = torch.full([], mask_value, dtype=attn_weights.dtype).to(attn_weights.device)
KeyboardInterrupt