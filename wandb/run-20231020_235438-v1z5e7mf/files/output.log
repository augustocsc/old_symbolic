/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/trainer/ppo_trainer.py:239: UserWarning: No dataset is provided. Make sure to set config.batch_size to the correct value before training.
  warnings.warn(
Index(['type', 'name', 'expression'], dtype='object')
Working with expression:  2 * x[0] + 3
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x**4 + 2*x 0.0000
None 0.0000
x**2/sin(1) 0.0207
4*x*asinh(x) 0.0906
None 0.0000
2*tan(x) 0.4731
None 0.0000
x**2 - 3*x 0.0245
x*(x - 8) 0.0244
None 0.0000
None 0.0000
2*x + cosh(x) 0.0000
None 0.0000
6*x + 2 0.3333
2*x**2 + 5*x 0.0124
x**(3/2)/4 0.0000
None 0.0000
exp(3*x + 2) 0.0000
x**2 - sin(x) 0.0245
3*x**2*asin(2*x)**2 0.0000
3*x**3 + x*log(x) + x 0.0000
1 0.0000
None 0.0000
None 0.0000
x*(x**3 + x + 5) 0.0000
-x**2/4 + x 0.0908
-2*x**3 + x 0.0001
None 0.0000
5*x**3 + 2*x 0.0001
x**2 + x - 1 0.0245
exp(2*x**2 + 5)/4 0.0000
x/log(3)**2 0.6305
x**9 + 2*x 0.0000
None 0.0000
sqrt(x) + x + 3 0.0000
x**3*atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
1174*x**5 0.0000
None 0.0000
None 0.0000
x**2 + sin(x) 0.0245
None 0.0000
(x + 8)/x 0.5003
x**2/2 + x*log(6*x) - 4*x 0.0000
-5*x**5 0.0000
x - 1/x**2 0.6665
5 - 6*x 0.2000
x**20 + 5*x 0.0000
None 0.0000
sin(4*x)/4 0.5000
5*log(x) 0.0000
2*x*(2*x + 3) 0.0062
x**5/5 - x**3/3 0.0000
x**2 - x + cos(x) 0.0245
None 0.0000
2*x**2*log(x) 0.0000
atanh(2)/(2*x) 0.0000
log(x) - tan(x) 0.0000
asin(x + 5) 0.0000
sqrt(3)*x**(3/2)/3 0.0000
None 0.0000
(x + 5)**2 0.0242
1/(x**2 - x) 0.5000
x*cos(2*x) 0.4635
None 0.0000
x*(x**2 + x) 0.0003
None 0.0000
x*(4 - x) 0.0245
x**2 + x*log(x**2) 0.0243
None 0.0000
5*x**2 + x 0.0050
sqrt(2*x**2 + 2*x + 15) + exp(x) 0.0000
None 0.0000
x**2 + 2*x 0.0245
x**3/8 0.0023
x*acos(3*x) - sqrt(1 - x**2)/3 0.0000
x**4/4 - x - log(cos(x)) 0.0000
<lambdifygenerated-10>:2: RuntimeWarning: invalid value encountered in power
  return (1/4)*x**(3/2)
<lambdifygenerated-13>:2: RuntimeWarning: invalid value encountered in arcsin
  return 3*x**2*arcsin(2*x)**2
<lambdifygenerated-14>:2: RuntimeWarning: invalid value encountered in log
  return 3*x**3 + x*log(x) + x
<lambdifygenerated-21>:2: RuntimeWarning: overflow encountered in exp
  return (1/4)*exp(2*x**2 + 5)
<lambdifygenerated-24>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x + 3
<lambdifygenerated-25>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x**3*arctanh(x)
<lambdifygenerated-25>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**3*arctanh(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-29>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x*log(6*x) - 4*x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-35>:2: RuntimeWarning: invalid value encountered in log
  return 5*log(x)
<lambdifygenerated-39>:2: RuntimeWarning: invalid value encountered in log
  return 2*x**2*log(x)
<lambdifygenerated-40>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*arctanh(2)/x
<lambdifygenerated-41>:2: RuntimeWarning: invalid value encountered in log
  return log(x) - tan(x)
<lambdifygenerated-42>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 5)
<lambdifygenerated-43>:2: RuntimeWarning: invalid value encountered in power
  return (1/3)*sqrt(3)*x**(3/2)
<lambdifygenerated-54>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(3*x) - 1/3*sqrt(1 - x**2)
<lambdifygenerated-54>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccos(3*x) - 1/3*sqrt(1 - x**2)
<lambdifygenerated-55>:2: RuntimeWarning: invalid value encountered in log
  return (1/4)*x**4 - x - log(cos(x))
<lambdifygenerated-71>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + 2*x + log(x)
<lambdifygenerated-73>:2: RuntimeWarning: invalid value encountered in power
  return (2/7)*x**(7/2) - x**2
<lambdifygenerated-74>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + 2*log(x)
<lambdifygenerated-81>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) - log(x)
<lambdifygenerated-81>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) - log(x)
<lambdifygenerated-82>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-82>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-88>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(3)*sqrt(x)*arccos(x)
<lambdifygenerated-88>:2: RuntimeWarning: invalid value encountered in arccos
  return sqrt(3)*sqrt(x)*arccos(x)
<lambdifygenerated-91>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + 4*x
<lambdifygenerated-94>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(3)*sqrt(x) + x
x**3*log(4)/3 0.0006
x**3/3 + x**2 0.0009
None 0.0000
x/28 0.5045
2*x**3/3 + 3*x 0.0004
x**2/2 - sinh(x) 0.0000
x**4/12 + x**3/3 0.0000
None 0.0000
None 0.0000
None 0.0000
6*x**3 0.0000
None 0.0000
3*x**2 - 16*x 0.0083
x*exp(-2*x) 0.0000
None 0.0000
(x**2 + x)**3 0.0000
None 0.0000
x**3*log(2) 0.0004
x**3/3 + 9*x**2/2 0.0009
x**2 + x + exp(x) 0.0000
x*atan(2*x) - x - 2*atan(2*x) 0.3710
x*(x**6 + 4*x) 0.0000
x**2 + 2*x + log(x) 0.0000
x**2/sinh(4) 0.3659
2*x**(7/2)/7 - x**2 0.0000
None 0.0000
x**2/2 + 2*log(x) 0.0000
4 - x**2 0.0244
-x**4/4 + 2*x 0.0000
None 0.0000
None 0.0000
x**2*cos(3)/2 + x**2/2 0.4973
None 0.0000
None 0.0000
None 0.0000
1/(23*x) 0.5000
12*(x + 3)**2 0.0021
x**2/2 - x - exp(x) 0.0000
sqrt(x) - log(x) 0.0000
x*atanh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x + tan(1) 0.9881
-x**3 - 4*x 0.0003
2*x**2 + 8*x 0.0124
None 0.0000
x + 3 0.6666
None 0.0000
sin(3*x) 0.5001
sqrt(3)*sqrt(x)*acos(x) 0.0000
x**3/36 0.0105
None 0.0000
None 0.0000
2*x**3/3 + 5*x**2/2 0.0004
None 0.0000
2*x**(5/2)/5 + 4*x 0.0000
-x*cos(x) + x 0.6270
None 0.0000
2*x**2*tan(x) + x 0.0012
sqrt(3)*sqrt(x) + x 0.0000
None 0.0000
None 0.0000
x**2 + log(x) 0.0000
None 0.0000
x*log(x**5) 0.0000
sin(x)/cos(x) 0.4906
None 0.0000
None 0.0000
None 0.0000
2*x**3/3 + x**2 0.0004
-x**3 + 10*x 0.0003
x**2*exp(2*x)/2 + exp(2*x)/2 0.0000
None 0.0000
3*x**2/2 + 2*x 0.0164
-1/(4*log(x)**2) 0.0000
6*log(x) 0.0000
x + sin(5) 0.6664
-x**2/2 + x*log(x) + x 0.0000
2*x**3/3 + 9*x**2/2 0.0004
None 0.0000
None 0.0000
x**2/2 + x/4 0.0478
4*x**2*exp(2*x) 0.0000
2*x**3/3 0.0004
-x*exp(x) + sin(x) 0.0000
-3*x + 3*cos(x) 0.2859
(x + 1)*(3*x + 5) 0.0083
0 0.0000
None 0.0000
x**5 + x + exp(x) 0.0000
x**4/64 0.0002
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x + acosh(sqrt(x)) 0.0000
x*tanh(2*x) + x - log(tanh(2*x) + 1)/2 0.0000
None 0.0000
(x**2 - x)**2 0.0000
9*log(x) 0.0000
x**3*(x + 2) 0.0000
x + tan(x + 2) 0.6263
None 0.0000
x**3/(3*sin(1)) 0.0007
x*(exp(x) + 4) 0.0000
x**3*(x**2 + x) 0.0000
None 0.0000
None 0.0000
x**2 + 2*x 0.0245
x**6/6 + x**2/2 0.0000
(x + 2)*log(x) 0.0000
3*x**2*cosh(x) + 3*x*sinh(x) - 3*cosh(x) 0.0000
(x**2 + x)/x 0.6666
x**2/2 + x*sin(x) - cos(x) 0.0481
12*x**2 - x + 5*log(x + 5) 0.0000
x*(x + atan(2*x))**3 0.0000
None 0.0000
2*x - 4 0.9448
None 0.0000
2*x**(5/2)/5 + 2*x**3/3 + exp(x) 0.0000
None 0.0000
None 0.0000
(x + sin(x))/x 0.5000
x*tan(1) 0.8181
x**2 - log(cos(x)) 0.0000
x**2*log(x) + x 0.0000
4*x**(5/2) 0.0000
None 0.0000
exp(2*x**2)/4 0.0000
2*x + 10/x 0.9735
x**2 0.0245
x**2 + sin(x) 0.0245
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
9*x/5 0.9068
x**2 + x*log(x) + 2*x 0.0000
x**3/(x + 3) 0.0244
x**2*cosh(1) 0.0160
x**2/5 0.1112
x**3/3 - x**2*log(x)/2 + x 0.0000
x**6/6 + 3*x**5/5 0.0000
x/(x**2 + 2) 0.5000
x*tan(4) 0.7035
cosh(x + 1) 0.0000
x**2/2 + log(2*x + 1) 0.0000
x**4/4 - x**2/2 0.0000
log(2*x)/x 0.0000
x**2/2 + x*tan(1) 0.0478
x**2/2 + x*sin(1) 0.0478
x**2*sinh(1)/2 0.0410
cosh(x + 5) 0.0000
None 0.0000
2*x - 2 0.9600
None 0.0000
(x**2 + 2*x)**3 0.0000
2*x**2*atanh(x) 0.0000
x**5/5 + 5*x**2/2 0.0000
None 0.0000
-x*atanh(x) + log(x + 1) - atanh(x) 0.0000
x*(exp(x) + 2) 0.0000
x/(x**2 + 1) 0.5000
None 0.0000
x**5/5 + 7*x**4/4 0.0000
2*x*log(x**2) - 2*x 0.1307
pi*x**2/2 0.0157
2*x**(5/2)/5 0.0000
x**2/sin(x) + x 0.0035
2*x*(x - 2) 0.0124
(x**2 - x)**2 0.0000
x*atan(x) + log(x**2 + 1)/2 - atan(x) 0.4395
x**3/3 + 5*x**2/2 0.0009
None 0.0000
<lambdifygenerated-95>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + log(x)
<lambdifygenerated-96>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x**5)
<lambdifygenerated-102>:2: RuntimeWarning: invalid value encountered in log
  return -(1/4)/log(x)**2
<lambdifygenerated-103>:2: RuntimeWarning: invalid value encountered in log
  return 6*log(x)
<lambdifygenerated-105>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 + x*log(x) + x
<lambdifygenerated-116>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + arccosh(sqrt(x))
<lambdifygenerated-117>:2: RuntimeWarning: divide by zero encountered in log
  return x*tanh(2*x) + x - 1/2*log(tanh(2*x) + 1)
<lambdifygenerated-119>:2: RuntimeWarning: invalid value encountered in log
  return 9*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-127>:2: RuntimeWarning: invalid value encountered in log
  return (x + 2)*log(x)
<lambdifygenerated-131>:2: RuntimeWarning: invalid value encountered in log
  return 12*x**2 - x + 5*log(x + 5)
<lambdifygenerated-134>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + (2/3)*x**3 + exp(x)
<lambdifygenerated-137>:2: RuntimeWarning: invalid value encountered in log
  return x**2 - log(cos(x))
<lambdifygenerated-138>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x) + x
<lambdifygenerated-139>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(5/2)
<lambdifygenerated-140>:2: RuntimeWarning: overflow encountered in exp
  return (1/4)*exp(2*x**2)
<lambdifygenerated-145>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + x*log(x) + 2*x
<lambdifygenerated-149>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 - 1/2*x**2*log(x) + x
<lambdifygenerated-154>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + log(2*x + 1)
<lambdifygenerated-156>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x)/x
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-163>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x**2*arctanh(x)
<lambdifygenerated-163>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x**2*arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: divide by zero encountered in arctanh
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in arctanh
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: divide by zero encountered in log
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in log
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-165>:2: RuntimeWarning: invalid value encountered in subtract
  return -x*arctanh(x) + log(x + 1) - arctanh(x)
<lambdifygenerated-171>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2)
You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
mean: 0.07989633828401566
top: 0.9881134033203125
Saving results...
Working with expression:  x[0]**2 - 5 * x[0] + 6
<lambdifygenerated-178>:2: RuntimeWarning: invalid value encountered in power
  return 2485*x**(3/2)
<lambdifygenerated-180>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x + sin(x))
<lambdifygenerated-181>:2: RuntimeWarning: invalid value encountered in log
  return 3*log((1/2)*x)
<lambdifygenerated-185>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x + 4)
<lambdifygenerated-186>:2: RuntimeWarning: invalid value encountered in power
  return x*(x**(4/3) + 3) + x
<lambdifygenerated-192>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x) + 4
<lambdifygenerated-192>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x) + 4
<lambdifygenerated-196>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 + log(x)
<lambdifygenerated-203>:2: RuntimeWarning: invalid value encountered in power
  return log(x**(-5/2))
x**3*cosh(1)/13 0.0603
None 0.0000
2485*x**(3/2) 0.0000
None 0.0000
None 0.0000
x/2 + cos(x) 0.3968
x*(sqrt(x) + x + sin(x)) 0.0000
None 0.0000
3*log(x/2) 0.0000
3*x**5/16 0.0000
None 0.0000
None 0.0000
x*cos(3*x) + sin(x/3) 0.3963
x + sin(exp(3*x))/3 0.3967
log(2*x + 4) 0.0000
None 0.0000
x*(x**(4/3) + 3) + x 0.0000
None 0.0000
None 0.0000
x**4/10 0.0009
x*(x + 10) 0.7779
None 0.0000
None 0.0000
None 0.0000
(x + 5)/x 0.3969
None 0.0000
4212563*x**6/3 0.0000
None 0.0000
3*x*(2*x + sin(x)) 0.1166
atanh(x) + 4 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
7*(x + 6)**3/11 0.0114
None 0.0000
x**2/10 + 2*sin(x) 0.4222
None 0.0000
x*(x + sin(2*x)) 0.9127
None 0.0000
x**3/3 + log(x) 0.0000
None 0.0000
None 0.0000
x**2 + 5*x 0.8401
None 0.0000
cos(5*x)/12 0.3968
sinh(x + 4) 0.0000
-exp(-2*x)/15 0.0000
2*sinh(2*x) 0.0000
None 0.0000
None 0.0000
atan(x)/2 0.3968
None 0.0000
log(x**(-5/2)) 0.0000
None 0.0000
None 0.0000
3*x + exp(x) 0.0000
x*cos(2*x) - sin(2*x)**2/8 0.3972
None 0.0000
None 0.0000
-exp(x + 1) 0.0000
-3*x**(2/3)/2 + x*log(x) - x 0.0000
None 0.0000
x/37 0.3968
sqrt(2)/sqrt(x) 0.0000
x**3/3 + (x - 3)*exp(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
1/(2*x**10) 0.3968
None 0.0000
None 0.0000
sin(2*x + 2) 0.3968
None 0.0000
5/(4*x) 0.3968
None 0.0000
x**3/12 + x*log(x) - x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x*cosh(x) - x 0.0000
None 0.0000
None 0.0000
None 0.0000
x + log(1 - 2*x)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
-cos(2*x + 6) 0.3968
None 0.0000
x**2/(2*cos(4)) 0.2718
None 0.0000
sinh(2*x)/4 0.0000
x**4*cosh(5)/5 0.0000
None 0.0000
-2*x**(4/3)/5 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
sin(x + 1) 0.3968
x**2 + tanh(1) 0.9131
None 0.0000
x**3/3 + x + sinh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x*cos(sin(x)) 0.3968
x**2*exp(x + 4) 0.0000
None 0.0000
None 0.0000
None 0.0000
x - 1/x**4 0.3967
4*x**(3/4) 0.0000
None 0.0000
None 0.0000
log(sin(3*x))/16 0.0000
None 0.0000
None 0.0000
None 0.0000
-x - log(tanh(x) + 1) 0.0000
None 0.0000
x**5/5 + cosh(x) 0.0000
66*x**4/5 0.0000
None 0.0000
None 0.0000
266*x**5/5 0.0000
x*(2*x + exp(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
3*x + asin(x) 0.0000
x**5/5 0.0000
x**4 - x**3/3 0.0001
x*acos(x**(-2)) 0.3966
None 0.0000
2*x*atanh(x) 0.0000
None 0.0000
-1/(9*cos(exp(x))**4) 0.3946
None 0.0000
None 0.0000
None 0.0000
-2*x**3 + x**2/2 0.0038
None 0.0000
None 0.0000
2*exp(4*x) 0.0000
None 0.0000
12*x**2 + 3*x 0.0565
None 0.0000
3*sin(x)**2/4 - 1/(2*x**12) 0.3969
x + 10 0.3971
9*x**(3/2) 0.0000
-3*x**2/4 - x + 7*sin(2*x)/2 0.2734
x - 2*log(x + cos(x**2)) 0.0000
None 0.0000
None 0.0000
9*x**(3/2) 0.0000
x*(x**(3/2) + 3) 0.0000
log(x) + exp(4) 0.0000
None 0.0000
4*x*(x + 4) 0.1792
5*x*sin(x) + 5*cos(x) 0.3925
None 0.0000
x*(x + 1/3)**(3/2) 0.0000
2 0.0000
None 0.0000
x*sinh(x) - x - 2*sin(x)**(3/2)/3 0.0000
None 0.0000
x*cos(x) - x + sinh(x) 0.0000
None 0.0000
None 0.0000
10*x 0.3939
1/(16*x**10) 0.3968
None 0.0000
sinh(x**(3/2)) 0.0000
None 0.0000
3*x**4/8 0.0002
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-x - log(tan(x)) 0.0000
tanh(1)/x**2 0.3968
x + exp(2*x/3) - log(tanh(2*x) + 1) 0.0000
2*sin(x) 0.3969
None 0.0000
None 0.0000
x**(1/26) + x**(7/4)/7 0.0000
None 0.0000
None 0.0000
5*x*exp(sqrt(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
10*x 0.3939
-4*x**(3/2)/3 0.0000
x + exp(3*x/2) 0.0000
-4*x - 2*(3*x + 3)**(3/2)/3 0.0000
None 0.0000
-2*x**2 - x*cos(log(x))/2 0.0000
x**(7/2)/10 0.0000
None 0.0000
10 - 10*x 0.3964
None 0.0000
-x/5 0.3969
None 0.0000
None 0.0000
-log(cos(10*x))/10 0.0000
log(cosh(5*x)) 0.4119
None 0.0000
None 0.0000
None 0.0000
(x + exp(x) + 2)/x 0.0000
7/x**6 0.3968
None 0.0000
-x**2 + cos(1)/2 0.2477
None 0.0000
x + cos(2*x) 0.3967
2*cos(2*x) 0.3968
(5 - x)/x 0.3968
None 0.0000
-6*x**(5/2) 0.0000
None 0.0000
x*sin(atanh(x)) 0.0000
x + asinh(3*x) 0.3967
None 0.0000
None 0.0000
x*(2*x + 1) 0.3962
None 0.0000
None 0.0000
-x**2/2 + (x + exp(x))*log(x) 0.0000
None 0.0000
x + asinh(3*x) 0.3967
None 0.0000
None 0.0000
0 0.0000
None 0.0000
-2*x - log(x + 2)/2 - 1/(2*x**12) 0.0000
<lambdifygenerated-207>:2: RuntimeWarning: invalid value encountered in power
  return -3/2*x**(2/3) + x*log(x) - x
<lambdifygenerated-207>:2: RuntimeWarning: invalid value encountered in log
  return -3/2*x**(2/3) + x*log(x) - x
<lambdifygenerated-209>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(2)/sqrt(x)
<lambdifygenerated-214>:2: RuntimeWarning: invalid value encountered in log
  return (1/12)*x**3 + x*log(x) - x
<lambdifygenerated-216>:2: RuntimeWarning: invalid value encountered in log
  return x + (1/2)*log(1 - 2*x)
<lambdifygenerated-221>:2: RuntimeWarning: invalid value encountered in power
  return -2/5*x**(4/3)
<lambdifygenerated-228>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(3/4)
<lambdifygenerated-229>:2: RuntimeWarning: invalid value encountered in log
  return (1/16)*log(sin(3*x))
<lambdifygenerated-230>:2: RuntimeWarning: divide by zero encountered in log
  return -x - log(tanh(x) + 1)
<lambdifygenerated-235>:2: RuntimeWarning: invalid value encountered in arcsin
  return 3*x + arcsin(x)
<lambdifygenerated-239>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 2*x*arctanh(x)
<lambdifygenerated-239>:2: RuntimeWarning: invalid value encountered in arctanh
  return 2*x*arctanh(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-246>:2: RuntimeWarning: invalid value encountered in power
  return 9*x**(3/2)
<lambdifygenerated-248>:2: RuntimeWarning: invalid value encountered in log
  return x - 2*log(x + cos(x**2))
<lambdifygenerated-249>:2: RuntimeWarning: invalid value encountered in power
  return 9*x**(3/2)
<lambdifygenerated-250>:2: RuntimeWarning: invalid value encountered in power
  return x*(x**(3/2) + 3)
<lambdifygenerated-251>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + exp(4)
<lambdifygenerated-254>:2: RuntimeWarning: invalid value encountered in power
  return x*(x + 1/3)**(3/2)
<lambdifygenerated-256>:2: RuntimeWarning: invalid value encountered in power
  return x*sinh(x) - x - 2/3*sin(x)**(3/2)
<lambdifygenerated-260>:2: RuntimeWarning: invalid value encountered in power
  return sinh(x**(3/2))
<lambdifygenerated-260>:2: RuntimeWarning: overflow encountered in sinh
  return sinh(x**(3/2))
<lambdifygenerated-262>:2: RuntimeWarning: invalid value encountered in log
  return -x - log(tan(x))
<lambdifygenerated-264>:2: RuntimeWarning: divide by zero encountered in log
  return x + exp((2/3)*x) - log(tanh(2*x) + 1)
<lambdifygenerated-266>:2: RuntimeWarning: invalid value encountered in power
  return x**(1/26) + (1/7)*x**(7/4)
<lambdifygenerated-267>:2: RuntimeWarning: invalid value encountered in sqrt
  return 5*x*exp(sqrt(x))
<lambdifygenerated-269>:2: RuntimeWarning: invalid value encountered in power
  return -4/3*x**(3/2)
<lambdifygenerated-271>:2: RuntimeWarning: invalid value encountered in power
  return -4*x - 2/3*(3*x + 3)**(3/2)
<lambdifygenerated-272>:2: RuntimeWarning: invalid value encountered in log
  return -2*x**2 - 1/2*x*cos(log(x))
<lambdifygenerated-273>:2: RuntimeWarning: invalid value encountered in power
  return (1/10)*x**(7/2)
<lambdifygenerated-276>:2: RuntimeWarning: invalid value encountered in log
  return -1/10*log(cos(10*x))
<lambdifygenerated-284>:2: RuntimeWarning: invalid value encountered in power
  return -6*x**(5/2)
<lambdifygenerated-285>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*sin(arctanh(x))
<lambdifygenerated-285>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*sin(arctanh(x))
<lambdifygenerated-285>:2: RuntimeWarning: invalid value encountered in sin
  return x*sin(arctanh(x))
<lambdifygenerated-288>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 + (x + exp(x))*log(x)
<lambdifygenerated-291>:2: RuntimeWarning: invalid value encountered in log
  return -2*x - 1/2*log(x + 2) - (1/2)/x**12
mean: 0.07413256913423538
top: 0.9130680561065674
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
cos(x**2)/(2*x**4) 0.3968
x**2*(x + cosh(x)) 0.0000
None 0.0000
None 0.0000
824*x*log(x)/5 0.0000
x + 3 0.3968
50*x**4/3 0.0000
-18*x**(3/2) + 5*log(x)**2/2 0.0000
None 0.0000
sqrt(x) + log(tan(x)) 0.0000
None 0.0000
-x**2/2 - x - log(-tanh(x)) 0.0000
None 0.0000
104*x**6 0.0000
x + 6*log(x) 0.0000
x + asinh(x + 1) 0.3967
x*cos(acosh(x)) + cos(acosh(x)) 0.0000
x**4/10 0.0009
2*x + exp(-x) 0.0000
None 0.0000
None 0.0000
2*x - log(cos(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*atan(x) 0.4014
log(1 + 1/tan(x**4))/2 0.0000
None 0.0000
9*x**4 + x 0.0000
sqrt(x) + atanh(x) 0.0000
2*x + (x + 5)*exp(x) 0.0000
cosh(2*x) 0.0000
-cos(x + 3) 0.3968
None 0.0000
exp(3*x/2) 0.0000
None 0.0000
None 0.0000
x*exp(-2) 0.3968
None 0.0000
None 0.0000
x**3/2 + 2*x 0.0151
(x + 1)*cos(2*x) 0.3972
None 0.0000
log(x)**2*sin(1) 0.0000
None 0.0000
None 0.0000
None 0.0000
x*exp(sqrt(x)) 0.0000
None 0.0000
None 0.0000
10820*x**9/9 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
-1/(2*x) 0.3968
None 0.0000
None 0.0000
atanh(2*x) 0.0000
None 0.0000
None 0.0000
3*E*x/2 0.3961
None 0.0000
-tan(x - 4) 0.3968
-x + x*sin(1) 0.3969
x**2/4 + 8*x/5 0.4665
None 0.0000
None 0.0000
exp(x/10) 0.4426
None 0.0000
8*x**3 + 5*x**2 0.0010
None 0.0000
None 0.0000
2*x*(x + 3) + x 0.3937
168*x**5/5 0.0000
None 0.0000
None 0.0000
sin(acosh(x))*cos(x) + cosh(x)**2/2 0.0000
x*(tan(3) + 3) 0.3964
None 0.0000
cosh(x + 1) 0.0000
3*x*log(sqrt(x)) 0.0000
4*tan(x) 0.3969
x**8/3 0.0000
None 0.0000
None 0.0000
None 0.0000
4*(x + 2)**3/3 0.0057
x*cos(x + 3) 0.3965
44*tan(x)**2/3 0.0401
37808*x + 3336 - 6672/x**2 0.0014
x + 2*cos(x) 0.3967
None 0.0000
None 0.0000
sqrt(x) + log(3*x/2) 0.0000
x - cos(x)**2 0.3967
2*sqrt(x)*cos(x) + 2*sqrt(x) 0.0000
None 0.0000
2*x*tanh(x)**4 0.3965
5*x + log(x) 0.0000
None 0.0000
None 0.0000
<lambdifygenerated-294>:2: RuntimeWarning: invalid value encountered in log
  return (824/5)*x*log(x)
<lambdifygenerated-297>:2: RuntimeWarning: invalid value encountered in power
  return -18*x**(3/2) + (5/2)*log(x)**2
<lambdifygenerated-297>:2: RuntimeWarning: invalid value encountered in log
  return -18*x**(3/2) + (5/2)*log(x)**2
<lambdifygenerated-298>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + log(tan(x))
<lambdifygenerated-298>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + log(tan(x))
<lambdifygenerated-299>:2: RuntimeWarning: invalid value encountered in log
  return -1/2*x**2 - x - log(-tanh(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-301>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-303>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*cos(arccosh(x)) + cos(arccosh(x))
<lambdifygenerated-306>:2: RuntimeWarning: invalid value encountered in log
  return 2*x - log(cos(x))
<lambdifygenerated-308>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(1 + tan(x**4)**(-1.0))
<lambdifygenerated-310>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arctanh(x)
<lambdifygenerated-310>:2: RuntimeWarning: divide by zero encountered in arctanh
  return sqrt(x) + arctanh(x)
<lambdifygenerated-310>:2: RuntimeWarning: invalid value encountered in arctanh
  return sqrt(x) + arctanh(x)
<lambdifygenerated-318>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**2*sin(1)
<lambdifygenerated-319>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*exp(sqrt(x))
<lambdifygenerated-322>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(2*x)
<lambdifygenerated-331>:2: RuntimeWarning: invalid value encountered in arccosh
  return sin(arccosh(x))*cos(x) + (1/2)*cosh(x)**2
<lambdifygenerated-334>:2: RuntimeWarning: invalid value encountered in sqrt
  return 3*x*log(sqrt(x))
<lambdifygenerated-342>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + log((3/2)*x)
<lambdifygenerated-342>:2: RuntimeWarning: invalid value encountered in log
  return sqrt(x) + log((3/2)*x)
<lambdifygenerated-344>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2*sqrt(x)*cos(x) + 2*sqrt(x)
<lambdifygenerated-346>:2: RuntimeWarning: invalid value encountered in log
  return 5*x + log(x)
<lambdifygenerated-354>:2: RuntimeWarning: invalid value encountered in sqrt
  return cos(sqrt(x)) + (1/8)*arcsin(x) - 1
<lambdifygenerated-354>:2: RuntimeWarning: invalid value encountered in arcsin
  return cos(sqrt(x)) + (1/8)*arcsin(x) - 1
<lambdifygenerated-357>:2: RuntimeWarning: invalid value encountered in log
  return (3/2)*x**4 + log(tan(x))
<lambdifygenerated-360>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*(x + arccosh(x) + 1)
<lambdifygenerated-363>:2: RuntimeWarning: invalid value encountered in log
  return log(x + sin(x))
<lambdifygenerated-366>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x - log(cos(log(x)))
<lambdifygenerated-372>:2: RuntimeWarning: invalid value encountered in power
  return sqrt(3)*x*(x - 1)**(3/2) - 2*x
<lambdifygenerated-373>:2: RuntimeWarning: invalid value encountered in log
  return x/(x + log(x))
<lambdifygenerated-374>:2: RuntimeWarning: overflow encountered in exp
  return -2*x + exp(10*x)
<lambdifygenerated-375>:2: RuntimeWarning: divide by zero encountered in log
  return -1/24*log(x + 1)
<lambdifygenerated-375>:2: RuntimeWarning: invalid value encountered in log
  return -1/24*log(x + 1)
<lambdifygenerated-376>:2: RuntimeWarning: invalid value encountered in log
  return x*log(2*x) + 14*x + x**(-1.0)
<lambdifygenerated-377>:2: RuntimeWarning: divide by zero encountered in divide
  return x/(x + 1)
<lambdifygenerated-388>:2: RuntimeWarning: invalid value encountered in log
  return -1/32*log(x)**3 + (5/2)*log(x)**2
<lambdifygenerated-394>:2: RuntimeWarning: invalid value encountered in arccos
  return tan(x) + arccos(x)
<lambdifygenerated-397>:2: RuntimeWarning: invalid value encountered in arccos
  return 2*exp(2*x) - 1/2*arccos(2*x)
-x**4/2 + x*exp(x/113) 0.0002
None 0.0000
8/(3*x) 0.3968
x*(x**6 + 2*x) 0.0000
3*x**4/2 + 9*x**2/2 0.0001
None 0.0000
0 0.0000
x*exp(-3) + x/2 0.3968
2*x*sin(4) 0.3970
cos(sqrt(x)) + asin(x)/8 - 1 0.0000
4*x**4 0.0000
5*x**4 0.0000
3*x**4/2 + log(tan(x)) 0.0000
x/(x + cos(4)) 0.3969
2*(x + 1)/x 0.3969
None 0.0000
None 0.0000
None 0.0000
x*(x + acosh(x) + 1) 0.0000
None 0.0000
3*x**4/2 0.0001
x + cos(3*x) 0.3967
None 0.0000
None 0.0000
log(x + sin(x)) 0.0000
None 0.0000
45*x**2/2 0.0297
exp(-cos(2*x)) 0.3969
x/2 - log(cos(log(x))) 0.0000
None 0.0000
x**4/2 + 5*exp(5)/4 0.0002
3*x + sin(x) 0.3964
2*x + asinh(x) 0.3965
None 0.0000
None 0.0000
x + exp(3*x)/3 0.0000
x**3 + x*log(5) 0.0076
sqrt(3)*x*(x - 1)**(3/2) - 2*x 0.0000
None 0.0000
x/(x + log(x)) 0.0000
-2*x + exp(10*x) 0.0000
None 0.0000
-log(x + 1)/24 0.0000
x*log(2*x) + 14*x + 1/x 0.0000
None 0.0000
x/(x + 1) 0.0000
2*x*exp(-x) 0.0000
5*x**2/2 0.3049
None 0.0000
None 0.0000
None 0.0000
x*tanh(5) 0.3967
None 0.0000
None 0.0000
x + tanh(x) 0.3967
None 0.0000
8*x*tan(x) 0.2876
None 0.0000
None 0.0000
None 0.0000
4*x + 3/2 0.3962
asinh(x)/5 0.3968
log(x**2)**2 0.3997
2*x + 1 0.3966
-atan(x) 0.3968
None 0.0000
-log(x)**3/32 + 5*log(x)**2/2 0.0000
None 0.0000
2*x - cos(x)**4 0.3965
None 0.0000
x*(x + 4*tan(x)**2) 0.0128
None 0.0000
None 0.0000
10*cos(3*x) 0.3968
None 0.0000
10*x**2 0.0682
(2*x + x**(-14))**2 0.1800
tan(x) + acos(x) 0.0000
None 0.0000
None 0.0000
x**3/3 + (-x - 1)*exp(x) 0.0000
None 0.0000
None 0.0000
-2*x - 1/x**13 0.3970
2*exp(2*x) - acos(2*x)/2 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
5*cos(x) 0.3968
x**10 + x*exp(x) 0.0000
cos(x) 0.3968
-3*x/8 0.3969
None 0.0000
3*x**2 + 8*x + sin(x) 0.2468
None 0.0000
2*x*cosh(x) 0.0000
exp(asinh(x)) 0.3996
None 0.0000
None 0.0000
None 0.0000
-x*asinh(x) 0.3826
50*x**10/47 0.0000
None 0.0000
None 0.0000
-x - 3*tan(x)**2 0.1626
None 0.0000
-2/x**(4/5) 0.0000
None 0.0000
2*x**2 + exp(x) 0.0000
1/(x + 2) 0.3968
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
x - 2/x**(3/2) 0.0000
None 0.0000
None 0.0000
None 0.0000
x + atanh(x**2) 0.0000
None 0.0000
25*x**2 0.0267
None 0.0000
None 0.0000
None 0.0000
x*(x + 4*log(x)) 0.0000
None 0.0000
4*x**2 + 1 0.1800
exp(-x)*cos(x) 0.0000
x**3/(x - 2) 0.0000
2/log(x) 0.0000
None 0.0000
3*log(x) 0.0000
None 0.0000
None 0.0000
x/2 - exp(-x)/2 0.0000
None 0.0000
2*sqrt(5)*cos(5)/5 0.0000
3*x + cos(5*x) 0.3963
None 0.0000
x*cos(x)**6 + x 0.3968
x**2 + 2*x + cos(x) 0.8824
25*log(x) 0.0000
None 0.0000
asin(5*x) 0.0000
None 0.0000
x + exp(3*x**3) 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x + 4*log(x)**(15/2) 0.0000
<lambdifygenerated-408>:2: RuntimeWarning: invalid value encountered in power
  return -2/x**(4/5)
<lambdifygenerated-411>:2: RuntimeWarning: invalid value encountered in power
  return x - 2/x**(3/2)
<lambdifygenerated-412>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x + arctanh(x**2)
<lambdifygenerated-412>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(x**2)
<lambdifygenerated-414>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + 4*log(x))
<lambdifygenerated-417>:2: RuntimeWarning: divide by zero encountered in divide
  return x**3/(x - 2)
<lambdifygenerated-418>:2: RuntimeWarning: invalid value encountered in log
  return 2/log(x)
<lambdifygenerated-419>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(x)
<lambdifygenerated-425>:2: RuntimeWarning: invalid value encountered in log
  return 25*log(x)
<lambdifygenerated-426>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(5*x)
<lambdifygenerated-427>:2: RuntimeWarning: overflow encountered in exp
  return x + exp(3*x**3)
<lambdifygenerated-428>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 4*log(x)**(15/2)
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
mean: 0.08284755796194077
top: 0.8823692798614502
None 0.0000
-24*log(x + 2) + log(2*x + 2) 0.0000
None 0.0000
(1 - x)/x 0.3968
None 0.0000
x*sin(x + 2) 0.3976
None 0.0000
sqrt(x) + asinh(x) 0.0000
None 0.0000
None 0.0000
log(x)/12 0.0000
-sin(x + 5) 0.3968
-log(tan(x + 3)**2 + 1)/4 0.3968
None 0.0000
None 0.0000
6*x**2 0.1164
-8*cos(5*x/2) 0.3969
x**2*(x**2 + x) 0.0001
5*sinh(x) 0.0000
x - sinh(x) 0.0000
4*tanh(x) 0.3968
-9*cos(x) 0.3968
None 0.0000
6*x**2 0.1164
log(2*x**3) 0.0000
9*log(x) 0.0000
45*x**2/2 0.0297
2*x*atan(x) 0.4061
cosh(x)/2 0.0000
x*asinh(x) 0.4122
x/5 0.3968
cosh(2*x + 1)/2 0.0000
x + tanh(1) 0.3967
None 0.0000
tan(x)**4 0.0000
106*x**3/(11*cos(x)) 0.0001
None 0.0000
8*x + 1 0.3948
2*log(2*x) 0.0000
cosh(x) 0.0000
pi/12 0.0000
x 0.3967
x**2/2 0.5669
x*sin(1) 0.3967
x**2 + x*sin(log(x))/3 + cos(log(x))/3 0.0000
(x - 1)*exp(x) 0.0000
22*x**3/3 - x**2/4 + 2*x/3 0.0010
None 0.0000
None 0.0000
x**3*cos(1)/3 0.0407
x**2/10 + x*cos(x) + 2*sin(x) 0.4227
x**2*(x + 6) 0.0076
cosh(x)**4 0.0000
x*cos(x + 5) + x 0.3960
x**2 + 4*x/3 0.8924
3*sqrt(x)/4 0.0000
-cos(3*x)/106 0.3968
sqrt(x + 1) 0.0000
2*x + tanh(3) 0.3966
x*exp(acosh(x)) 0.0000
None 0.0000
10*x**2 0.0682
1/5 0.0000
None 0.0000
None 0.0000
sinh(x)**4 0.0000
x**2 - x - asin(x) 0.0000
x*acos(x) - sqrt(x + 1) 0.0000
None 0.0000
None 0.0000
25*x**2*(x - 3)*exp(x)/3 0.0000
612*x**2 0.0011
None 0.0000
sin(x + 1)*tan(x) 0.3969
None 0.0000
tanh(x + 4) 0.3968
(x**2 + x)/x 0.3967
-6*log(tanh(x + 4) + 1) 0.0000
x*tan(x)**5 0.0000
None 0.0000
x**3*log(2)/3 0.0321
None 0.0000
None 0.0000
x*(2*x + 2) 0.3959
x**5 + 25*x/2 0.0000
x**7/95 0.0000
None 0.0000
None 0.0000
acos(x)/3 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
2*sin(x)**3/3 + sin(x) 0.3968
None 0.0000
log(x**(3/2)) 0.0000
None 0.0000
x**3 + sinh(x) 0.0000
None 0.0000
-x 0.3969
4*x*exp(5*x + 5)/5 + exp(5*x + 5)/5 0.0000
None 0.0000
4*(x**2 + x)/x 0.3963
x + cos(x)**5 0.3967
log(x) 0.0000
log(x) + 2 0.0000
2*x*tan(5) 0.3967
5*x**2/2 0.3049
x*(x + 2) 0.8824
None 0.0000
None 0.0000
x**2 + exp(x) - sin(x)**2/2 0.0000
None 0.0000
x**4/4 + (x - 1)*exp(x) 0.0000
cos(x)*tan(x) 0.3968
5*x**4/4 0.0001
-x**3/9 0.0644
None 0.0000
x/(x + cos(1)) 0.3969
x*(log(x) + acos(x)) 0.0000
None 0.0000
x - acos(x) 0.0000
8*x**(4/5) 0.0000
-2*exp(sqrt(x)) 0.0000
None 0.0000
2*sin(x + 1) 0.3968
x**3/3 + (x**2 - x + 1)*exp(x) 0.0000
None 0.0000
x**4/4 + x*asinh(x) + sqrt(1 - x**2) 0.0000
x*(sqrt(x) + 2*x) 0.0000
3*cosh(x) 0.0000
None 0.0000
None 0.0000
None 0.0000
cos(x) + acos(x) 0.0000
x*cosh(5) 0.3213
None 0.0000
None 0.0000
cos(27*x/2) 0.3968
(x + 1)/x 0.3969
None 0.0000
x*cos(acosh(x)) 0.0000
-tan(x) 0.3968
-log(-x + tan(x)**2 - 1)/4 + tan(x) 0.0000
None 0.0000
x**4*tan(5) 0.0000
x*(x + sin(x)) 0.9092
None 0.0000
x*log(x) + 4*x 0.0000
None 0.0000
3*log(cos(x))/x**4 0.0000
None 0.0000
3*log(x)/2 0.0000
2*x**(3/2)/3 + sqrt(x)/2 0.0000
x**2*log(-1 + sqrt(2)) 0.2593
None 0.0000
None 0.0000
x*(x + sin(x)) 0.9092
25*x**4/4 0.0000
-3*cos(x) 0.3968
x + log(4) 0.3968
2*x**(5/2)/5 + 8*x 0.0000
None 0.0000
None 0.0000
None 0.0000
None 0.0000
25*exp(x) 0.0000
None 0.0000
1/(7*x) 0.3968
-1/(2*cos(x)) 0.3968
x*asinh(x) 0.4122
x*exp(2*x) + x 0.0000
sqrt(10)*x**2 0.2334
log(x)/6 0.0000
x**4*(x**2 + x) 0.0000
2*x + 2 0.3966
sin(acosh(x)) 0.0000
None 0.0000
x + tan(x) 0.3967
exp(x) + 1/x 0.0000
None 0.0000
None 0.0000
2*x**(5/2)/5 - 2*cos(x) 0.0000
None 0.0000
x**2/2 - x*log(2*x) - x 0.0000
x*(x + 5) + x 0.8268
None 0.0000
x**2*log(x)/2 + log(4*x + 1)/8 0.0000
5*x**6/3 0.0000
None 0.0000
sin(2*x) 0.3968
None 0.0000
x + 10 0.3971
None 0.0000
None 0.0000
None 0.0000
-x**5/5 + x + atan(x) 0.0000
4*x + 6 0.3963
None 0.0000
None 0.0000
x**5/5 + 17*x**4/2 0.0000
None 0.0000
None 0.0000
x**5*(sqrt(x) + x) 0.0000
2*x + exp(x) 0.0000
x*exp(x**(3/2)) 0.0000
x/2 + sinh(x + 5) 0.0000
x*cos(3) 0.3969
x + tan(tan(4)) 0.3968
None 0.0000
7*x**2/2 + 5*x 0.2082
-cosh(x) 0.0000
<lambdifygenerated-429>:2: RuntimeWarning: invalid value encountered in log
  return -24*log(x + 2) + log(2*x + 2)
<lambdifygenerated-429>:2: RuntimeWarning: divide by zero encountered in log
  return -24*log(x + 2) + log(2*x + 2)
<lambdifygenerated-432>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + arcsinh(x)
<lambdifygenerated-433>:2: RuntimeWarning: invalid value encountered in log
  return (1/12)*log(x)
<lambdifygenerated-444>:2: RuntimeWarning: invalid value encountered in log
  return log(2*x**3)
<lambdifygenerated-445>:2: RuntimeWarning: invalid value encountered in log
  return 9*log(x)
<lambdifygenerated-456>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(2*x)
<lambdifygenerated-462>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + (1/3)*x*sin(log(x)) + (1/3)*cos(log(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-471>:2: RuntimeWarning: invalid value encountered in sqrt
  return (3/4)*sqrt(x)
<lambdifygenerated-473>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-475>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*exp(arccosh(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-479>:2: RuntimeWarning: invalid value encountered in arcsin
  return x**2 - x - arcsin(x)
<lambdifygenerated-480>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x) - sqrt(x + 1)
<lambdifygenerated-480>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccos(x) - sqrt(x + 1)
<lambdifygenerated-486>:2: RuntimeWarning: divide by zero encountered in log
  return -6*log(tanh(x + 4) + 1)
<lambdifygenerated-492>:2: RuntimeWarning: invalid value encountered in arccos
  return (1/3)*arccos(x)
<lambdifygenerated-494>:2: RuntimeWarning: invalid value encountered in power
  return log(x**(3/2))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-500>:2: RuntimeWarning: invalid value encountered in log
  return log(x)
<lambdifygenerated-501>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 2
<lambdifygenerated-511>:2: RuntimeWarning: invalid value encountered in log
  return x*(log(x) + arccos(x))
<lambdifygenerated-511>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(log(x) + arccos(x))
<lambdifygenerated-512>:2: RuntimeWarning: invalid value encountered in arccos
  return x - arccos(x)
<lambdifygenerated-513>:2: RuntimeWarning: invalid value encountered in power
  return 8*x**(4/5)
<lambdifygenerated-514>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*exp(sqrt(x))
<lambdifygenerated-517>:2: RuntimeWarning: invalid value encountered in sqrt
  return (1/4)*x**4 + x*arcsinh(x) + sqrt(1 - x**2)
<lambdifygenerated-518>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + 2*x)
<lambdifygenerated-520>:2: RuntimeWarning: invalid value encountered in arccos
  return cos(x) + arccos(x)
<lambdifygenerated-524>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*cos(arccosh(x))
<lambdifygenerated-526>:2: RuntimeWarning: invalid value encountered in log
  return -1/4*log(-x + tan(x)**2 - 1) + tan(x)
<lambdifygenerated-529>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) + 4*x
<lambdifygenerated-530>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(cos(x))/x**4
<lambdifygenerated-531>:2: RuntimeWarning: invalid value encountered in log
  return (3/2)*log(x)
<lambdifygenerated-532>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + (1/2)*sqrt(x)
<lambdifygenerated-532>:2: RuntimeWarning: invalid value encountered in sqrt
  return (2/3)*x**(3/2) + (1/2)*sqrt(x)
<lambdifygenerated-538>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) + 8*x
<lambdifygenerated-545>:2: RuntimeWarning: invalid value encountered in log
  return (1/6)*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-548>:2: RuntimeWarning: invalid value encountered in arccosh
  return sin(arccosh(x))
<lambdifygenerated-551>:2: RuntimeWarning: invalid value encountered in power
  return (2/5)*x**(5/2) - 2*cos(x)
<lambdifygenerated-552>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 - x*log(2*x) - x
<lambdifygenerated-554>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2*log(x) + (1/8)*log(4*x + 1)
<lambdifygenerated-561>:2: RuntimeWarning: invalid value encountered in sqrt
  return x**5*(sqrt(x) + x)
<lambdifygenerated-563>:2: RuntimeWarning: invalid value encountered in power
  return x*exp(x**(3/2))
<lambdifygenerated-563>:2: RuntimeWarning: overflow encountered in exp
  return x*exp(x**(3/2))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-575>:2: RuntimeWarning: divide by zero encountered in log
  return x - log(tanh(x) + 1)
<lambdifygenerated-577>:2: RuntimeWarning: divide by zero encountered in arctanh
  return 5*x*arctanh(x)
<lambdifygenerated-577>:2: RuntimeWarning: invalid value encountered in arctanh
  return 5*x*arctanh(x)
14*x**9 0.0000
2*x*(x + 1) 0.3959
1122*x**4 0.0000
x + (x + 1)**2/6 0.4407
None 0.0000
-exp(x)/2 0.0000
x**2 + sin(x) 0.9131
None 0.0000
x - log(tanh(x) + 1) 0.0000
2/(x*cos(1)) 0.3968
None 0.0000
5*x*atanh(x) 0.0000
sqrt(3)*x**3/3 0.0131
x/6 + exp(x) 0.0000
-sin(4*x/3) 0.3968
sqrt(1/x) 0.0000
133*x**6/6 0.0000
None 0.0000
x*acosh(x)/9 - sqrt(x**2 - 1)/9 0.0000
x**5*sin(x)/5 0.0000
None 0.0000
None 0.0000
x*atan(2*x) 0.4014
tanh(x) + 1 0.3969
x**4/2 0.0002
4*sin(x) + 4/(3*x**(3/2)) 0.0000
None 0.0000
x**2/2 0.5669
x**2 + x*(x + 2) 0.3959
None 0.0000
None 0.0000
None 0.0000
2*x + log(x) 0.0000
None 0.0000
-x/4 0.3969
-3*x*acosh(x) + 3*sqrt(x**2 + 1) 0.0000
3/(5*x**5) 0.3968
(x*log(x) + x)/x 0.0000
None 0.0000
x*cos(cos(log(x))) 0.0000
x*cos(x**2) - x 0.3967
None 0.0000
x + sqrt(x + 3) 0.0000
<lambdifygenerated-581>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x**(-1.0))
<lambdifygenerated-583>:2: RuntimeWarning: invalid value encountered in arccosh
  return (1/9)*x*arccosh(x) - 1/9*sqrt(x**2 - 1)
<lambdifygenerated-588>:2: RuntimeWarning: invalid value encountered in power
  return 4*sin(x) + (4/3)/x**(3/2)
<lambdifygenerated-591>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + log(x)
<lambdifygenerated-593>:2: RuntimeWarning: invalid value encountered in arccosh
  return -3*x*arccosh(x) + 3*sqrt(x**2 + 1)
<lambdifygenerated-595>:2: RuntimeWarning: invalid value encountered in log
  return (x*log(x) + x)/x
<lambdifygenerated-596>:2: RuntimeWarning: invalid value encountered in log
  return x*cos(cos(log(x)))
<lambdifygenerated-598>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + sqrt(x + 3)
mean: 0.11804109066724777
top: 0.9131115674972534
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x*atanh(x) + 2*x + sin(x) 0.0000
x**2*(x + acos(x)) 0.0000
10*x**2 0.0682
-log(cos(x)) 0.0000
None 0.0000
atanh(x + 5) 0.0000
2*x*sin(5) 0.3970
4*x**3/3 + x*sin(x) + cos(x)**2/4 - cos(x) 0.0057
(x + 2)/x 0.3969
16*x**2 0.0421
tanh(2*x) 0.3968
x + 3/x 0.3967
x*(2*x + 2) 0.3959
4*x**12/3 0.0000
x + log(2) 0.3967
2*sinh(x) 0.0000
x**3/6 + sin(x) 0.0438
x**2*(x + log(x)) 0.0000
-4*sqrt(2)*x**3/3 0.0041
x*tanh(1) 0.3967
-exp(2*x) 0.0000
(2*x + 1)/x 0.3969
None 0.0000
None 0.0000
x**2/sin(x)**2 0.0029
22*sin(x)/x 0.3968
25*log(x) 0.0000
x**4*(x**2 + x) 0.0000
2*x + exp(2*x) 0.0000
-2*exp(x + 4) 0.0000
x**2/5 0.4510
None 0.0000
x + asinh(x) 0.3967
x*(x**2 + 4*x) 0.0076
3/(2*x) 0.3968
3*x**6*sin(x) 0.0000
None 0.0000
x*log(2*x) 0.0000
(x + 2)*sin(x) 0.3960
<lambdifygenerated-599>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) + 2*x + sin(x)
<lambdifygenerated-599>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) + 2*x + sin(x)
<lambdifygenerated-600>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*(x + arccos(x))
<lambdifygenerated-602>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x))
<lambdifygenerated-603>:2: RuntimeWarning: divide by zero encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-603>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(x + 5)
<lambdifygenerated-615>:2: RuntimeWarning: invalid value encountered in log
  return x**2*(x + log(x))
<lambdifygenerated-622>:2: RuntimeWarning: invalid value encountered in log
  return 25*log(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-631>:2: RuntimeWarning: invalid value encountered in log
  return x*log(2*x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-640>:2: RuntimeWarning: invalid value encountered in arccosh
  return sin(arccosh(x))
<lambdifygenerated-641>:2: RuntimeWarning: invalid value encountered in log
  return (1/1123)*log(x)**3
5*x*cos(5) 0.3966
611*x**6 0.0000
x**2*(x**2 + x) 0.0001
x*(x + 4) 0.8537
x**4 0.0001
x*sinh(x) 0.0000
x*(x + 1) + x 0.8824
None 0.0000
sin(acosh(x)) 0.0000
None 0.0000
log(x)**3/1123 0.0000
None 0.0000
x + log(tan(1)) 0.3967
None 0.0000
x + atan(x) 0.3967
None 0.0000
tan(sin(x))**5 0.3969
1/x 0.3968
x**2*asinh(2)/2 0.6984
x**2/5 0.4510
3*x**2/2 0.5662
None 0.0000
x*sin(1) 0.3967
None 0.0000
x*(x + 1) - x 0.9131
4*(x - 1)*exp(x)/5 0.0000
None 0.0000
x*(x + 8) 0.8016
log(x) + 2 0.0000
3/x**2 0.3968
x*acos(x) - x 0.0000
None 0.0000
None 0.0000
2/x 0.3968
x*acosh(x) - sqrt(x**2 - 1) - atanh(x) 0.0000
4/sqrt(x) 0.0000
2*x*acos(x) 0.0000
None 0.0000
None 0.0000
4*x**4 + x**3/3 + 82*x**2 0.0000
None 0.0000
x*atan(sqrt(x)) 0.0000
None 0.0000
sqrt(2)*x**2 0.6109
x**3/3 + log(x) 0.0000
-2*x + x*cos(1) 0.3970
(x + 4)**2 0.8017
2*x**3 0.0038
1/(x**2*(x + 1)) 0.0000
2*cos(x) 0.3968
0 0.0000
-9*x**2*acosh(x)/14 - acosh(x)/7 0.0000
(3*x + 1)/x**2 0.3968
None 0.0000
None 0.0000
4*x**6/9 0.0000
x**4*(x**2 + x) + x 0.0000
x*sin(log(x)) 0.0000
None 0.0000
None 0.0000
x*(x + 2*log(x)) 0.0000
None 0.0000
(x + 4)/x**4 0.3968
2*x**4 + x 0.0000
2*x*log(x)/3 0.0000
x/log(2) 0.3966
0 0.0000
(1 - x)/x 0.3968
-1/x 0.3968
tanh(x) - 1 0.3968
5*x*tan(3) 0.3969
24*pi 0.0000
5*x/4 0.3967
-x + acos(x) 0.0000
x - tanh(x) 0.3967
2*x - 3 0.3964
x**4*(2*x + 2) 0.0000
None 0.0000
x/(2*x + 4) 0.3969
None 0.0000
x + 5*cosh(x) 0.0000
-sinh(x) 0.0000
(x + tan(1))/x 0.3969
2*x + cos(1) 0.3966
x*cos(x + 1) + cos(x + 1) 0.3978
cos(x + 2) 0.3968
x**2/12 0.4178
sinh(x + 5) 0.0000
2/(pi*(x + 2)) 0.3968
2*cosh(x) 0.0000
x*cos(x + 2) 0.3974
x*tan(4) 0.3967
x*cos(x + 2) 0.3974
log(x**4) 0.3975
(x + exp(x) + 2)/x 0.0000
x*(x + 5) 0.8401
sqrt(x + 1) 0.0000
x**5 + 2*x 0.0000
x*sin(1) 0.3967
4*x**11/11 0.0000
3*x**2*acos(x) 0.0000
2*x*(x + 2) 0.3951
-cos(3*x)/3 0.3968
x*(1 + tan(1)) 0.3964
2/5 0.0000
None 0.0000
1 - 4*x 0.3970
None 0.0000
x*(exp(x) + 1) 0.0000
25*x*(x + 2) 0.0267
None 0.0000
None 0.0000
1/(8*x**3) 0.3968
x**3/3 + 5 0.0225
None 0.0000
x*asin(x) + 2 0.0000
5*x**3 0.0015
None 0.0000
x*acos(x) 0.0000
1 - x 0.3970
-x - log(x) 0.0000
None 0.0000
None 0.0000
cos(4*x) 0.3968
2*x**2*sin(x) 0.2905
log(x + sin(x)) 0.0000
tan(x)**3 0.0027
4*x**9/3 0.0000
x*log(x) + 3*x 0.0000
-x*atanh(x) 0.0000
x**3*cos(1)/3 0.0407
None 0.0000
x**2*(x**4 + 1) 0.0000
x*tan(4) 0.3967
cosh(6*x) 0.0000
3*x + sin(log(x)) 0.0000
4*x**(5/2)/5 + x*sin(x) - cos(x) 0.0000
x*(x + log(x)) 0.0000
sinh(x)/x**2 0.0000
x*sinh(4) 0.3811
None 0.0000
-sin(2*x) 0.3968
log(9*x) 0.0000
x**2*acosh(2) 0.6704
x*(x + 10) 0.7779
(x + 4)/x 0.3969
2*cos(x) 0.3968
x*acos(x) 0.0000
None 0.0000
1 0.0000
x/34 0.3968
2*x**2*cos(3) 0.1810
-sqrt(x) 0.0000
9*x*sin(1) 0.3950
x**2*sin(2) 0.8573
atanh(2*x) 0.0000
x*(x + 4) + x 0.8401
(tanh(5) + 1)/x 0.3968
-2/x**3 0.3968
None 0.0000
-tanh(x) 0.3968
-4/x 0.3968
None 0.0000
x*tanh(4) 0.3967
2*x*asinh(x) 0.4287
x**3*(1 - x)*exp(x) 0.0000
-x**3/3 + 3*x + log(x + 3) 0.0000
None 0.0000
2*x**2*exp(x) 0.0000
x**5/10 0.0000
3*x/5 0.3968
x**2 + 3*x 0.8678
-cos(5*x)/15 0.3968
x**4 0.0001
5*log(x + 3)/4 0.0000
x**2*(1 - x) 0.0076
5*x**6/12 0.0000
-cos(3*x) 0.3968
None 0.0000
3*x/2 0.3966
x**3*(x + 3) 0.0001
x/3 0.3968
x**2*(x + 3) 0.0076
None 0.0000
None 0.0000
x*(x + 3) 0.8678
3*x/2 0.3966
None 0.0000
sinh(x + 3) 0.0000
-3*log(cos(x)) 0.0000
None 0.0000
-x/10 0.3968
x*tan(6) 0.3969
x*exp(3*x) 0.0000
sin(12*x) 0.3968
2*x**4 0.0000
x*(x + cos(1)) 0.9046
6*x**2 0.1164
(x - 1)*cos(x) 0.3973
x**5/5 0.0000
None 0.0000
x*(4*x + 1) 0.1799
x*tan(7) 0.3967
<lambdifygenerated-653>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + 2
<lambdifygenerated-655>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x) - x
<lambdifygenerated-657>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x) - sqrt(x**2 - 1) - arctanh(x)
<lambdifygenerated-657>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arccosh(x) - sqrt(x**2 - 1) - arctanh(x)
<lambdifygenerated-657>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arccosh(x) - sqrt(x**2 - 1) - arctanh(x)
<lambdifygenerated-658>:2: RuntimeWarning: invalid value encountered in sqrt
  return 4/sqrt(x)
<lambdifygenerated-659>:2: RuntimeWarning: invalid value encountered in arccos
  return 2*x*arccos(x)
<lambdifygenerated-661>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arctan(sqrt(x))
<lambdifygenerated-663>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3 + log(x)
<lambdifygenerated-667>:2: RuntimeWarning: divide by zero encountered in divide
  return 1/(x**2*(x + 1))
<lambdifygenerated-670>:2: RuntimeWarning: invalid value encountered in arccosh
  return -9/14*x**2*arccosh(x) - 1/7*arccosh(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-674>:2: RuntimeWarning: invalid value encountered in log
  return x*sin(log(x))
<lambdifygenerated-675>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + 2*log(x))
<lambdifygenerated-678>:2: RuntimeWarning: invalid value encountered in log
  return (2/3)*x*log(x)
<lambdifygenerated-687>:2: RuntimeWarning: invalid value encountered in arccos
  return -x + arccos(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
<lambdifygenerated-708>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-712>:2: RuntimeWarning: invalid value encountered in arccos
  return 3*x**2*arccos(x)
<lambdifygenerated-722>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(x) + 2
<lambdifygenerated-724>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x)
<lambdifygenerated-726>:2: RuntimeWarning: invalid value encountered in log
  return -x - log(x)
<lambdifygenerated-729>:2: RuntimeWarning: invalid value encountered in log
  return log(x + sin(x))
<lambdifygenerated-732>:2: RuntimeWarning: invalid value encountered in log
  return x*log(x) + 3*x
<lambdifygenerated-733>:2: RuntimeWarning: divide by zero encountered in arctanh
  return -x*arctanh(x)
<lambdifygenerated-733>:2: RuntimeWarning: invalid value encountered in arctanh
  return -x*arctanh(x)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-738>:2: RuntimeWarning: invalid value encountered in log
  return 3*x + sin(log(x))
<lambdifygenerated-739>:2: RuntimeWarning: invalid value encountered in power
  return (4/5)*x**(5/2) + x*sin(x) - cos(x)
<lambdifygenerated-740>:2: RuntimeWarning: invalid value encountered in log
  return x*(x + log(x))
<lambdifygenerated-744>:2: RuntimeWarning: invalid value encountered in log
  return log(9*x)
<lambdifygenerated-749>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x)
<lambdifygenerated-753>:2: RuntimeWarning: invalid value encountered in sqrt
  return -sqrt(x)
<lambdifygenerated-756>:2: RuntimeWarning: invalid value encountered in arctanh
  return arctanh(2*x)
<lambdifygenerated-765>:2: RuntimeWarning: invalid value encountered in log
  return -1/3*x**3 + 3*x + log(x + 3)
<lambdifygenerated-772>:2: RuntimeWarning: invalid value encountered in log
  return (5/4)*log(x + 3)
<lambdifygenerated-783>:2: RuntimeWarning: invalid value encountered in log
  return -3*log(cos(x))
<lambdifygenerated-799>:2: RuntimeWarning: invalid value encountered in sqrt
  return -2*x + arcsin(sqrt(x))
<lambdifygenerated-799>:2: RuntimeWarning: invalid value encountered in arcsin
  return -2*x + arcsin(sqrt(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
3/2 0.0000
x*(x + 4) + x 0.8401
x - tanh(x) 0.3967
x + sin(4*x) 0.3967
-2*x + asin(sqrt(x)) 0.0000
-cos(5*x)/15 0.3968
None 0.0000
4*x**3*sin(x) 0.0023
None 0.0000
None 0.0000
2*x*(x + 4)**2 0.0038
x*tan(5) + 2*x 0.3970
6*x**6 0.0000
None 0.0000
mean: 0.18335965275764465
top: 0.9130614399909973
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
x - acosh(x) 0.0000
None 0.0000
None 0.0000
x**2/sin(x) 0.0857
None 0.0000
x*exp(x + 5) 0.0000
(x + 2)**4 0.0001
exp(-x)/2 0.0000
-3*sinh(x) 0.0000
2*x + acosh(x) 0.0000
x**2*(x + tan(5)) 0.0076
2*x + sin(x) + 2 0.3966
None 0.0000
12*sqrt(2)*sqrt(x) 0.0000
-6*x**2 0.0860
sin(x) + tan(x) 0.3969
None 0.0000
x**2/(x + 1) 0.0000
3*x/2 0.3966
2*sin(x) 0.3969
2*x + tanh(1)/2 0.3966
2*x*exp(-x) 0.0000
x*(x + 2) 0.8824
x*acosh(x) 0.0000
2*x + 6 0.3968
x + tan(sqrt(x)) 0.0000
None 0.0000
None 0.0000
acos(x)/2 0.0000
2*x + 4 0.3967
None 0.0000
x**2*(x + cos(x)) 0.0076
3*x*(x + 3) 0.2467
3*cos(x) 0.3968
tan(x)**2 0.3115
cos(2*x) 0.3968
x**2 + 2*x 0.8824
log(6*x) 0.0000
None 0.0000
x*(x + 4) 0.8537
x + log(cosh(x)) 0.3996
x**3/3 + x**2/2 + 3/2 0.0225
x*tan(5) + x 0.3970
5*x*tan(5) 0.3934
x*(2*x + acosh(x)) 0.0000
x**3/3 0.0225
None 0.0000
-log(tanh(x) + 1) - log(cos(x)) 0.0000
x**2/2 - 3*cos(2*x)/2 0.5670
None 0.0000
x*(3*x + 3) 0.2474
x + cos(3*x) 0.3967
None 0.0000
2/x 0.3968
-x + cos(x) 0.3969
x*tanh(2) 0.3967
None 0.0000
x**2 - 1/x 0.9131
x + cos(4) 0.3967
x**3*log(x)/3 0.0000
x**2*(x**2 + x) 0.0001
5*x**2/8 0.6345
x**(-3) 0.3968
x*(x**(3/4) + x) 0.0000
x**6*sinh(1) 0.0000
9*x**2/2 0.1584
51*x**7/76 0.0000
None 0.0000
2*x + 2*log(x) 0.0000
4*x*exp(-1) 0.3966
tan(x) 0.3969
x*(x - cos(x)) 0.9125
x**2*(x + 2) + x 0.0076
x + tanh(2) 0.3967
2 + tan(x)/x 0.3969
x/(x + 4) 0.3969
(2*x + 1)/x 0.3969
2*x**2*(x + 6) 0.0038
x + log(x) + 2 0.0000
-2*x/3 0.3969
None 0.0000
x - tanh(x) 0.3967
None 0.0000
None 0.0000
-3/(4*x**2) 0.3968
2 + 1/sqrt(x) 0.0000
42*x**3 0.0002
4*x*(x + 2) 0.1797
x**2*(x - 3) 0.0076
x*(x + 1) 0.8975
tan(2*x) 0.3968
x + asinh(x + 3) 0.3967
x**2/4 + sin(x)*cos(x) 0.4670
cosh(x) 0.0000
atan(2)/x 0.3968
5*x*log(x) 0.0000
log(2*x + 1)/2 0.0000
x**2 0.9131
x**2*asin(x) + x 0.0000
x**2*(x + 2) 0.0076
None 0.0000
x*(x + 1) + x 0.8824
x*(x + sin(x) + 2) 0.8790
x**4 + x**3/3 + 2*x 0.0001
3*x*log(x) + x 0.0000
45*x**6 0.0000
None 0.0000
2*x - cos(x) 0.3965
exp(x) + tanh(x) 0.0000
sqrt(x + 1) 0.0000
sqrt(2)*x**3 0.0054
None 0.0000
x + 4 - 1/x 0.3969
-2*x - sin(x) 0.3970
-x + 5*log(x + 5) 0.0000
x*atanh(x) - x 0.0000
x*(x + 1) + 2 0.8975
x + exp(x) 0.0000
x**3*acos(x) 0.0000
sinh(2*x) 0.0000
None 0.0000
2*sinh(x) 0.0000
None 0.0000
asinh(x + 1) 0.3968
x**12/4 0.0000
x**4/2 0.0002
log(tan(tan(x))**2 + 1)/2 0.3969
None 0.0000
x*log(2) 0.3968
x + 12 0.3972
None 0.0000
2*x*asinh(x) 0.4287
4*x + 1 0.3961
sin(x) + asin(x) 0.0000
None 0.0000
x - asin(x) 0.0000
tan(1)/x**3 0.3968
None 0.0000
x + sin(x) + 2 0.3968
None 0.0000
2*x*(x + 2) 0.3951
None 0.0000
-x**3/3 + x/2 + 5*atan(x)/2 0.0225
x + 5 0.3969
x**2*acos(x) 0.0000
x*(x + sin(3)) 0.9108
x + cos(x + 2) 0.3967
tanh(3*x) 0.3968
sqrt(3)*x**2 + x 0.4720
(x + 4)/x 0.3969
None 0.0000
x*acos(2*x) 0.0000
None 0.0000
None 0.0000
(3*x + 4)**2 0.0759
x*(exp(x) + 1) 0.0000
x**2/sin(3) 0.0977
-6*x**5/5 0.0000
-2*cos(x + 4) 0.3968
x**3*(x + 8) 0.0001
x**2/2 + 6*x + exp(x) 0.0000
3*x*(x + 1) 0.2474
x**2*exp(3) 0.0334
None 0.0000
x**2*(4*x + 2) 0.0019
28*x**2 0.0238
3*x - log(tanh(x) + 1) 0.0000
-x + tan(1) 0.3970
-x 0.3969
None 0.0000
cos(6*x)/26 0.3968
None 0.0000
x*(x + sin(x)) 0.9092
None 0.0000
asin(x + 2) 0.0000
x + 6*log(x) 0.0000
x/3 0.3968
-2*exp(x) 0.0000
sin(x + 4) 0.3968
2*x + sin(4) 0.3965
x**2 + x - sin(x) 0.8974
<lambdifygenerated-805>:2: RuntimeWarning: invalid value encountered in arccosh
  return x - arccosh(x)
<lambdifygenerated-811>:2: RuntimeWarning: invalid value encountered in arccosh
  return 2*x + arccosh(x)
<lambdifygenerated-814>:2: RuntimeWarning: invalid value encountered in sqrt
  return 12*sqrt(2)*sqrt(x)
<lambdifygenerated-817>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
<lambdifygenerated-823>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x)
<lambdifygenerated-825>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + tan(sqrt(x))
<lambdifygenerated-826>:2: RuntimeWarning: invalid value encountered in arccos
  return (1/2)*arccos(x)
<lambdifygenerated-834>:2: RuntimeWarning: invalid value encountered in log
  return log(6*x)
<lambdifygenerated-840>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*(2*x + arccosh(x))
<lambdifygenerated-842>:2: RuntimeWarning: divide by zero encountered in log
  return -log(tanh(x) + 1) - log(cos(x))
<lambdifygenerated-842>:2: RuntimeWarning: invalid value encountered in log
  return -log(tanh(x) + 1) - log(cos(x))
<lambdifygenerated-851>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3*log(x)
<lambdifygenerated-855>:2: RuntimeWarning: invalid value encountered in power
  return x*(x**(3/4) + x)
<lambdifygenerated-859>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 2*log(x)
<lambdifygenerated-869>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 2
<lambdifygenerated-873>:2: RuntimeWarning: invalid value encountered in sqrt
  return 2 + 1/sqrt(x)
<lambdifygenerated-883>:2: RuntimeWarning: invalid value encountered in log
  return 5*x*log(x)
<lambdifygenerated-884>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(2*x + 1)
<lambdifygenerated-886>:2: RuntimeWarning: invalid value encountered in arcsin
  return x**2*arcsin(x) + x
<lambdifygenerated-891>:2: RuntimeWarning: invalid value encountered in log
  return 3*x*log(x) + x
<lambdifygenerated-895>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 1)
<lambdifygenerated-899>:2: RuntimeWarning: invalid value encountered in log
  return -x + 5*log(x + 5)
<lambdifygenerated-900>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x) - x
<lambdifygenerated-900>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x) - x
<lambdifygenerated-903>:2: RuntimeWarning: invalid value encountered in arccos
  return x**3*arccos(x)
<lambdifygenerated-914>:2: RuntimeWarning: invalid value encountered in arcsin
  return sin(x) + arcsin(x)
<lambdifygenerated-915>:2: RuntimeWarning: invalid value encountered in arcsin
  return x - arcsin(x)
<lambdifygenerated-921>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*arccos(x)
<lambdifygenerated-927>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(2*x)
<lambdifygenerated-939>:2: RuntimeWarning: divide by zero encountered in log
  return 3*x - log(tanh(x) + 1)
<lambdifygenerated-944>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 2)
<lambdifygenerated-945>:2: RuntimeWarning: invalid value encountered in log
  return x + 6*log(x)
<lambdifygenerated-954>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x) + 5
<lambdifygenerated-961>:2: RuntimeWarning: divide by zero encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-961>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(x)
<lambdifygenerated-962>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-964>:2: RuntimeWarning: invalid value encountered in log
  return -x + log(2*x)
<lambdifygenerated-965>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 - log(cos(x))
<lambdifygenerated-970>:2: RuntimeWarning: invalid value encountered in log
  return log(x) + arctan(x)
<lambdifygenerated-973>:2: RuntimeWarning: invalid value encountered in arccos
  return x*(x + arccos(x))
<lambdifygenerated-986>:2: RuntimeWarning: invalid value encountered in arccos
  return arccos(2)
<lambdifygenerated-988>:2: RuntimeWarning: invalid value encountered in log
  return 6*x - 1/2*log(x + 3)
<lambdifygenerated-992>:2: RuntimeWarning: invalid value encountered in power
  return 2*x**(5/2)
<lambdifygenerated-993>:2: RuntimeWarning: invalid value encountered in arccos
  return 2*x*arccos(x)
x + 125 0.4014
None 0.0000
None 0.0000
x*(x - sin(x)) 0.9152
x*(x + 3) 0.8678
x + log(x) + 5 0.0000
x**2*tan(2) 0.1714
2*x 0.3965
x*(x + 3) + x 0.8537
None 0.0000
cos(x)**2 0.3969
None 0.0000
x**2*exp(5) 0.0044
sinh(x + 2) 0.0000
x*atanh(x) 0.0000
4*log(x) 0.0000
cos(x) 0.3968
-x + log(2*x) 0.0000
None 0.0000
x**2/2 - log(cos(x)) 0.0000
sin(x + 5) 0.3968
x*(x + sin(5)) + 2*x 0.8968
(2*x**2 + x)/x 0.3966
x*(x + 5)**2 0.0075
log(x) + atan(x) 0.0000
x/4 + tan(3) 0.3968
2*x**2 + 1 0.3965
x*(x + acos(x)) 0.0000
cos(x) + tan(x) 0.3969
tan(x)**2 0.3115
-15*x/4 0.3970
cos(x) 0.3968
None 0.0000
log(x**2) 0.3972
3*x*tan(x) 0.3607
3/x 0.3968
x**2*(2*x + 5) 0.0038
-cos(4*x) 0.3968
-1/x 0.3968
x*(x + 2) + x 0.8678
x + exp(x + 2) 0.0000
acos(2) 0.0000
x/cos(3) 0.3969
None 0.0000
6*x - log(x + 3)/2 0.0000
exp(2*x)/2 0.0000
x/tan(2) 0.3969
4*x**4 0.0000
2*x**(5/2) 0.0000
2*x*acos(x) 0.0000
x + (x + 2)/x 0.3967
asinh(x**2) 0.3972
x*(x + 9) + x 0.7779
None 0.0000
None 0.0000
3*x*(x**4 + x) 0.0000
None 0.0000
x*exp(x + 5) 0.0000
x + sin(4) 0.3967
2*x**5/5 + exp(x) 0.0000
x**4/24 + 4*x**2 + 20*x 0.0020
None 0.0000
tan(x) + 1 0.3969
-log(cos(x)) - sin(x) 0.0000
2*x*(x + 1) 0.3959
None 0.0000
x*tan(4) 0.3967
x - cos(x) 0.3967
None 0.0000
x**3*(2*x + 4) 0.0000
4*sqrt(3)*x 0.3952
None 0.0000
-x - sin(x) 0.3969
None 0.0000
x**2*(x + cos(x)) 0.0076
<lambdifygenerated-1003>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(x)) - sin(x)
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
mean: 0.20745918154716492
top: 0.9151543378829956
atanh(2*x + 3)/2 0.0000
x**2 + x + 1 0.8975
x*(x + asinh(x)) 0.8814
None 0.0000
3*x*(x + 4) + x 0.2461
x**3*log(x) 0.0000
None 0.0000
x**2 + 4*atanh(log(x)) 0.0000
sin(x)*cos(x) 0.3968
x**4/4 + 1/2 0.0003
None 0.0000
x**2 + x/2 0.9052
(x + sin(x))/x**2 0.3968
None 0.0000
3*x 0.3963
x*(x + 5) 0.8401
(x + 5)**3 0.0074
None 0.0000
-cos(5*x)/5 0.3968
None 0.0000
-1/x 0.3968
2*log(x*log(2)) 0.0000
sin(x - 1) 0.3968
7*x**2/2 0.2084
x*(x**2 + x) 0.0076
(x + cos(x))/x 0.3969
None 0.0000
log(x + 2) 0.0000
2*x*(x - 1) 0.3970
None 0.0000
2*x*sin(5) 0.3970
x**2*log(x)**2 0.0000
x + tan(1) 0.3968
sin(x + 3) 0.3968
x*cos(x + 2) 0.3974
None 0.0000
None 0.0000
x*(x + sin(x)) + x 0.8939
(x + 1)**3 0.0076
None 0.0000
(2*x + 1)/x 0.3969
None 0.0000
x**4/4 0.0003
x**2*tan(3) 0.3655
4*x**(3/2) 0.0000
None 0.0000
-x + sin(1) 0.3970
x - 2 0.3966
3*x + 2 0.3964
x*(x + sin(3)) 0.9108
x + (x + 2)**2 0.8401
x*(x + 1) + x 0.8824
None 0.0000
x*(x*log(x) + x) 0.0000
x**7 + 1 0.0000
None 0.0000
2*x**2 0.3965
x**2/10 0.4222
x + 1 0.3967
sin(2*x + 2)/2 0.3968
x*(x + 2) 0.8824
2*x*exp(-x) 0.0000
x + 3*asin(x) 0.0000
x**2 + sin(x) - cos(x) 0.9131
2*x + 5 0.3967
-3*x**2/2 + x 0.2085
None 0.0000
-exp(x) + sin(x) 0.0000
x*(2*x + 3) 0.3955
None 0.0000
None 0.0000
2*x*cos(1) 0.3967
acosh(x)/x**2 0.0000
x + sin(x) - cos(x) 0.3967
8*x + 5 0.3950
x**7/15 0.0000
2*sin(2*x) 0.3968
5*x**2 0.1414
1 - x 0.3970
<lambdifygenerated-1011>:2: RuntimeWarning: divide by zero encountered in arctanh
  return (1/2)*arctanh(2*x + 3)
<lambdifygenerated-1011>:2: RuntimeWarning: invalid value encountered in arctanh
  return (1/2)*arctanh(2*x + 3)
<lambdifygenerated-1015>:2: RuntimeWarning: invalid value encountered in log
  return x**3*log(x)
<lambdifygenerated-1016>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + 4*arctanh(log(x))
<lambdifygenerated-1016>:2: RuntimeWarning: invalid value encountered in arctanh
  return x**2 + 4*arctanh(log(x))
<lambdifygenerated-1026>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(x*log(2))
<lambdifygenerated-1031>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 2)
<lambdifygenerated-1034>:2: RuntimeWarning: invalid value encountered in log
  return x**2*log(x)**2
<lambdifygenerated-1043>:2: RuntimeWarning: invalid value encountered in power
  return 4*x**(3/2)
<lambdifygenerated-1050>:2: RuntimeWarning: invalid value encountered in log
  return x*(x*log(x) + x)
<lambdifygenerated-1058>:2: RuntimeWarning: invalid value encountered in arcsin
  return x + 3*arcsin(x)
4/x 0.3968
3*sin(2*x) 0.3968
6*x/5 0.3967
x**2/(x + 1) 0.0000
x**2/2 + x*asinh(x) + asinh(x)**3/3 0.5980
x**2 - x 0.9292
-x + cos(x) 0.3969
log(tan(x)**2 + 1)/5 0.3969
x**2*exp(5) 0.0044
None 0.0000
-x + x*cos(1) 0.3969
exp(x) - sin(x) 0.0000
None 0.0000
x + sin(x) + 5 0.3969
x + 4/x 0.3967
4*x + log(x) 0.0000
-x**2/2 0.3051
x*(x + sin(3)) 0.9108
None 0.0000
E*x 0.3964
x**2*(x - log(x)) 0.0000
-x/3 0.3969
None 0.0000
sinh(x**2)/2 0.0000
x**2/2 - x 0.5675
None 0.0000
32*x 0.3763
None 0.0000
None 0.0000
x + 4/x 0.3967
None 0.0000
4*x*cos(2) 0.3970
1 - x**2 0.2478
x + cos(3) 0.3967
x*(x + cos(3)) 0.9290
sin(x)*cos(x) 0.3968
None 0.0000
2*x**2*atan(2) 0.3513
sin(x/2) 0.3968
2*x + 15 0.3971
None 0.0000
None 0.0000
x/10 0.3968
None 0.0000
x**2/2 - 3*x*atan(x) - 3*x + x/log(x + 1) 0.0000
None 0.0000
x + log(x) 0.0000
-sqrt(2)*x**3/3 + x**2/2 0.0160
5*x**3/3 0.0046
4*x**2*sin(1) 0.2177
None 0.0000
3*x + 2 0.3964
None 0.0000
x**4/7 0.0006
x*cos(x + 2) 0.3974
x*(x + cos(1)) 0.9046
sqrt(1 - x) 0.0000
None 0.0000
x + 4 0.3969
None 0.0000
x*(x + 2) 0.8824
5*x**4/4 0.0001
x**3/(x + 4) 0.9814
3*x**4/4 0.0001
tan(x)**5 0.0000
2*x + 2 0.3966
x*(x + sin(x)) 0.9092
x**3*tan(3) 0.0510
sqrt(3)*x**3/3 0.0131
2*x**2*(x**2 + x) 0.0000
sqrt(2)*x**2 0.6109
x + 2*sinh(x) 0.0000
x**6/3 0.0000
x**2*sin(3) 0.4336
None 0.0000
None 0.0000
None 0.0000
x**2/2 + 2*sin(4*x) 0.5669
None 0.0000
None 0.0000
-x*cos(x) + sin(x) 0.3964
1/sin(x) 0.3969
None 0.0000
None 0.0000
x*cos(x + 1) + sin(x + 5) 0.3978
None 0.0000
None 0.0000
x*sin(5) 0.3969
None 0.0000
-cos(x - 2) 0.3968
x**2*(2*x + 1) 0.0038
3*x 0.3963
4*log(x) 0.0000
None 0.0000
None 0.0000
4*x**2/7 0.6037
x**4 - x 0.0001
None 0.0000
x**2*(x**2 + x) 0.0001
x + 2*cos(x) 0.3967
sqrt(3)*x**3/3 0.0131
5*x/2 0.3964
x*sin(1) 0.3967
None 0.0000
3*x*cos(5) 0.3967
4*x*exp(x) 0.0000
None 0.0000
None 0.0000
x**3/3 + (x - 1)*exp(x) 0.0000
x**3 0.0076
log(x*exp(5)) 0.0000
x**4 + 3*x**2/2 0.0001
x**2 - 12*x 0.8824
cosh(x**3) 0.0000
x**2 - 1/x 0.9131
5*x + sin(x) 0.3958
x 0.3967
sqrt(x**3) 0.0000
-x**5/5 + log(x) 0.0000
(x + exp(x))/x 0.0000
4*x*(x + 3) 0.1794
None 0.0000
None 0.0000
x**5*sin(3)/5 0.0000
(x**2 + x)/x 0.3967
x**2 + x + 16 0.8975
(x - 6)*exp(x) 0.0000
1/(2*x) 0.3968
None 0.0000
x + cosh(x) + 4 0.0000
None 0.0000
1/tan(x) 0.3969
(x + 1)/x 0.3969
5*x*asin(x) 0.0000
2*x + 1 0.3966
x**2 + x + 5 0.8975
None 0.0000
5*log(x)/2 0.0000
log(x + 1) + sinh(x) 0.0000
x*(x + 2) 0.8824
None 0.0000
None 0.0000
x + 3 0.3968
-cos(x + 1) 0.3968
-2*log(cos(x)) 0.0000
-x**3/3 + x**2 0.0225
x*(2*x + 1) 0.3962
12*x**2 0.0565
None 0.0000
1/10 0.0000
None 0.0000
4*x**3/3 0.0057
x**2/2 - 6*x 0.5678
16*x**2 0.0421
-2/(3*x**6) 0.3968
None 0.0000
None 0.0000
x*(x + E*x) 0.1950
None 0.0000
-cos(x + 3) 0.3968
None 0.0000
x/tan(5) 0.3969
x**3 - x 0.0076
None 0.0000
None 0.0000
x*exp(4*x) 0.0000
2*x**3/3 0.0114
x + acosh(2*x) 0.0000
tan(3)/x 0.3968
x*(x + 1) + 2*x 0.8678
None 0.0000
x**3 0.0076
x*(x + exp(3)) 0.6768
x**4/4 + x*log(x) - 5*x 0.0000
2*x + 3 0.3967
x**2*sin(5) 0.2516
12*sin(x) 0.3969
<lambdifygenerated-1065>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x)/x**2
<lambdifygenerated-1075>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 1)
<lambdifygenerated-1085>:2: RuntimeWarning: invalid value encountered in log
  return 4*x + log(x)
<lambdifygenerated-1089>:2: RuntimeWarning: invalid value encountered in log
  return x**2*(x - log(x))
<lambdifygenerated-1091>:2: RuntimeWarning: overflow encountered in sinh
  return (1/2)*sinh(x**2)
<lambdifygenerated-1104>:2: RuntimeWarning: divide by zero encountered in log
  return (1/2)*x**2 - 3*x*arctan(x) - 3*x + x/log(x + 1)
<lambdifygenerated-1104>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 - 3*x*arctan(x) - 3*x + x/log(x + 1)
<lambdifygenerated-1105>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)
<lambdifygenerated-1113>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(1 - x)
<lambdifygenerated-1137>:2: RuntimeWarning: invalid value encountered in log
  return 4*log(x)
<lambdifygenerated-1149>:2: RuntimeWarning: invalid value encountered in log
  return log(x*exp(5))
<lambdifygenerated-1152>:2: RuntimeWarning: overflow encountered in cosh
  return cosh(x**3)
<lambdifygenerated-1156>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x**3)
<lambdifygenerated-1157>:2: RuntimeWarning: invalid value encountered in log
  return -1/5*x**5 + log(x)
<lambdifygenerated-1168>:2: RuntimeWarning: invalid value encountered in arcsin
  return 5*x*arcsin(x)
<lambdifygenerated-1171>:2: RuntimeWarning: invalid value encountered in log
  return (5/2)*log(x)
<lambdifygenerated-1172>:2: RuntimeWarning: divide by zero encountered in log
  return log(x + 1) + sinh(x)
<lambdifygenerated-1172>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 1) + sinh(x)
<lambdifygenerated-1176>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1191>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + arccosh(2*x)
<lambdifygenerated-1196>:2: RuntimeWarning: invalid value encountered in log
  return (1/4)*x**4 + x*log(x) - 5*x
mean: 0.2274577021598816
top: 0.981351375579834
Saving results...
Working with expression:  3 * math.exp(0.1 * x[0])
Error in expression:  3 * math.exp(0.1 * x[0])
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x + tan(2) 0.3966
log(x)**2 0.0000
2*x + cos(x)/2 0.3965
-cos(3*x)/3 0.3968
1 + log(cos(x))/x 0.0000
tan(1)/x 0.3968
None 0.0000
3*x**2*(x + 3) 0.0025
None 0.0000
x*(x + 2) + x 0.8678
x**2/(x + 3) 0.3966
1/(2*x) 0.3968
(sqrt(x) + x)/x 0.0000
None 0.0000
2*x*(x + 1) + x 0.3955
x + cos(sqrt(x)) 0.0000
x + sin(x) + 3 0.3968
x**2 + 1 0.9131
4*x*acosh(x) 0.0000
x**2 + x + 1 0.8975
x**5 + x + 4 0.0000
cosh(x) + 5 0.0000
sin(x)**2 0.3969
x*acos(2*x) + x - sqrt(1 - 4*x**2) - 4*acos(2*x) 0.0000
x**2 - 2*exp(2*x) 0.0000
5*x/3 0.3966
sin(x)**5 0.3968
(x + 5)/x 0.3969
None 0.0000
x**2*sin(4)/2 0.3233
None 0.0000
x**2 - 1/x 0.9131
None 0.0000
x + 5/x**4 0.3967
None 0.0000
x*(x + 1) + x 0.8824
x**4/4 + 2*x 0.0003
sin(x)/2 0.3968
3*log(sin(x)) - 3*log(cos(x)) 0.0000
None 0.0000
None 0.0000
None 0.0000
2*x + exp(x) 0.0000
2*x*(x + 2) 0.3951
None 0.0000
x*sinh(x)/3 0.0000
log(5*x/4) 0.0000
x**3*acos(2)/3 0.0000
None 0.0000
8*x**2 0.0860
1/(2*x + 5) 0.3968
asinh(x + 4) 0.3968
None 0.0000
x + cos(x + 3) 0.3967
8*x 0.3948
x + 5 0.3969
-3 0.0000
x**3 + 2 0.0076
x**(-7/3) 0.0000
None 0.0000
-log(cos(7*x))/7 0.0000
cos(1)/x**2 0.3968
x*(x + cos(x + 4)) 0.9100
asin(x) - 5 0.0000
exp(x + 4)/2 0.0000
None 0.0000
sinh(2*x) 0.0000
x**2*acos(4) 0.0000
2*x*(x - 5) + x 0.3974
tanh(x + 3) 0.3968
None 0.0000
x*(2*x + 2)*exp(x) 0.0000
None 0.0000
None 0.0000
(x - 2)*exp(x) 0.0000
3*cos(x)**2 0.3969
sin(2*x)/12 0.3968
2*x - sinh(x) 0.0000
None 0.0000
9*x**2 0.0761
None 0.0000
sqrt(2)*x**3 0.0054
6*x + 5 0.3957
x**2 + 2*x 0.8824
x*exp(-1) 0.3968
x**2 - sinh(x)/2 0.0000
None 0.0000
2*x**3*tan(4) 0.0033
25*x**2 0.0267
None 0.0000
x**2*(2*x + 1) 0.0038
x + 2*sinh(x) 0.0000
None 0.0000
9*x**2 0.0761
4*x*(x + 4) 0.1792
x**2*(x + sin(x)) 0.0076
None 0.0000
x*(x + 2) + x 0.8678
sqrt(3)*x**2 + x 0.4720
x**2 + 2*x 0.8824
x*(x + cos(x)) + x 0.8969
x + sin(x) + 6 0.3969
x*(x + tan(3)) 0.9153
x + (x + 1)*exp(x) 0.0000
atan(6*x) 0.3968
log(x + 2) 0.0000
None 0.0000
x*(x + 8) 0.8016
(x**2 + x)/x 0.3967
None 0.0000
x + sqrt(2)/x 0.3967
x/5 0.3968
x**2 + x + log(x) 0.0000
None 0.0000
x/(x - 4) 0.3969
2*x + sin(5) 0.3965
x**2/10 0.4222
2*x*exp(-x) 0.0000
x**2*(x + cos(x)) 0.0076
x + cos(x) + 3 0.3968
None 0.0000
22*x**(5/2)/5 0.0000
2*x + 5 0.3967
1/(x**3 + 2*x) 0.3968
<lambdifygenerated-1201>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**2
<lambdifygenerated-1204>:2: RuntimeWarning: invalid value encountered in log
  return 1 + log(cos(x))/x
<lambdifygenerated-1210>:2: RuntimeWarning: invalid value encountered in sqrt
  return (sqrt(x) + x)/x
<lambdifygenerated-1212>:2: RuntimeWarning: invalid value encountered in sqrt
  return x + cos(sqrt(x))
<lambdifygenerated-1215>:2: RuntimeWarning: invalid value encountered in arccosh
  return 4*x*arccosh(x)
<lambdifygenerated-1220>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(2*x) + x - sqrt(1 - 4*x**2) - 4*arccos(2*x)
<lambdifygenerated-1220>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*arccos(2*x) + x - sqrt(1 - 4*x**2) - 4*arccos(2*x)
<lambdifygenerated-1231>:2: RuntimeWarning: invalid value encountered in log
  return 3*log(sin(x)) - 3*log(cos(x))
<lambdifygenerated-1235>:2: RuntimeWarning: invalid value encountered in log
  return log((5/4)*x)
<lambdifygenerated-1236>:2: RuntimeWarning: invalid value encountered in arccos
  return (1/3)*x**3*arccos(2)
<lambdifygenerated-1245>:2: RuntimeWarning: invalid value encountered in power
  return x**(-7/3)
<lambdifygenerated-1246>:2: RuntimeWarning: invalid value encountered in log
  return -1/7*log(cos(7*x))
<lambdifygenerated-1249>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x) - 5
<lambdifygenerated-1252>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*arccos(4)
<lambdifygenerated-1281>:2: RuntimeWarning: invalid value encountered in log
  return log(x + 2)
<lambdifygenerated-1286>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + x + log(x)
<lambdifygenerated-1293>:2: RuntimeWarning: invalid value encountered in power
  return (22/5)*x**(5/2)
<lambdifygenerated-1298>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x + 3)
<lambdifygenerated-1299>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x*log(x) - x
<lambdifygenerated-1306>:2: RuntimeWarning: invalid value encountered in log
  return x**3 + x*log(2*x) - 2*x
<lambdifygenerated-1307>:2: RuntimeWarning: invalid value encountered in arccosh
  return arccosh(x + 4)
1 + 1/x 0.3969
5*sin(x) 0.3969
sqrt(x + 3) 0.0000
None 0.0000
None 0.0000
x**2/2 + x*log(x) - x 0.0000
2*x + 4 0.3967
x + cos(1)/x 0.3967
sin(x)**(-2) 0.3988
2*x + 1/2 0.3966
x/2 + atan(x) 0.3968
x + exp(-x) 0.0000
x**3 + x*log(2*x) - 2*x 0.0000
acosh(x + 4) 0.0000
1/sin(x) 0.3969
x**9/9 + 5*x**2/2 0.0000
tanh(x)**4 0.3969
None 0.0000
tan(x)**2 0.3115
112/x 0.3968
x**2*(x + sin(5)) 0.0076
3*x*cosh(x) 0.0000
None 0.0000
3*x**3 0.0026
x 0.3967
9*x**2/20 0.5437
None 0.0000
4*x + tan(x) 0.3961
x*(x + 4) 0.8537
None 0.0000
x*(x - cos(x)) 0.9125
1/sin(x) 0.3969
8*x**3 0.0010
None 0.0000
x + asinh(x**2) 0.3971
None 0.0000
None 0.0000
x*(x*sin(4) + x) 0.4647
x**2*cos(1) 0.5871
None 0.0000
atan(x + 4) 0.3968
x*(x - 3) + x 0.9459
x**2*sin(x)**2 0.5784
None 0.0000
4*x + 5 0.3963
sqrt(x) + sin(x) + 3 0.0000
None 0.0000
None 0.0000
2*x**2 + sinh(x) 0.0000
2*log(x) 0.0000
None 0.0000
x + atanh(2*x) 0.0000
x + sqrt(2)/x 0.3967
log(x)/4 0.0000
25*x 0.3833
None 0.0000
None 0.0000
sin(6*x) 0.3968
None 0.0000
sin(x)**5 0.3968
x*(x + cos(3)) 0.9290
x**2*tan(5) 0.1307
tan(x + 3) 0.3969
x*(x + 2) 0.8824
-x**4/4 + 2*x 0.0003
2*x*sin(x) 0.3951
x*(x + cos(2*x)) 0.9156
None 0.0000
-log(cos(2*x)) 0.0000
x**3*log(x)/3 0.0000
tanh(x + 2) 0.3968
None 0.0000
-tan(x) - atan(x) 0.3968
x**2 - sin(x) 0.9130
1/(12*x) 0.3968
x*exp(x + 2) 0.0000
x**3 - x 0.0076
x*(x + cos(4)) 0.9236
x**4*sin(4) 0.0001
x**2*tan(1)**8 0.0192
cos(x + 2)/3 0.3968
None 0.0000
x**2/(x + 6) 0.0000
sinh(4*x) 0.0000
4*x*(x + 2) 0.1797
4*x*asin(x)**2 0.0000
sin(x + 2)/3 0.3968
None 0.0000
None 0.0000
x*(x + cos(x))**2 0.0076
None 0.0000
2*x**5/5 + x**3 0.0000
x*(2*x + 5) 0.3947
sin(x)/16 0.3968
tan(x)**3 0.0027
x**2*cos(2) 0.3174
sin(2)/3 0.0000
None 0.0000
x**3 + x + 4 0.0076
(2*x + 1)/x 0.3969
5*x/2 0.3964
exp(x**2)/2 0.0000
3*x + 2 0.3964
x*exp(2*x) + 2*x 0.0000
sin(x + 4) 0.3968
2/x 0.3968
5*x*(x + 2) 0.1411
x*(x + 5) + x 0.8268
x**2 + x + 1 0.8975
None 0.0000
8*x**3 + x 0.0010
log(x)**6 0.0000
3*sinh(x) 0.0000
None 0.0000
-2*log(cos(2*x)) 0.0000
x**2 + 4*x 0.8537
None 0.0000
None 0.0000
x**2*cos(5) 0.4784
None 0.0000
cos(x)/4 0.3968
-x - 4/x 0.3969
None 0.0000
-5*x**4/2 0.0000
None 0.0000
4*x**2 + 4*x 0.1798
(x**2 + x)/x 0.3967
(2*x + 2)/x 0.3969
x**2 - 2*sin(x) 0.9130
x*asinh(x) 0.4122
-x**2/2 + x*log(2) 0.3050
<lambdifygenerated-1330>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + sin(x) + 3
<lambdifygenerated-1332>:2: RuntimeWarning: invalid value encountered in log
  return 2*log(x)
<lambdifygenerated-1333>:2: RuntimeWarning: invalid value encountered in arctanh
  return x + arctanh(2*x)
<lambdifygenerated-1335>:2: RuntimeWarning: invalid value encountered in log
  return (1/4)*log(x)
<lambdifygenerated-1346>:2: RuntimeWarning: invalid value encountered in log
  return -log(cos(2*x))
<lambdifygenerated-1347>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*x**3*log(x)
<lambdifygenerated-1358>:2: RuntimeWarning: divide by zero encountered in divide
  return x**2/(x + 6)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1361>:2: RuntimeWarning: invalid value encountered in arcsin
  return 4*x*arcsin(x)**2
<lambdifygenerated-1373>:2: RuntimeWarning: overflow encountered in exp
  return (1/2)*exp(x**2)
<lambdifygenerated-1382>:2: RuntimeWarning: invalid value encountered in log
  return log(x)**6
<lambdifygenerated-1384>:2: RuntimeWarning: invalid value encountered in log
  return -2*log(cos(2*x))
mean: 0.22469395399093628
top: 0.9459299445152283
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
None 0.0000
x*asin(x + 3) 0.0000
None 0.0000
x**2 + atan(x) 0.9127
None 0.0000
-x**4 + x**3 0.0001
sqrt(2)*x**2 0.6109
x**2 + x/4 0.9091
x*atanh(5) 0.0000
x*(x + cos(x)) 0.9124
2*x + 2/x 0.3965
-2*x + exp(x) 0.0000
x**2 + x*(x + 1) 0.3962
x*acosh(x) + 2*x 0.0000
None 0.0000
None 0.0000
x + asinh(x + 3) 0.3967
None 0.0000
2*x + sqrt(2)*log(x) 0.0000
x**2 + 3*x 0.8678
x**2 - 1/x 0.9131
x*cos(x) - 4*x 0.3974
E/x**10 0.3968
2*cosh(x) 0.0000
cos(1)/x 0.3968
None 0.0000
(x + exp(x) - 2)/x 0.0000
x*(x + cos(4)) 0.9236
x**2 + x + tan(x) 0.8978
None 0.0000
None 0.0000
x**2*(x + 1) 0.0076
3*tan(1)/x 0.3968
x + sin(x + 4) 0.3967
x**2 - x/2 0.9211
-3*x + sin(x) 0.3970
tan(x + 2) 0.3969
None 0.0000
cos(x + 3) 0.3968
x - cos(x + 3) 0.3967
None 0.0000
(2*x + 2)/x 0.3969
x/(x + 2) 0.3969
2*x + cos(4) 0.3965
sinh(3*x) 0.0000
2*sqrt(x)/5 0.0000
2*x - cos(x) 0.3965
x**2*(2*x + 1) 0.0038
5464*x**2 0.0001
3*x + 5 0.3965
2*x + 3 0.3967
x*(x - 1) 0.9292
(2*x + 1)/x 0.3969
None 0.0000
2*x + 2*sin(x) + cos(x) 0.3966
sqrt(x) + sin(x) 0.0000
x**2/2 + exp(x - 4) 0.0000
x*(x + sin(x)) 0.9092
x + cos(2*x) 0.3967
x**2*acosh(x) 0.0000
-sin(x) 0.3968
tan(x + 4) + 1 0.3969
x**3/3 + 2*x**2 0.0224
x*sin(3) 0.3968
2*x*(x + 2) 0.3951
2*sin(x**2) 0.3968
None 0.0000
4*x + 4 0.3963
x*acos(x) + 4*x 0.0000
x**2/cos(1) 0.4355
None 0.0000
asin(x + 6) 0.0000
None 0.0000
x*acos(3) 0.0000
None 0.0000
sin(1/x) 0.3968
22*x*log(2) 0.3910
x**3/126 0.3506
2*sqrt(2)*x 0.3964
2*x*(x + 2) 0.3951
None 0.0000
exp(6*x)/6 0.0000
x + acosh(x + 4) 0.0000
2*x*(x + 2) + x 0.3947
sin(x) 0.3968
x + asin(x) 0.0000
None 0.0000
2*x*(x + 2) 0.3951
tan(x)**5 0.0000
x**3 + 2*x + sin(x) 0.0076
None 0.0000
x**4*(x + sin(x)) 0.0000
x*(x*(x + cos(x)) + x) 0.0076
(x + 2)/x 0.3969
x*(sqrt(x) + x) 0.0000
x + log(x + 2) 0.0000
3*x**2/4 0.7193
cos(x) - 1/x 0.3968
x + cos(5*x) 0.3967
None 0.0000
4/x 0.3968
(x + 5)/x 0.3969
x + cos(x) + 1 0.3967
x/(x + 3) 0.3969
None 0.0000
x**2*(2*x + 4) 0.0038
x/(x + 5) 0.3969
x*exp(-x) 0.0000
atan(x)**2 0.3969
cos(x - 2) 0.3968
2*x + 2*log(x + 1) 0.0000
x + log(x)**2 0.0000
-3/(23*cos(x)) 0.3968
(2*x**2 + x)/x 0.3966
None 0.0000
2*x*(x + 2) 0.3951
None 0.0000
x**2 + x + sin(x) 0.8975
None 0.0000
x*tan(4*x) 0.3769
sin(x) 0.3968
None 0.0000
None 0.0000
(2*x + 4)**2 0.1791
x**2/(x + 3) 0.3966
x*(x + tan(1))**2 0.0076
4*x*cos(x) 0.3984
<lambdifygenerated-1396>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(x + 3)
<lambdifygenerated-1401>:2: RuntimeWarning: invalid value encountered in arctanh
  return x*arctanh(5)
<lambdifygenerated-1406>:2: RuntimeWarning: invalid value encountered in arccosh
  return x*arccosh(x) + 2*x
<lambdifygenerated-1408>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + sqrt(2)*log(x)
<lambdifygenerated-1430>:2: RuntimeWarning: invalid value encountered in sqrt
  return (2/5)*sqrt(x)
<lambdifygenerated-1439>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + sin(x)
<lambdifygenerated-1443>:2: RuntimeWarning: invalid value encountered in arccosh
  return x**2*arccosh(x)
<lambdifygenerated-1451>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(x) + 4*x
<lambdifygenerated-1453>:2: RuntimeWarning: invalid value encountered in arcsin
  return arcsin(x + 6)
<lambdifygenerated-1454>:2: RuntimeWarning: invalid value encountered in arccos
  return x*arccos(3)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:1005: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:478: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)
<lambdifygenerated-1461>:2: RuntimeWarning: invalid value encountered in arccosh
  return x + arccosh(x + 4)
<lambdifygenerated-1464>:2: RuntimeWarning: invalid value encountered in arcsin
  return x + arcsin(x)
<lambdifygenerated-1471>:2: RuntimeWarning: invalid value encountered in sqrt
  return x*(sqrt(x) + x)
<lambdifygenerated-1472>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x + 2)
<lambdifygenerated-1485>:2: RuntimeWarning: divide by zero encountered in log
  return 2*x + 2*log(x + 1)
<lambdifygenerated-1485>:2: RuntimeWarning: invalid value encountered in log
  return 2*x + 2*log(x + 1)
<lambdifygenerated-1486>:2: RuntimeWarning: invalid value encountered in log
  return x + log(x)**2
<lambdifygenerated-1500>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*(x + arccos(x))
<lambdifygenerated-1501>:2: RuntimeWarning: invalid value encountered in log
  return (1/5)*log(x)
<lambdifygenerated-1526>:2: RuntimeWarning: invalid value encountered in power
  return x*log(x**(1/4))
<lambdifygenerated-1535>:2: RuntimeWarning: invalid value encountered in log
  return x**2 + (x - 1)*log(x)
x**2*(x + exp(x)) 0.0000
x/12 0.3968
(x + 5)**2 0.7779
x**2*(x + acos(x)) 0.0000
None 0.0000
log(x)/5 0.0000
x*sin(3) + x 0.3967
-3*x**4/4 - 3*x**2/4 0.0001
x*(x + 3) 0.8678
x*(x + 2) + 2*x 0.8537
2*x + 4 0.3967
sqrt(5)*x**2/6 0.5113
x + exp(x) + 3 0.0000
None 0.0000
14*x**2 0.0482
2*x*atan(x) 0.4061
(2*x + 4)/x 0.3969
x*(x + 4) 0.8537
5*x + sin(x) 0.3958
None 0.0000
None 0.0000
x**2*exp(-1) 0.5094
None 0.0000
x**2*(x**2 + x) 0.0001
x*atan(x)/2 + x/2 - atan(x)/2 0.3991
-x**4/4 + x**2 0.0003
x**2 + cos(x) 0.9130
x**2*(1 - x) 0.0076
x + x*exp(-x) 0.0000
x**2*cos(1) 0.5871
x + 50/x 0.3967
None 0.0000
2*x + 8 0.3968
None 0.0000
1/sin(x) 0.3969
None 0.0000
x + exp(x) + cos(x)**2/x 0.0000
x*log(x**(1/4)) 0.0000
x**2*sin(4) 0.2727
x**2*sin(2) 0.8573
x/3 0.3968
x*(x + cosh(x)) 0.0000
25*x*exp(x) 0.0000
x + cos(4) 0.3967
4*x + 1 0.3961
-x**2 + 2*x 0.2477
x**2 + (x - 1)*log(x) 0.0000
x*log(3*x) - 6*x 0.0000
-pi 0.0000
x*(x + 4) + x 0.8401
x*(x + 2) + x 0.8678
x**3*sin(2) 0.0084
x*(x + exp(x)) 0.0000
None 0.0000
x**2 + 8*x 0.8016
log(tan(log(x))) 0.0000
x - 4*log(x + 4) 0.0000
None 0.0000
None 0.0000
3*x*(x - 4) 0.2479
3*x + cos(x) 0.3963
None 0.0000
None 0.0000
2*x/(x + 4) 0.3969
None 0.0000
x*(x + cos(5)) 0.9086
8*cos(4*x) 0.3969
x*asinh(x) + x 0.4120
atan(x)**5 0.3968
x - 3*sin(x) 0.3967
x**2*cos(5) 0.4784
None 0.0000
x*(x + cos(4)) 0.9236
None 0.0000
None 0.0000
2*x*(x + 2) 0.3951
4*x + 3 0.3962
2*x + 3 0.3967
None 0.0000
None 0.0000
x*(2*x + 2) 0.3959
x**3 0.0076
None 0.0000
x**2*(x + sin(x)) 0.0076
2*x*atan(x) 0.4061
x**2*(x + cos(x)) 0.0076
2*x + 3 0.3967
cos(x + 2) 0.3968
x*asin(2*x) 0.0000
None 0.0000
x**2/2 + x*atan(3) 0.5661
sin(x) - 2*cos(x) 0.3968
exp(x + 5) 0.0000
sqrt(x) + x 0.0000
x**2/2 + x - 5*log(cos(x)) 0.0000
2*x + sin(2*x) 0.3965
sin(x) - 3 0.3967
5*x + log(x)/2 0.0000
x**2 - sin(2*x)/2 0.9131
2*x**(3/2)/3 + 2*x + sin(x) 0.0000
None 0.0000
log(tan(x))/2 0.0000
x*(x + 2) + x 0.8678
None 0.0000
x**2 + x*cos(x) - cos(x) 0.9124
None 0.0000
x + 1 0.3967
5*x**3 + 13*x 0.0015
4 0.0000
None 0.0000
x**2 + x + 3 0.8975
x**4 + 3*x 0.0001
3*x*acos(x) 0.0000
None 0.0000
x - 1/x 0.3967
x + cos(log(x)) 0.0000
x*(2*x + 5) 0.3947
None 0.0000
2*x*sin(x) 0.3951
3*x + 3 0.3965
3*x + 2 0.3964
0 0.0000
None 0.0000
x**2*acos(x) 0.0000
3*x + cos(x) 0.3963
x**2/4 0.4670
log(sin(x))/3 0.0000
(x**6 + x)**2 0.0000
x*(x + cos(2)) 0.9197
<lambdifygenerated-1536>:2: RuntimeWarning: invalid value encountered in log
  return x*log(3*x) - 6*x
<lambdifygenerated-1543>:2: RuntimeWarning: invalid value encountered in log
  return log(tan(log(x)))
<lambdifygenerated-1544>:2: RuntimeWarning: invalid value encountered in log
  return x - 4*log(x + 4)
<lambdifygenerated-1565>:2: RuntimeWarning: invalid value encountered in arcsin
  return x*arcsin(2*x)
<lambdifygenerated-1569>:2: RuntimeWarning: invalid value encountered in sqrt
  return sqrt(x) + x
<lambdifygenerated-1570>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*x**2 + x - 5*log(cos(x))
<lambdifygenerated-1573>:2: RuntimeWarning: invalid value encountered in log
  return 5*x + (1/2)*log(x)
<lambdifygenerated-1575>:2: RuntimeWarning: invalid value encountered in power
  return (2/3)*x**(3/2) + 2*x + sin(x)
<lambdifygenerated-1576>:2: RuntimeWarning: invalid value encountered in log
  return (1/2)*log(tan(x))
<lambdifygenerated-1584>:2: RuntimeWarning: invalid value encountered in arccos
  return 3*x*arccos(x)
<lambdifygenerated-1586>:2: RuntimeWarning: invalid value encountered in log
  return x + cos(log(x))
<lambdifygenerated-1592>:2: RuntimeWarning: invalid value encountered in arccos
  return x**2*arccos(x)
<lambdifygenerated-1595>:2: RuntimeWarning: invalid value encountered in log
  return (1/3)*log(sin(x))
/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/sklearn/metrics/_regression.py:481: RuntimeWarning: invalid value encountered in sqrt
  output_errors = np.sqrt(output_errors)
mean: 0.25317907333374023
top: 0.9292064905166626
avaliation.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  query_tensors = list(torch.tensor(query_tensors))
Traceback (most recent call last):
  File "avaliation.py", line 129, in <module>
    response = ppo_trainer.generate(query.to(device), **generation_kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/trainer/ppo_trainer.py", line 457, in generate
    response = self.accelerator.unwrap_model(self.model).generate(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/trl/models/modeling_value_head.py", line 198, in generate
    return self.pretrained_model.generate(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/generation/utils.py", line 1648, in generate
    return self.sample(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/generation/utils.py", line 2730, in sample
    outputs = self(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 1076, in forward
    transformer_outputs = self.transformer(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 900, in forward
    outputs = block(
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 427, in forward
    feed_forward_hidden_states = self.mlp(hidden_states)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 355, in forward
    hidden_states = self.act(hidden_states)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/augusto/miniconda3/envs/sr/lib/python3.8/site-packages/transformers/activations.py", line 56, in forward
    return 0.5 * input * (1.0 + torch.tanh(math.sqrt(2.0 / math.pi) * (input + 0.044715 * torch.pow(input, 3.0))))
KeyboardInterrupt